{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/listItem/index.js\";\nvar _excluded = [\"containerElement\", \"containerStyle\", \"style\", \"onPress\", \"onLongPress\", \"underlayColor\", \"testID\"];\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Colors } from \"../../style\";\nimport { BaseComponent } from \"../../commons\";\nimport TouchableOpacity from \"../../components/touchableOpacity\";\nimport View from \"../view\";\nimport ListItemPart from \"./ListItemPart\";\n\nvar ListItem = function (_BaseComponent) {\n  _inherits(ListItem, _BaseComponent);\n\n  var _super = _createSuper(ListItem);\n\n  function ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pressed: false\n    };\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"onHideUnderlay\",\n    value: function onHideUnderlay() {\n      this.setPressed(false);\n    }\n  }, {\n    key: \"onShowUnderlay\",\n    value: function onShowUnderlay() {\n      this.setPressed(true);\n    }\n  }, {\n    key: \"setPressed\",\n    value: function setPressed(isPressed) {\n      this.setState({\n        pressed: isPressed\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          containerElement = _this$props.containerElement,\n          containerStyle = _this$props.containerStyle,\n          style = _this$props.style,\n          onPress = _this$props.onPress,\n          onLongPress = _this$props.onLongPress,\n          underlayColor = _this$props.underlayColor,\n          testID = _this$props.testID,\n          others = _objectWithoutProperties(_this$props, _excluded);\n\n      var pressed = this.state.pressed;\n      var pressedStyle = {\n        backgroundColor: underlayColor\n      };\n      var Container = onPress || onLongPress ? containerElement : View;\n      return React.createElement(Container, _extends({\n        activeOpacity: 1,\n        style: [this.styles.container, containerStyle],\n        onPress: onPress,\n        onLongPress: onLongPress,\n        onHideUnderlay: this.onHideUnderlay,\n        onShowUnderlay: this.onShowUnderlay,\n        testID: testID\n      }, others, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: [this.styles.innerContainer, style, pressed && pressedStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return ListItem;\n}(BaseComponent);\n\nListItem.displayName = 'ListItem';\nListItem.propTypes = {\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  containerElement: PropTypes.elementType\n};\nListItem.defaultProps = {\n  height: 63,\n  containerElement: TouchableOpacity,\n  underlayColor: Colors.dark70\n};\n\nfunction createStyles(_ref) {\n  var height = _ref.height;\n  return StyleSheet.create({\n    container: {\n      backgroundColor: Colors.white\n    },\n    innerContainer: {\n      flexDirection: 'row',\n      height: height\n    }\n  });\n}\n\nListItem.Part = ListItemPart;\nexport default ListItem;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/listItem/index.js"],"names":["PropTypes","React","Colors","BaseComponent","TouchableOpacity","View","ListItemPart","ListItem","props","state","pressed","styles","createStyles","setPressed","isPressed","setState","containerElement","containerStyle","style","onPress","onLongPress","underlayColor","testID","others","pressedStyle","backgroundColor","Container","container","onHideUnderlay","onShowUnderlay","innerContainer","children","displayName","propTypes","height","oneOfType","number","string","func","object","array","elementType","defaultProps","dark70","StyleSheet","create","white","flexDirection","Part"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport {Colors} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport TouchableOpacity from '../../components/touchableOpacity';\nimport View from '../view';\nimport ListItemPart from './ListItemPart';\n\n/**\n * @description: List item component to render inside a List component\n * @extends: TouchableOpacity\n * @extendsLink: docs/TouchableOpacity\n * @gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BasicListScreen.js\n */\nclass ListItem extends BaseComponent {\n  static displayName = 'ListItem';\n\n  static propTypes = {\n    /**\n     * the list item height\n     */\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /**\n     * action for when pressing the item\n     */\n    onPress: PropTypes.func,\n    /**\n     * action for when long pressing the item\n     */\n    onLongPress: PropTypes.func,\n    /**\n     * Additional styles for the top container\n     */\n    containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * The container element to wrap the ListItem\n     */\n    containerElement: PropTypes.elementType\n  };\n\n  static defaultProps = {\n    height: 63,\n    containerElement: TouchableOpacity,\n    underlayColor: Colors.dark70\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      pressed: false\n    };\n  }\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  onHideUnderlay() {\n    this.setPressed(false);\n  }\n  onShowUnderlay() {\n    this.setPressed(true);\n  }\n  setPressed(isPressed) {\n    this.setState({pressed: isPressed});\n  }\n\n  render() {\n    const {\n      containerElement,\n      containerStyle,\n      style,\n      onPress,\n      onLongPress,\n      underlayColor,\n      testID,\n      ...others\n    } = this.props;\n    const {pressed} = this.state;\n    const pressedStyle = {backgroundColor: underlayColor};\n    const Container = onPress || onLongPress ? containerElement : View;\n\n    return (\n      <Container\n        activeOpacity={1}\n        style={[this.styles.container, containerStyle]}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        onHideUnderlay={this.onHideUnderlay}\n        onShowUnderlay={this.onShowUnderlay}\n        testID={testID}\n        {...others}\n      >\n        <View style={[this.styles.innerContainer, style, pressed && pressedStyle]}>{this.props.children}</View>\n      </Container>\n    );\n  }\n}\n\nfunction createStyles({height}) {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: Colors.white\n    },\n    innerContainer: {\n      flexDirection: 'row',\n      height\n    }\n  });\n}\n\nListItem.Part = ListItemPart;\n\nexport default ListItem;\n"]},"metadata":{},"sourceType":"module"}