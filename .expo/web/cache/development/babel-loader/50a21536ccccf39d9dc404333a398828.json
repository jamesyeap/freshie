{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/floatingButton/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport Image from \"../image\";\n\nvar gradientImage = function gradientImage() {\n  return require(\"./gradient.png\");\n};\n\nvar FloatingButton = function (_PureComponent) {\n  _inherits(FloatingButton, _PureComponent);\n\n  var _super = _createSuper(FloatingButton);\n\n  function FloatingButton(props) {\n    var _this;\n\n    _classCallCheck(this, FloatingButton);\n\n    _this = _super.call(this, props);\n\n    _this.getAnimatedStyle = function () {\n      return {\n        opacity: _this.visibleAnimated,\n        transform: [{\n          translateY: _this.visibleAnimated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [Constants.screenHeight / 2, 0]\n          })\n        }]\n      };\n    };\n\n    _this.renderOverlay = function () {\n      if (!_this.props.hideBackgroundOverlay) {\n        return React.createElement(View, {\n          pointerEvents: 'none',\n          style: styles.image,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 14\n          }\n        }, React.createElement(Image, {\n          style: styles.image,\n          source: gradientImage(),\n          resizeMode: 'stretch',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    _this.initialVisibility = props.visible;\n    _this.firstLoad = true;\n    _this.visibleAnimated = new Animated.Value(Number(!!props.visible));\n    return _this;\n  }\n\n  _createClass(FloatingButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          duration = _this$props.duration;\n\n      if (prevProps.visible !== visible) {\n        Animated.timing(this.visibleAnimated, {\n          toValue: Number(!!visible),\n          duration: duration,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this$props2 = this.props,\n          bottomMargin = _this$props2.bottomMargin,\n          button = _this$props2.button,\n          secondaryButton = _this$props2.secondaryButton;\n      var bottom = secondaryButton ? Spacings.s4 : bottomMargin || Spacings.s8;\n      return React.createElement(Button, _extends({\n        size: Button.sizes.large,\n        style: [styles.shadow, {\n          marginTop: 16,\n          marginBottom: bottom\n        }]\n      }, button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"renderSecondaryButton\",\n    value: function renderSecondaryButton() {\n      var _this$props3 = this.props,\n          secondaryButton = _this$props3.secondaryButton,\n          bottomMargin = _this$props3.bottomMargin;\n      return React.createElement(Button, _extends({\n        link: true,\n        size: Button.sizes.large\n      }, secondaryButton, {\n        style: {\n          marginBottom: bottomMargin || Spacings.s7\n        },\n        enableShadow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          withoutAnimation = _this$props4.withoutAnimation,\n          secondaryButton = _this$props4.secondaryButton,\n          visible = _this$props4.visible;\n      this.firstLoad && !visible ? this.firstLoad = true : this.firstLoad = false;\n\n      if (this.firstLoad === true && !this.initialVisibility) {\n        return false;\n      }\n\n      if (!visible && withoutAnimation) {\n        return false;\n      }\n\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        animated: true,\n        style: [styles.container, this.getAnimatedStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 12\n        }\n      }, this.renderOverlay(), this.renderButton(), secondaryButton && this.renderSecondaryButton());\n    }\n  }]);\n\n  return FloatingButton;\n}(PureComponent);\n\nFloatingButton.propTypes = {\n  visible: _pt.bool,\n  bottomMargin: _pt.number,\n  duration: _pt.number,\n  withoutAnimation: _pt.bool,\n  hideBackgroundOverlay: _pt.bool,\n  testID: _pt.string\n};\nFloatingButton.displayName = 'FloatingButton';\nFloatingButton.defaultProps = {\n  duration: 300\n};\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    top: undefined,\n    alignItems: 'center',\n    zIndex: Constants.isAndroid ? 99 : undefined\n  }),\n  image: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    width: '100%',\n    height: '100%'\n  }),\n  shadow: {\n    shadowColor: Colors.dark40,\n    shadowOffset: {\n      height: 5,\n      width: 0\n    },\n    shadowOpacity: 0.35,\n    shadowRadius: 12,\n    elevation: 2\n  }\n});\nexport default asBaseComponent(FloatingButton);","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/floatingButton/index.js"],"names":["_pt","React","PureComponent","Constants","asBaseComponent","Colors","Spacings","View","Button","Image","gradientImage","require","FloatingButton","props","getAnimatedStyle","opacity","visibleAnimated","transform","translateY","interpolate","inputRange","outputRange","screenHeight","renderOverlay","hideBackgroundOverlay","styles","image","initialVisibility","visible","firstLoad","Animated","Value","Number","prevProps","duration","timing","toValue","useNativeDriver","start","bottomMargin","button","secondaryButton","bottom","s4","s8","sizes","large","shadow","marginTop","marginBottom","s7","withoutAnimation","container","renderButton","renderSecondaryButton","propTypes","bool","number","testID","string","displayName","defaultProps","StyleSheet","create","absoluteFillObject","top","undefined","alignItems","zIndex","isAndroid","width","height","shadowColor","dark40","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Animated } from 'react-native';\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport Image from \"../image\";\n\nconst gradientImage = () => require(\"./gradient.png\");\n/**\n * @description: Hovering button with gradient background\n * @modifiers: margin, background, color\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FloatingButtonScreen.tsx\n * @extends: Button\n * @extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/button/index.js\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/FloatingButton/FloatingButton.gif?raw=true\n */\n\n\nclass FloatingButton extends PureComponent {\n  static propTypes = {\n    /**\n       * Whether the button is visible\n       */\n    visible: _pt.bool,\n\n    /**\n       * The bottom margin of the button, or secondary button if passed\n       */\n    bottomMargin: _pt.number,\n\n    /**\n       * The duration of the button's animations (show/hide)\n       */\n    duration: _pt.number,\n\n    /**\n       * Whether to show/hide the button without animation\n       */\n    withoutAnimation: _pt.bool,\n\n    /**\n       * Whether to show background overlay\n       */\n    hideBackgroundOverlay: _pt.bool,\n\n    /**\n       * Used as testing identifier\n       */\n    testID: _pt.string\n  };\n  static displayName = 'FloatingButton';\n  static defaultProps = {\n    duration: 300\n  };\n\n  constructor(props) {\n    super(props);\n    this.initialVisibility = props.visible;\n    this.firstLoad = true;\n    this.visibleAnimated = new Animated.Value(Number(!!props.visible));\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      visible,\n      duration\n    } = this.props;\n\n    if (prevProps.visible !== visible) {\n      Animated.timing(this.visibleAnimated, {\n        toValue: Number(!!visible),\n        duration,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  getAnimatedStyle = () => {\n    return {\n      opacity: this.visibleAnimated,\n      transform: [{\n        translateY: this.visibleAnimated.interpolate({\n          inputRange: [0, 1],\n          outputRange: [Constants.screenHeight / 2, 0]\n        })\n      }]\n    };\n  };\n\n  renderButton() {\n    const {\n      bottomMargin,\n      button,\n      secondaryButton\n    } = this.props;\n    const bottom = secondaryButton ? Spacings.s4 : bottomMargin || Spacings.s8;\n    return <Button size={Button.sizes.large} style={[styles.shadow, {\n      marginTop: 16,\n      marginBottom: bottom\n    }]} {...button} />;\n  }\n\n  renderOverlay = () => {\n    if (!this.props.hideBackgroundOverlay) {\n      return <View pointerEvents={'none'} style={styles.image}>\n          <Image style={styles.image} source={gradientImage()} resizeMode={'stretch'} />\n        </View>;\n    }\n  };\n\n  renderSecondaryButton() {\n    const {\n      secondaryButton,\n      bottomMargin\n    } = this.props;\n    return <Button link size={Button.sizes.large} {...secondaryButton} style={{\n      marginBottom: bottomMargin || Spacings.s7\n    }} enableShadow={false} />;\n  }\n\n  render() {\n    const {\n      withoutAnimation,\n      secondaryButton,\n      visible\n    } = this.props; // NOTE: keep this.firstLoad as true as long as the visibility changed to true\n\n    this.firstLoad && !visible ? this.firstLoad = true : this.firstLoad = false; // NOTE: On first load, don't show if it should not be visible\n\n    if (this.firstLoad === true && !this.initialVisibility) {\n      return false;\n    }\n\n    if (!visible && withoutAnimation) {\n      return false;\n    }\n\n    return <View pointerEvents=\"box-none\" animated style={[styles.container, this.getAnimatedStyle()]}>\n        {this.renderOverlay()}\n        {this.renderButton()}\n        {secondaryButton && this.renderSecondaryButton()}\n      </View>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: { ...StyleSheet.absoluteFillObject,\n    top: undefined,\n    alignItems: 'center',\n    zIndex: Constants.isAndroid ? 99 : undefined\n  },\n  image: { ...StyleSheet.absoluteFillObject,\n    width: '100%',\n    height: '100%'\n  },\n  shadow: {\n    shadowColor: Colors.dark40,\n    shadowOffset: {\n      height: 5,\n      width: 0\n    },\n    shadowOpacity: 0.35,\n    shadowRadius: 12,\n    elevation: 2\n  }\n});\nexport default asBaseComponent(FloatingButton);"]},"metadata":{},"sourceType":"module"}