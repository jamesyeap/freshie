{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/slider/context/SliderGroup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport SliderContext from \"./SliderContext\";\nimport { Colors } from \"../../../style\";\nimport View from \"../../view\";\n\nvar SliderGroup = function (_Component) {\n  _inherits(SliderGroup, _Component);\n\n  var _super = _createSuper(SliderGroup);\n\n  function SliderGroup(props) {\n    var _this;\n\n    _classCallCheck(this, SliderGroup);\n\n    _this = _super.call(this, props);\n\n    _this.setValue = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _.invoke(_this.props, 'onValueChange', Colors.getHexString(value));\n    };\n\n    _this.state = {\n      value: Colors.getHSL(props.color)\n    };\n    return _this;\n  }\n\n  _createClass(SliderGroup, [{\n    key: \"getContextProviderValue\",\n    value: function getContextProviderValue() {\n      return {\n        value: this.state.value,\n        setValue: this.setValue\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, _extends({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }), React.createElement(SliderContext.Provider, {\n        value: this.getContextProviderValue(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return SliderGroup;\n}(Component);\n\nSliderGroup.displayName = 'IGNORE';\nSliderGroup.propTypes = {\n  color: PropTypes.string,\n  onValueChange: PropTypes.func\n};\nexport { SliderGroup as default };","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/slider/context/SliderGroup.js"],"names":["_","PropTypes","React","Component","SliderContext","Colors","View","SliderGroup","props","setValue","value","setState","invoke","getHexString","state","getHSL","color","getContextProviderValue","children","displayName","propTypes","string","onValueChange","func"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP;AACA,SAAQC,MAAR;AACA,OAAOC,IAAP;;IAGqBC,W;;;;;AAOnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAenBC,QAfmB,GAeR,UAACC,KAAD,EAAW;AACpB,YAAKC,QAAL,CAAc;AAACD,QAAAA,KAAK,EAALA;AAAD,OAAd;;AACAV,MAAAA,CAAC,CAACY,MAAF,CAAS,MAAKJ,KAAd,EAAqB,eAArB,EAAsCH,MAAM,CAACQ,YAAP,CAAoBH,KAApB,CAAtC;AACD,KAlBkB;;AAGjB,UAAKI,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAEL,MAAM,CAACU,MAAP,CAAcP,KAAK,CAACQ,KAApB;AADI,KAAb;AAHiB;AAMlB;;;;WAED,mCAA0B;AACxB,aAAO;AACLN,QAAAA,KAAK,EAAE,KAAKI,KAAL,CAAWJ,KADb;AAELD,QAAAA,QAAQ,EAAE,KAAKA;AAFV,OAAP;AAID;;;WAOD,kBAAS;AACP,aACE,oBAAC,IAAD,eAAU,KAAKD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,QAAA,KAAK,EAAE,KAAKS,uBAAL,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKT,KAAL,CAAWU,QADd,CADF,CADF;AAOD;;;;EAnCsCf,S;;AAApBI,W,CACZY,W,GAAc,Q;AADFZ,W,CAEZa,S,GAAY;AACjBJ,EAAAA,KAAK,EAAEf,SAAS,CAACoB,MADA;AAEjBC,EAAAA,aAAa,EAAErB,SAAS,CAACsB;AAFR,C;SAFAhB,W","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport SliderContext from './SliderContext';\nimport {Colors} from '../../../style';\nimport View from '../../view';\n\n\nexport default class SliderGroup extends Component {\n  static displayName = 'IGNORE';\n  static propTypes = {\n    color: PropTypes.string,\n    onValueChange: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: Colors.getHSL(props.color)\n    };\n  }\n\n  getContextProviderValue() {\n    return {\n      value: this.state.value,\n      setValue: this.setValue\n    };\n  }\n\n  setValue = (value) => {\n    this.setState({value});\n    _.invoke(this.props, 'onValueChange', Colors.getHexString(value));\n  }\n\n  render() {\n    return (\n      <View {...this.props}>\n        <SliderContext.Provider value={this.getContextProviderValue()}>\n          {this.props.children}\n        </SliderContext.Provider>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}