{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/progressBar/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport { BaseComponent } from \"../../commons\";\nimport View from \"../../components/view\";\nimport AnimatedScanner from \"../animatedScanner\";\nimport { Colors } from \"../../style\";\n\nvar ProgressBar = function (_BaseComponent) {\n  _inherits(ProgressBar, _BaseComponent);\n\n  var _super = _createSuper(ProgressBar);\n\n  function ProgressBar() {\n    _classCallCheck(this, ProgressBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProgressBar, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var progress = this.props.progress;\n      return _objectSpread({\n        accessible: true,\n        accessibilityLabel: \"progress bar. \" + Math.round(progress) + \"%\"\n      }, this.extractAccessibilityProps());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          height = _this$props.height,\n          backgroundColor = _this$props.backgroundColor,\n          progressBackgroundColor = _this$props.progressBackgroundColor,\n          containerStyle = _this$props.containerStyle,\n          style = _this$props.style;\n      var animatedScannerProps = AnimatedScanner.extractOwnProps(this.props);\n      var modifiers = this.extractModifierProps();\n      return React.createElement(View, _extends({\n        height: height\n      }, modifiers, {\n        style: [{\n          backgroundColor: backgroundColor\n        }, containerStyle]\n      }, this.getAccessibilityProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }), React.createElement(AnimatedScanner, _extends({}, animatedScannerProps, {\n        backgroundColor: progressBackgroundColor,\n        hideScannerLine: true,\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return ProgressBar;\n}(BaseComponent);\n\nProgressBar.displayName = 'ProgressBar';\nProgressBar.propTypes = _objectSpread(_objectSpread({}, AnimatedScanner.propTypes), {}, {\n  height: PropTypes.number,\n  backgroundColor: PropTypes.string,\n  progressBackgroundColor: PropTypes.string,\n  containerStyle: ViewPropTypes.style\n});\nProgressBar.defaultProps = {\n  backgroundColor: Colors.dark60,\n  progressBackgroundColor: Colors.dark10\n};\nexport { ProgressBar as default };","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/progressBar/index.js"],"names":["React","ViewPropTypes","PropTypes","BaseComponent","View","AnimatedScanner","Colors","ProgressBar","progress","props","accessible","accessibilityLabel","Math","round","extractAccessibilityProps","height","backgroundColor","progressBackgroundColor","containerStyle","style","animatedScannerProps","extractOwnProps","modifiers","extractModifierProps","getAccessibilityProps","displayName","propTypes","number","string","defaultProps","dark60","dark10"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;SACQC,a;AACR,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,aAAR;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;AACA,SAAQC,MAAR;;IASqBC,W;;;;;;;;;;;;;WA2BnB,iCAAwB;AACtB,UAAOC,QAAP,GAAmB,KAAKC,KAAxB,CAAOD,QAAP;AAEA;AACEE,QAAAA,UAAU,EAAE,IADd;AAEEC,QAAAA,kBAAkB,qBAAmBC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAnB;AAFpB,SAGK,KAAKM,yBAAL,EAHL;AAKD;;;WAED,kBAAS;AACP,wBAAkF,KAAKL,KAAvF;AAAA,UAAOM,MAAP,eAAOA,MAAP;AAAA,UAAeC,eAAf,eAAeA,eAAf;AAAA,UAAgCC,uBAAhC,eAAgCA,uBAAhC;AAAA,UAAyDC,cAAzD,eAAyDA,cAAzD;AAAA,UAAyEC,KAAzE,eAAyEA,KAAzE;AACA,UAAMC,oBAAoB,GAAGf,eAAe,CAACgB,eAAhB,CAAgC,KAAKZ,KAArC,CAA7B;AACA,UAAMa,SAAS,GAAG,KAAKC,oBAAL,EAAlB;AAEA,aACE,oBAAC,IAAD;AACE,QAAA,MAAM,EAAER;AADV,SAEMO,SAFN;AAGE,QAAA,KAAK,EAAE,CAAC;AAACN,UAAAA,eAAe,EAAfA;AAAD,SAAD,EAAoBE,cAApB;AAHT,SAIM,KAAKM,qBAAL,EAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAME,oBAAC,eAAD,eACMJ,oBADN;AAEE,QAAA,eAAe,EAAEH,uBAFnB;AAGE,QAAA,eAAe,MAHjB;AAIE,QAAA,KAAK,EAAEE,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF;AAeD;;;;EAzDsChB,a;;AAApBI,W,CACZkB,W,GAAc,a;AADFlB,W,CAEZmB,S,mCACFrB,eAAe,CAACqB,S;AAInBX,EAAAA,MAAM,EAAEb,SAAS,CAACyB,M;AAIlBX,EAAAA,eAAe,EAAEd,SAAS,CAAC0B,M;AAI3BX,EAAAA,uBAAuB,EAAEf,SAAS,CAAC0B,M;AAInCV,EAAAA,cAAc,EAAEjB,aAAa,CAACkB;;AAnBbZ,W,CAsBZsB,Y,GAAe;AACpBb,EAAAA,eAAe,EAAEV,MAAM,CAACwB,MADJ;AAEpBb,EAAAA,uBAAuB,EAAEX,MAAM,CAACyB;AAFZ,C;SAtBHxB,W","sourcesContent":["import React from 'react';\nimport {ViewPropTypes} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {BaseComponent} from '../../commons';\nimport View from '../../components/view';\nimport AnimatedScanner from '../animatedScanner';\nimport {Colors} from '../../style';\n\n/**\n * @description: Animated progress bar\n * @gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ProgressBarScreen.js\n * @extends: AnimatedScanner\n * @extendsLink: https://wix-private.github.io/wix-react-native-ui-lib/docs/public/AnimatedScanner/\n */\nexport default class ProgressBar extends BaseComponent {\n  static displayName = 'ProgressBar';\n  static propTypes = {\n    ...AnimatedScanner.propTypes,\n    /**\n     * height of the progress bar\n     */\n    height: PropTypes.number,\n    /**\n     * background color of the component\n     */\n    backgroundColor: PropTypes.string,\n    /**\n     * the progress background color\n     */\n    progressBackgroundColor: PropTypes.string,\n    /**\n     * the progress bar container style\n     */\n    containerStyle: ViewPropTypes.style\n  };\n\n  static defaultProps = {\n    backgroundColor: Colors.dark60,\n    progressBackgroundColor: Colors.dark10\n  };\n\n  getAccessibilityProps() {\n    const {progress} = this.props;\n\n    return {\n      accessible: true,\n      accessibilityLabel: `progress bar. ${Math.round(progress)}%`,\n      ...this.extractAccessibilityProps()\n    };\n  }\n\n  render() {\n    const {height, backgroundColor, progressBackgroundColor, containerStyle, style} = this.props;\n    const animatedScannerProps = AnimatedScanner.extractOwnProps(this.props);\n    const modifiers = this.extractModifierProps();\n\n    return (\n      <View\n        height={height}\n        {...modifiers}\n        style={[{backgroundColor}, containerStyle]}\n        {...this.getAccessibilityProps()}\n      >\n        <AnimatedScanner\n          {...animatedScannerProps}\n          backgroundColor={progressBackgroundColor}\n          hideScannerLine\n          style={style}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}