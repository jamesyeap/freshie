{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/incubator/TabController/TabBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport Reanimated, { Easing } from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport TabBarItem from \"./TabBarItem\";\nimport { asBaseComponent, forwardRef } from \"../../commons\";\nimport View from \"../../components/view\";\nimport { Colors, Spacings } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { LogService } from \"../../services\";\nvar DEFAULT_HEIGHT = 48;\nvar INDICATOR_INSET = Spacings.s4;\nvar Code = Reanimated.Code,\n    Clock = Reanimated.Clock,\n    Value = Reanimated.Value,\n    and = Reanimated.and,\n    eq = Reanimated.eq,\n    neq = Reanimated.neq,\n    cond = Reanimated.cond,\n    stopClock = Reanimated.stopClock,\n    startClock = Reanimated.startClock,\n    interpolate = Reanimated.interpolate,\n    Extrapolate = Reanimated.Extrapolate,\n    timing = Reanimated.timing,\n    block = Reanimated.block,\n    set = Reanimated.set;\n\nvar TabBar = function (_PureComponent) {\n  _inherits(TabBar, _PureComponent);\n\n  var _super = _createSuper(TabBar);\n\n  function TabBar(props, context) {\n    var _this;\n\n    _classCallCheck(this, TabBar);\n\n    _this = _super.call(this, props, context);\n\n    _this.focusSelected = function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          index = _ref2[0];\n\n      var _this$state = _this.state,\n          itemsOffsets = _this$state.itemsOffsets,\n          itemsWidths = _this$state.itemsWidths;\n      var itemOffset = itemsOffsets[index];\n      var itemWidth = itemsWidths[index];\n\n      if (itemOffset && itemWidth) {\n        if (itemOffset < _this.tabBarScrollOffset) {\n          _this.tabBar.current.scrollTo({\n            x: itemOffset - itemWidth\n          });\n        } else if (itemOffset + itemWidth > _this.tabBarScrollOffset + _this.containerWidth) {\n          var offsetChange = Math.max(0, itemOffset - (_this.tabBarScrollOffset + _this.containerWidth));\n\n          _this.tabBar.current.scrollTo({\n            x: _this.tabBarScrollOffset + offsetChange + itemWidth\n          });\n        }\n      }\n    };\n\n    _this.onItemLayout = function (itemWidth, itemIndex) {\n      _this._itemsWidths[itemIndex] = itemWidth;\n\n      if (!_.includes(_this._itemsWidths, null)) {\n        var selectedIndex = _this.context.selectedIndex;\n\n        var itemsOffsets = _.map(_this._itemsWidths, function (_w, index) {\n          return INDICATOR_INSET + _.sum(_.take(_this._itemsWidths, index));\n        });\n\n        var itemsWidths = _.map(_this._itemsWidths, function (width) {\n          return width - INDICATOR_INSET * 2;\n        });\n\n        _this.setState({\n          itemsWidths: itemsWidths,\n          itemsOffsets: itemsOffsets\n        });\n\n        var selectedItemOffset = itemsOffsets[selectedIndex] - INDICATOR_INSET;\n\n        if (selectedItemOffset + _this._itemsWidths[selectedIndex] > Constants.screenWidth) {\n          _this.tabBar.current.scrollTo({\n            x: selectedItemOffset,\n            animated: true\n          });\n        }\n      }\n    };\n\n    _this.onScroll = function (_ref3) {\n      var contentOffset = _ref3.nativeEvent.contentOffset;\n      _this.tabBarScrollOffset = contentOffset.x;\n    };\n\n    _this.onContentSizeChange = function (width) {\n      if (width > _this.containerWidth) {\n        _this.setState({\n          scrollEnabled: true\n        });\n      }\n    };\n\n    _this.renderCodeBlock = function () {\n      var _this$context = _this.context,\n          carouselOffset = _this$context.carouselOffset,\n          asCarousel = _this$context.asCarousel,\n          currentPage = _this$context.currentPage;\n      var _this$state2 = _this.state,\n          itemsWidths = _this$state2.itemsWidths,\n          itemsOffsets = _this$state2.itemsOffsets;\n      var nodes = [];\n\n      if (asCarousel) {\n        nodes.push(set(_this._indicatorOffset, interpolate(carouselOffset, {\n          inputRange: itemsOffsets.map(function (_value, index) {\n            return index * Constants.screenWidth;\n          }),\n          outputRange: itemsOffsets,\n          extrapolate: Extrapolate.CLAMP\n        })), set(_this._indicatorWidth, interpolate(carouselOffset, {\n          inputRange: itemsWidths.map(function (_value, index) {\n            return index * Constants.screenWidth;\n          }),\n          outputRange: itemsWidths,\n          extrapolate: Extrapolate.CLAMP\n        })));\n      } else {\n        nodes.push(set(_this._indicatorOffset, runIndicatorTimer(new Clock(), currentPage, itemsOffsets)), set(_this._indicatorWidth, runIndicatorTimer(new Clock(), currentPage, itemsWidths)));\n      }\n\n      nodes.push(Reanimated.onChange(currentPage, Reanimated.call([currentPage], _this.focusSelected)));\n      return block(nodes);\n    };\n\n    if (_this.props.children) {\n      LogService.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    var itemsCount = _this.itemsCount;\n    _this.tabBar = React.createRef();\n    _this.tabBarScrollOffset = 0;\n    _this._itemsWidths = _.times(itemsCount, function () {\n      return null;\n    });\n    _this._indicatorOffset = new Value(0);\n    _this._indicatorWidth = new Value(0);\n    _this._indicatorTransitionStyle = {\n      width: _this._indicatorWidth,\n      left: _this._indicatorOffset\n    };\n    _this.state = {\n      scrollEnabled: false,\n      itemsWidths: undefined\n    };\n\n    _this.registerTabItems();\n\n    return _this;\n  }\n\n  _createClass(TabBar, [{\n    key: \"containerWidth\",\n    get: function get() {\n      return this.props.containerWidth || Constants.screenWidth;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return _.filter(this.props.children, function (child) {\n        return !!child;\n      });\n    }\n  }, {\n    key: \"itemsCount\",\n    get: function get() {\n      var items = this.props.items;\n\n      if (items) {\n        return _.size(items);\n      } else {\n        return React.Children.count(this.children);\n      }\n    }\n  }, {\n    key: \"registerTabItems\",\n    value: function registerTabItems() {\n      var registerTabItems = this.context.registerTabItems;\n      var items = this.props.items;\n      var ignoredItems = [];\n      var itemsCount;\n\n      if (items) {\n        itemsCount = _.size(items);\n\n        _.forEach(items, function (item, index) {\n          if (item.ignore) {\n            ignoredItems.push(index);\n          }\n        });\n      } else {\n        itemsCount = React.Children.count(this.children);\n        React.Children.toArray(this.children).forEach(function (child, index) {\n          if (child.props.ignore) {\n            ignoredItems.push(index);\n          }\n        });\n      }\n\n      registerTabItems(itemsCount, ignoredItems);\n    }\n  }, {\n    key: \"renderSelectedIndicator\",\n    value: function renderSelectedIndicator() {\n      var itemsWidths = this.state.itemsWidths;\n      var indicatorStyle = this.props.indicatorStyle;\n\n      if (itemsWidths) {\n        return React.createElement(Reanimated.View, {\n          style: [styles.selectedIndicator, indicatorStyle, this._indicatorTransitionStyle],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 14\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderTabBarItems\",\n    value: function renderTabBarItems() {\n      var _this2 = this;\n\n      var itemStates = this.context.itemStates;\n      var _this$props = this.props,\n          items = _this$props.items,\n          labelColor = _this$props.labelColor,\n          selectedLabelColor = _this$props.selectedLabelColor,\n          labelStyle = _this$props.labelStyle,\n          uppercase = _this$props.uppercase,\n          iconColor = _this$props.iconColor,\n          selectedIconColor = _this$props.selectedIconColor,\n          activeBackgroundColor = _this$props.activeBackgroundColor;\n\n      if (_.isEmpty(itemStates)) {\n        return;\n      }\n\n      if (items) {\n        return _.map(items, function (item, index) {\n          return React.createElement(TabBarItem, _extends({\n            labelColor: labelColor,\n            selectedLabelColor: selectedLabelColor,\n            labelStyle: labelStyle,\n            uppercase: uppercase,\n            iconColor: iconColor,\n            selectedIconColor: selectedIconColor,\n            activeBackgroundColor: activeBackgroundColor,\n            key: item.label\n          }, item, _this2.context, {\n            index: index,\n            state: itemStates[index],\n            onLayout: _this2.onItemLayout,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 11\n            }\n          }));\n        });\n      } else {\n        if (this.tabBarItems) {\n          return this.tabBarItems;\n        }\n\n        this.tabBarItems = React.Children.map(this.children, function (child, index) {\n          return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n            labelColor: labelColor,\n            selectedLabelColor: selectedLabelColor,\n            labelStyle: labelStyle,\n            uppercase: uppercase,\n            iconColor: iconColor,\n            selectedIconColor: selectedIconColor,\n            activeBackgroundColor: activeBackgroundColor\n          }, child.props), _this2.context), {}, {\n            index: index,\n            state: itemStates[index],\n            onLayout: _this2.onItemLayout\n          }));\n        });\n        return this.tabBarItems;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          height = _this$props2.height,\n          enableShadow = _this$props2.enableShadow,\n          containerStyle = _this$props2.containerStyle;\n      var _this$state3 = this.state,\n          itemsWidths = _this$state3.itemsWidths,\n          scrollEnabled = _this$state3.scrollEnabled;\n      return React.createElement(View, {\n        style: [styles.container, enableShadow && styles.containerShadow, {\n          width: this.containerWidth\n        }, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 7\n        }\n      }, React.createElement(ScrollView, {\n        ref: this.tabBar,\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.tabBarScroll,\n        contentContainerStyle: {\n          minWidth: this.containerWidth\n        },\n        scrollEnabled: scrollEnabled,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        scrollEventThrottle: 100,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: [styles.tabBar, height && {\n          height: height\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }\n      }, this.renderTabBarItems()), this.renderSelectedIndicator()), _.size(itemsWidths) > 1 && React.createElement(Code, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 37\n        }\n      }, this.renderCodeBlock));\n    }\n  }]);\n\n  return TabBar;\n}(PureComponent);\n\nTabBar.displayName = 'IGNORE';\nTabBar.contextType = TabBarContext;\nTabBar.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape(TabBarItem.propTypes)),\n  height: PropTypes.number,\n  enableShadow: PropTypes.bool,\n  indicatorStyle: ViewPropTypes.style,\n  labelStyle: RNText.propTypes.style,\n  labelColor: PropTypes.string,\n  selectedLabelColor: PropTypes.string,\n  uppercase: PropTypes.bool,\n  iconColor: PropTypes.string,\n  selectedIconColor: PropTypes.string,\n  activeBackgroundColor: PropTypes.string,\n  containerWidth: PropTypes.number\n};\nTabBar.defaultProps = {};\nvar styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScroll: {\n    backgroundColor: Colors.white\n  },\n  tabBarScrollContent: {\n    minWidth: Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.blue30\n  },\n  containerShadow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: Colors.dark10,\n      shadowOpacity: 0.05,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 6,\n        width: 0\n      }\n    },\n    android: {\n      elevation: 5,\n      backgroundColor: Colors.white\n    }\n  }))\n});\n\nfunction runIndicatorTimer(clock, currentPage, values) {\n  var state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n  var config = {\n    duration: 200,\n    toValue: new Value(100),\n    easing: Easing.inOut(Easing.ease)\n  };\n  return block([].concat(_toConsumableArray(_.map(values, function (_value, index) {\n    return cond(and(eq(currentPage, index), neq(config.toValue, index)), [set(state.finished, 0), set(state.time, 0), set(state.frameTime, 0), set(config.toValue, index), startClock(clock)]);\n  })), [timing(clock, state, config), cond(state.finished, stopClock(clock)), interpolate(state.position, {\n    inputRange: _.times(values.length),\n    outputRange: values,\n    extrapolate: Extrapolate.CLAMP\n  })]));\n}\n\nexport default asBaseComponent(forwardRef(TabBar));","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/incubator/TabController/TabBar.js"],"names":["React","PureComponent","ViewPropTypes","Reanimated","Easing","PropTypes","_","TabBarContext","TabBarItem","asBaseComponent","forwardRef","View","Colors","Spacings","Constants","LogService","DEFAULT_HEIGHT","INDICATOR_INSET","s4","Code","Clock","Value","and","eq","neq","cond","stopClock","startClock","interpolate","Extrapolate","timing","block","set","TabBar","props","context","focusSelected","index","state","itemsOffsets","itemsWidths","itemOffset","itemWidth","tabBarScrollOffset","tabBar","current","scrollTo","x","containerWidth","offsetChange","Math","max","onItemLayout","itemIndex","_itemsWidths","includes","selectedIndex","map","_w","sum","take","width","setState","selectedItemOffset","screenWidth","animated","onScroll","contentOffset","nativeEvent","onContentSizeChange","scrollEnabled","renderCodeBlock","carouselOffset","asCarousel","currentPage","nodes","push","_indicatorOffset","inputRange","_value","outputRange","extrapolate","CLAMP","_indicatorWidth","runIndicatorTimer","onChange","call","children","warn","itemsCount","createRef","times","_indicatorTransitionStyle","left","undefined","registerTabItems","filter","child","items","size","Children","count","ignoredItems","forEach","item","ignore","toArray","indicatorStyle","styles","selectedIndicator","itemStates","labelColor","selectedLabelColor","labelStyle","uppercase","iconColor","selectedIconColor","activeBackgroundColor","isEmpty","label","tabBarItems","cloneElement","onLayout","height","enableShadow","containerStyle","container","containerShadow","tabBarScroll","minWidth","renderTabBarItems","renderSelectedIndicator","displayName","contextType","propTypes","arrayOf","shape","number","bool","style","RNText","string","defaultProps","StyleSheet","create","zIndex","flex","backgroundColor","white","flexDirection","justifyContent","tabBarScrollContent","tab","alignItems","position","bottom","blue30","Platform","select","ios","shadowColor","dark10","shadowOpacity","shadowRadius","shadowOffset","android","elevation","clock","values","finished","time","frameTime","config","duration","toValue","easing","inOut","ease","length"],"mappings":"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","sourcesContent":["// TODO: support commented props\n// TODO: disable scroll when content width is shorter than screen width\nimport React, {PureComponent} from 'react';\nimport {StyleSheet, ScrollView, ViewPropTypes, Platform, Text as RNText} from 'react-native';\nimport Reanimated, {Easing} from 'react-native-reanimated';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport TabBarContext from './TabBarContext';\nimport TabBarItem from './TabBarItem';\n// import ReanimatedObject from './ReanimatedObject';\nimport {asBaseComponent, forwardRef} from '../../commons';\nimport View from '../../components/view';\nimport {Colors, Spacings} from '../../style';\nimport {Constants} from '../../helpers';\nimport {LogService} from '../../services';\n\nconst DEFAULT_HEIGHT = 48;\nconst INDICATOR_INSET = Spacings.s4;\nconst {\n  Code,\n  Clock,\n  Value,\n  and,\n  eq,\n  neq,\n  cond,\n  stopClock,\n  startClock,\n  interpolate,\n  Extrapolate,\n  timing,\n  block,\n  set\n} = Reanimated;\n\n/**\n * @description: TabController's TabBar component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/incubatorScreens/TabControllerScreen/index.js\n */\nclass TabBar extends PureComponent {\n  static displayName = 'IGNORE';\n  static contextType = TabBarContext;\n\n  static propTypes = {\n    /**\n     * The list of tab bar items\n     */\n    items: PropTypes.arrayOf(PropTypes.shape(TabBarItem.propTypes)),\n    /**\n     * Tab Bar height\n     */\n    height: PropTypes.number,\n    /**\n     * Show Tab Bar bottom shadow\n     */\n    enableShadow: PropTypes.bool,\n    // /**\n    //  * The minimum number of tabs to render in scroll mode\n    //  */\n    // minTabsForScroll: PropTypes.number,\n    /**\n     * custom style for the selected indicator\n     */\n    indicatorStyle: ViewPropTypes.style,\n    /**\n     * custom label style\n     */\n    labelStyle: RNText.propTypes.style,\n    /**\n     * the default label color\n     */\n    labelColor: PropTypes.string,\n    /**\n     * the selected label color\n     */\n    selectedLabelColor: PropTypes.string,\n    /**\n     * whether to change the text to uppercase\n     */\n    uppercase: PropTypes.bool,\n    /**\n     * icon tint color\n     */\n    iconColor: PropTypes.string,\n    /**\n     * icon selected tint color\n     */\n    selectedIconColor: PropTypes.string,\n    /**\n     * TODO: rename to feedbackColor\n     * Apply background color on press for TouchableOpacity\n     */\n    activeBackgroundColor: PropTypes.string,\n    /**\n     * The TabBar container width\n     */\n    containerWidth: PropTypes.number\n  };\n\n  static defaultProps = {\n    // containerWidth: Constants.screenWidth\n  };\n\n  constructor(props, context) {\n    super(props, context);\n\n    if (this.props.children) {\n      LogService.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    const itemsCount = this.itemsCount;\n\n    this.tabBar = React.createRef();\n    this.tabBarScrollOffset = 0;\n\n    this._itemsWidths = _.times(itemsCount, () => null);\n    this._indicatorOffset = new Value(0);\n    this._indicatorWidth = new Value(0);\n\n    this._indicatorTransitionStyle = {\n      width: this._indicatorWidth,\n      left: this._indicatorOffset\n    };\n\n    this.state = {\n      scrollEnabled: false,\n      itemsWidths: undefined\n    };\n\n    this.registerTabItems();\n  }\n\n  get containerWidth() {\n    return this.props.containerWidth || Constants.screenWidth;\n  }\n\n  get children() {\n    return _.filter(this.props.children, child => !!child);\n  }\n\n  get itemsCount() {\n    const {items} = this.props;\n    if (items) {\n      return _.size(items);\n    } else {\n      return React.Children.count(this.children);\n    }\n  }\n\n  registerTabItems() {\n    const {registerTabItems} = this.context;\n    const {items} = this.props;\n    const ignoredItems = [];\n    let itemsCount;\n\n    if (items) {\n      itemsCount = _.size(items);\n      _.forEach(items, (item, index) => {\n        if (item.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n      // TODO: deprecate with props.children\n    } else {\n      itemsCount = React.Children.count(this.children);\n      React.Children.toArray(this.children).forEach((child, index) => {\n        if (child.props.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n    }\n\n    registerTabItems(itemsCount, ignoredItems);\n  }\n\n  // TODO: move this logic into a ScrollPresenter or something\n  focusSelected = ([index]) => {\n    const {itemsOffsets, itemsWidths} = this.state;\n    const itemOffset = itemsOffsets[index];\n    const itemWidth = itemsWidths[index];\n    if (itemOffset && itemWidth) {\n      if (itemOffset < this.tabBarScrollOffset) {\n        this.tabBar.current.scrollTo({x: itemOffset - itemWidth});\n      } else if (itemOffset + itemWidth > this.tabBarScrollOffset + this.containerWidth) {\n        const offsetChange = Math.max(0, itemOffset - (this.tabBarScrollOffset + this.containerWidth));\n        this.tabBar.current.scrollTo({x: this.tabBarScrollOffset + offsetChange + itemWidth});\n      }\n    }\n  }\n\n  onItemLayout = (itemWidth, itemIndex) => {\n    this._itemsWidths[itemIndex] = itemWidth;\n    if (!_.includes(this._itemsWidths, null)) {\n      const {selectedIndex} = this.context;\n      const itemsOffsets = _.map(this._itemsWidths,\n        (_w, index) => INDICATOR_INSET + _.sum(_.take(this._itemsWidths, index)));\n      const itemsWidths = _.map(this._itemsWidths, width => width - INDICATOR_INSET * 2);\n\n      this.setState({itemsWidths, itemsOffsets});\n      const selectedItemOffset = itemsOffsets[selectedIndex] - INDICATOR_INSET;\n      \n      if (selectedItemOffset + this._itemsWidths[selectedIndex] > Constants.screenWidth) {  \n        this.tabBar.current.scrollTo({x: selectedItemOffset, animated: true});\n      }\n    }\n  };\n\n  onScroll = ({nativeEvent: {contentOffset}}) => {\n    this.tabBarScrollOffset = contentOffset.x;\n  }\n\n  onContentSizeChange = width => {\n    if (width > this.containerWidth) {\n      this.setState({scrollEnabled: true});\n    }\n  };\n\n  renderSelectedIndicator() {\n    const {itemsWidths} = this.state;\n    const {indicatorStyle} = this.props;\n    if (itemsWidths) {\n      return <Reanimated.View style={[styles.selectedIndicator, indicatorStyle, this._indicatorTransitionStyle]}/>;\n    }\n  }\n\n  renderTabBarItems() {\n    const {itemStates} = this.context;\n    const {\n      items,\n      labelColor,\n      selectedLabelColor,\n      labelStyle,\n      uppercase,\n      iconColor,\n      selectedIconColor,\n      activeBackgroundColor\n    } = this.props;\n\n    if (_.isEmpty(itemStates)) {\n      return;\n    }\n\n    if (items) {\n      return _.map(items, (item, index) => {\n        return (\n          <TabBarItem\n            labelColor={labelColor}\n            selectedLabelColor={selectedLabelColor}\n            labelStyle={labelStyle}\n            uppercase={uppercase}\n            iconColor={iconColor}\n            selectedIconColor={selectedIconColor}\n            activeBackgroundColor={activeBackgroundColor}\n            key={item.label}\n            {...item}\n            {...this.context}\n            index={index}\n            state={itemStates[index]}\n            onLayout={this.onItemLayout}\n          />\n        );\n      });\n    } else {\n      // TODO: Remove once props.children is deprecated\n      if (this.tabBarItems) {\n        return this.tabBarItems;\n      }\n\n      this.tabBarItems = React.Children.map(this.children, (child, index) => {\n        return React.cloneElement(child, {\n          labelColor,\n          selectedLabelColor,\n          labelStyle,\n          uppercase,\n          iconColor,\n          selectedIconColor,\n          activeBackgroundColor,\n          ...child.props,\n          ...this.context,\n          index,\n          state: itemStates[index],\n          onLayout: this.onItemLayout\n        });\n      });\n      return this.tabBarItems;\n    }\n  }\n\n  renderCodeBlock = () => {\n    const {carouselOffset, asCarousel, currentPage} = this.context;\n    const {itemsWidths, itemsOffsets} = this.state;\n    const nodes = [];\n\n    if (asCarousel) {\n      nodes.push(set(this._indicatorOffset,\n        interpolate(carouselOffset, {\n          inputRange: itemsOffsets.map((_value, index) => index * Constants.screenWidth),\n          outputRange: itemsOffsets,\n          extrapolate: Extrapolate.CLAMP\n        })),\n      set(this._indicatorWidth,\n        interpolate(carouselOffset, {\n          inputRange: itemsWidths.map((_value, index) => index * Constants.screenWidth),\n          outputRange: itemsWidths,\n          extrapolate: Extrapolate.CLAMP\n        })));\n    } else {\n      nodes.push(set(this._indicatorOffset, runIndicatorTimer(new Clock(), currentPage, itemsOffsets)),\n        set(this._indicatorWidth, runIndicatorTimer(new Clock(), currentPage, itemsWidths)));\n    }\n\n    nodes.push(Reanimated.onChange(currentPage, Reanimated.call([currentPage], this.focusSelected)));\n\n    return block(nodes);\n  };\n\n  render() {\n    const {height, enableShadow, containerStyle} = this.props;\n    const {itemsWidths, scrollEnabled} = this.state;\n    return (\n      <View\n        style={[styles.container, enableShadow && styles.containerShadow, {width: this.containerWidth}, containerStyle]}\n      >\n        <ScrollView\n          ref={this.tabBar}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          style={styles.tabBarScroll}\n          contentContainerStyle={{minWidth: this.containerWidth}}\n          scrollEnabled={scrollEnabled}\n          onContentSizeChange={this.onContentSizeChange}\n          onScroll={this.onScroll}\n          scrollEventThrottle={100}\n        >\n          <View style={[styles.tabBar, height && {height}]}>{this.renderTabBarItems()}</View>\n          {this.renderSelectedIndicator()}\n        </ScrollView>\n        {_.size(itemsWidths) > 1 && <Code>{this.renderCodeBlock}</Code>}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    flex: 1,\n    backgroundColor: Colors.white,\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScroll: {\n    backgroundColor: Colors.white\n  },\n  tabBarScrollContent: {\n    minWidth: Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.blue30\n  },\n  containerShadow: {\n    ...Platform.select({\n      ios: {\n        shadowColor: Colors.dark10,\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        shadowOffset: {height: 6, width: 0}\n      },\n      android: {\n        elevation: 5,\n        backgroundColor: Colors.white\n      }\n    })\n  }\n});\n\nfunction runIndicatorTimer(clock, currentPage, values) {\n  const state = {\n    finished: new Value(0),\n    position: new Value(0),\n    time: new Value(0),\n    frameTime: new Value(0)\n  };\n\n  const config = {\n    duration: 200,\n    toValue: new Value(100),\n    easing: Easing.inOut(Easing.ease)\n  };\n\n  return block([\n    ..._.map(values, (_value, index) => {\n      return cond(and(eq(currentPage, index), neq(config.toValue, index)), [\n        set(state.finished, 0),\n        set(state.time, 0),\n        set(state.frameTime, 0),\n        set(config.toValue, index),\n        startClock(clock)\n      ]);\n    }),\n    timing(clock, state, config),\n    cond(state.finished, stopClock(clock)),\n    interpolate(state.position, {\n      inputRange: _.times(values.length),\n      outputRange: values,\n      extrapolate: Extrapolate.CLAMP\n    })\n  ]);\n}\n\nexport default asBaseComponent(forwardRef(TabBar));\n"]},"metadata":{},"sourceType":"module"}