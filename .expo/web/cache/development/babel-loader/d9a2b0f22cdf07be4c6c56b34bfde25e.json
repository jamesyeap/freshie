{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/picker/NativePicker.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport { BaseComponent } from \"../../commons\";\nimport TextField from \"../textField\";\nimport PickerDialog from \"./PickerDialog\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { Colors } from \"../../style\";\nimport { WheelPicker } from \"../../nativeComponents\";\n\nvar NativePicker = function (_BaseComponent) {\n  _inherits(NativePicker, _BaseComponent);\n\n  var _super = _createSuper(NativePicker);\n\n  function NativePicker() {\n    var _this;\n\n    _classCallCheck(this, NativePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedValue: _this.props.value,\n      items: _this.extractPickerItems(_this.props),\n      showDialog: false\n    };\n    _this.NUMBER_OF_ROWS = 5;\n    _this.ROW_HEIGHT = 44;\n    _this.MENU_HEIGHT = 44;\n    _this.PICKER_HEIGHT = _this.NUMBER_OF_ROWS * _this.ROW_HEIGHT + _this.MENU_HEIGHT;\n\n    _this.onCancel = function () {\n      _this.setState({\n        selectedValue: _this.props.value\n      });\n\n      _this.toggleDialog(false);\n    };\n\n    _this.onDone = function () {\n      var _this$state = _this.state,\n          selectedValue = _this$state.selectedValue,\n          items = _this$state.items;\n\n      _.invoke(_this.props, 'onChange', _.isUndefined(selectedValue) ? _.get(items, '[0].value') : selectedValue);\n\n      _this.toggleDialog(false);\n    };\n\n    _this.onValueChange = function (selectedValue) {\n      _this.setState({\n        selectedValue: selectedValue\n      });\n    };\n\n    _this.toggleDialog = function (showDialog) {\n      _this.setState({\n        showDialog: showDialog\n      });\n    };\n\n    _this.renderPickerDialog = function () {\n      var _this$state2 = _this.state,\n          selectedValue = _this$state2.selectedValue,\n          showDialog = _this$state2.showDialog;\n      return React.createElement(PickerDialog, _extends({\n        height: _this.PICKER_HEIGHT + _this.MENU_HEIGHT\n      }, _this.getThemeProps(), {\n        visible: showDialog,\n        panDirection: null,\n        onDismiss: _this.onCancel,\n        onValueChange: _this.onValueChange,\n        selectedValue: selectedValue,\n        onDone: _this.onDone,\n        onCancel: _this.onCancel,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(NativePicker, [{\n    key: \"extractPickerItems\",\n    value: function extractPickerItems(props) {\n      var children = props.children,\n          useNativePicker = props.useNativePicker;\n\n      if (useNativePicker) {\n        var items = React.Children.map(children, function (child) {\n          return {\n            value: child.props.value,\n            label: child.props.label\n          };\n        });\n        return items;\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      var _this$props = this.props,\n          value = _this$props.value,\n          getLabel = _this$props.getLabel;\n\n      if (_.isFunction(getLabel)) {\n        return getLabel(value);\n      }\n\n      var items = this.state.items;\n\n      var selectedItem = _.find(items, {\n        value: value\n      });\n\n      return _.get(selectedItem, 'label');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          renderPicker = _this$props2.renderPicker,\n          customPickerProps = _this$props2.customPickerProps,\n          testID = _this$props2.testID;\n\n      if (_.isFunction(renderPicker)) {\n        var selectedValue = this.state.selectedValue;\n        return React.createElement(React.Fragment, null, React.createElement(TouchableOpacity, _extends({}, customPickerProps, {\n          link: true,\n          onPress: function onPress() {\n            return _this2.toggleDialog(true);\n          },\n          testID: testID,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }\n        }), renderPicker(selectedValue)), this.renderPickerDialog());\n      }\n\n      var textInputProps = TextField.extractOwnProps(this.props);\n      var label = this.getLabel();\n      return React.createElement(TextField, _extends({\n        color: Colors.dark10\n      }, textInputProps, {\n        value: label,\n        expandable: true,\n        renderExpandable: this.renderPickerDialog,\n        onToggleExpandableModal: this.toggleDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return NativePicker;\n}(BaseComponent);\n\nNativePicker.displayName = 'IGNORE';\nNativePicker.Item = WheelPicker.Item;\nexport default NativePicker;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/picker/NativePicker.js"],"names":["_","React","BaseComponent","TextField","PickerDialog","TouchableOpacity","Colors","WheelPicker","NativePicker","state","selectedValue","props","value","items","extractPickerItems","showDialog","NUMBER_OF_ROWS","ROW_HEIGHT","MENU_HEIGHT","PICKER_HEIGHT","onCancel","setState","toggleDialog","onDone","invoke","isUndefined","get","onValueChange","renderPickerDialog","getThemeProps","children","useNativePicker","Children","map","child","label","getLabel","isFunction","selectedItem","find","renderPicker","customPickerProps","testID","textInputProps","extractOwnProps","dark10","displayName","Item"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport {BaseComponent} from '../../commons';\nimport TextField from '../textField';\nimport PickerDialog from './PickerDialog';\nimport TouchableOpacity from '../touchableOpacity';\nimport {Colors} from '../../style';\nimport {WheelPicker} from '../../nativeComponents';\n\nclass NativePicker extends BaseComponent {\n  static displayName = 'IGNORE';\n  state = {\n    selectedValue: this.props.value,\n    items: this.extractPickerItems(this.props),\n    showDialog: false\n  };\n\n  NUMBER_OF_ROWS = 5;\n  ROW_HEIGHT = 44;\n  MENU_HEIGHT = 44;\n  PICKER_HEIGHT = this.NUMBER_OF_ROWS * this.ROW_HEIGHT + this.MENU_HEIGHT;\n\n  extractPickerItems(props) {\n    const {children, useNativePicker} = props;\n    if (useNativePicker) {\n      const items = React.Children.map(children, child => ({value: child.props.value, label: child.props.label}));\n      return items;\n    }\n  }\n\n  onCancel = () => {\n    this.setState({\n      selectedValue: this.props.value\n    });\n    this.toggleDialog(false);\n  };\n\n  onDone = () => {\n    const {selectedValue, items} = this.state;\n    _.invoke(this.props, 'onChange', _.isUndefined(selectedValue) ? _.get(items, '[0].value') : selectedValue);\n    this.toggleDialog(false);\n  };\n\n  onValueChange = selectedValue => {\n    this.setState({\n      selectedValue\n    });\n  };\n\n  getLabel() {\n    const {value, getLabel} = this.props;\n    if (_.isFunction(getLabel)) {\n      return getLabel(value);\n    }\n\n    const {items} = this.state;\n    const selectedItem = _.find(items, {value});\n    return _.get(selectedItem, 'label');\n  }\n\n  toggleDialog = showDialog => {\n    this.setState({showDialog});\n  };\n\n  renderPickerDialog = () => {\n    const {selectedValue, showDialog} = this.state;\n    \n    return (\n      <PickerDialog\n        height={this.PICKER_HEIGHT + this.MENU_HEIGHT}\n        {...this.getThemeProps()}\n        visible={showDialog}\n        panDirection={null}\n        onDismiss={this.onCancel}\n        onValueChange={this.onValueChange}\n        selectedValue={selectedValue}\n        onDone={this.onDone}\n        onCancel={this.onCancel}\n      />\n    );\n  };\n\n  render() {\n    const {renderPicker, customPickerProps, testID} = this.props;\n\n    if (_.isFunction(renderPicker)) {\n      const {selectedValue} = this.state;\n      return (\n        <>\n          <TouchableOpacity {...customPickerProps} link onPress={() => this.toggleDialog(true)} testID={testID}>\n            {renderPicker(selectedValue)}\n          </TouchableOpacity>\n          {this.renderPickerDialog()}\n        </>\n      );\n    }\n\n    const textInputProps = TextField.extractOwnProps(this.props);\n    const label = this.getLabel();\n    return (\n      <TextField\n        color={Colors.dark10}\n        {...textInputProps}\n        value={label}\n        expandable\n        renderExpandable={this.renderPickerDialog}\n        onToggleExpandableModal={this.toggleDialog}\n      />\n    );\n  }\n}\n\nNativePicker.Item = WheelPicker.Item;\nexport default NativePicker;\n"]},"metadata":{},"sourceType":"module"}