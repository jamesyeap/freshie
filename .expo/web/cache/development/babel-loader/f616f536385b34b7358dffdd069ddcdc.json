{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"inputStyle\", \"selectionColor\"];\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tagsInput/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactNative from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { Constants } from \"../../helpers\";\nimport { Colors, BorderRadiuses, Typography } from \"../../style\";\nimport Assets from \"../../assets\";\nimport { BaseComponent } from \"../../commons\";\nimport { LogService } from \"../../services\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { TextField } from \"../inputs\";\nimport Text from \"../text\";\nvar GUTTER_SPACING = 8;\n\nvar TagsInput = function (_BaseComponent) {\n  _inherits(TagsInput, _BaseComponent);\n\n  var _super = _createSuper(TagsInput);\n\n  function TagsInput(props) {\n    var _this;\n\n    _classCallCheck(this, TagsInput);\n\n    _this = _super.call(this, props);\n    LogService.warn('TagsInput has been renamed to ChipsInput, please replace accordingly');\n    _this.addTag = _this.addTag.bind(_assertThisInitialized(_this));\n    _this.onChangeText = _this.onChangeText.bind(_assertThisInitialized(_this));\n    _this.renderTagWrapper = _this.renderTagWrapper.bind(_assertThisInitialized(_this));\n    _this.renderTag = _this.renderTag.bind(_assertThisInitialized(_this));\n    _this.getLabel = _this.getLabel.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.markTagIndex = _this.markTagIndex.bind(_assertThisInitialized(_this));\n    _this.state = {\n      value: props.value,\n      tags: _.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined\n    };\n    return _this;\n  }\n\n  _createClass(TagsInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Constants.isAndroid) {\n        var textInputHandle = ReactNative.findNodeHandle(this.input);\n\n        if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n          NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n          DeviceEventEmitter.addListener('onBackspacePress', this.onKeyPress);\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Constants.isAndroid) {\n        DeviceEventEmitter.removeListener('onBackspacePress', this.onKeyPress);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.tags !== this.state.tags) {\n        this.setState({\n          tags: nextProps.tags\n        });\n      }\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag() {\n      var _this$getThemeProps = this.getThemeProps(),\n          onCreateTag = _this$getThemeProps.onCreateTag,\n          disableTagAdding = _this$getThemeProps.disableTagAdding;\n\n      var _this$state = this.state,\n          value = _this$state.value,\n          tags = _this$state.tags;\n\n      if (disableTagAdding) {\n        return;\n      }\n\n      if (_.isNil(value) || _.isEmpty(value.trim())) {\n        return;\n      }\n\n      var newTag = _.isFunction(onCreateTag) ? onCreateTag(value) : value;\n      var newTags = [].concat(_toConsumableArray(tags), [newTag]);\n      this.setState({\n        value: '',\n        tags: newTags\n      });\n\n      _.invoke(this.props, 'onChangeTags', newTags, TagsInput.onChangeTagsActions.ADDED, newTag);\n\n      this.clear();\n    }\n  }, {\n    key: \"removeMarkedTag\",\n    value: function removeMarkedTag() {\n      var _this$state2 = this.state,\n          tags = _this$state2.tags,\n          tagIndexToRemove = _this$state2.tagIndexToRemove;\n\n      if (!_.isUndefined(tagIndexToRemove)) {\n        var removedTag = tags[tagIndexToRemove];\n        tags.splice(tagIndexToRemove, 1);\n        this.setState({\n          tags: tags,\n          tagIndexToRemove: undefined\n        });\n\n        _.invoke(this.props, 'onChangeTags', tags, TagsInput.onChangeTagsActions.REMOVED, removedTag);\n      }\n    }\n  }, {\n    key: \"markTagIndex\",\n    value: function markTagIndex(tagIndex) {\n      this.setState({\n        tagIndexToRemove: tagIndex\n      });\n    }\n  }, {\n    key: \"onChangeText\",\n    value: function onChangeText(value) {\n      this.setState({\n        value: value,\n        tagIndexToRemove: undefined\n      });\n\n      _.invoke(this.props, 'onChangeText', value);\n    }\n  }, {\n    key: \"onTagPress\",\n    value: function onTagPress(index) {\n      var onTagPress = this.props.onTagPress;\n      var tagIndexToRemove = this.state.tagIndexToRemove;\n\n      if (onTagPress) {\n        onTagPress(index, tagIndexToRemove);\n        return;\n      }\n\n      if (tagIndexToRemove === index) {\n        this.removeMarkedTag();\n      } else {\n        this.markTagIndex(index);\n      }\n    }\n  }, {\n    key: \"isLastTagMarked\",\n    value: function isLastTagMarked() {\n      var _this$state3 = this.state,\n          tags = _this$state3.tags,\n          tagIndexToRemove = _this$state3.tagIndexToRemove;\n\n      var tagsCount = _.size(tags);\n\n      var isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n      return isLastTagMarked;\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      _.invoke(this.props, 'onKeyPress', event);\n\n      var _this$getThemeProps2 = this.getThemeProps(),\n          disableTagRemoval = _this$getThemeProps2.disableTagRemoval;\n\n      if (disableTagRemoval) {\n        return;\n      }\n\n      var _this$state4 = this.state,\n          value = _this$state4.value,\n          tags = _this$state4.tags,\n          tagIndexToRemove = _this$state4.tagIndexToRemove;\n\n      var tagsCount = _.size(tags);\n\n      var keyCode = _.get(event, 'nativeEvent.key');\n\n      var hasNoValue = _.isEmpty(value);\n\n      var pressedBackspace = Constants.isAndroid || keyCode === Constants.backspaceKey;\n      var hasTags = tagsCount > 0;\n\n      if (pressedBackspace) {\n        if (hasNoValue && hasTags && _.isUndefined(tagIndexToRemove)) {\n          this.setState({\n            tagIndexToRemove: tagsCount - 1\n          });\n        } else if (!_.isUndefined(tagIndexToRemove)) {\n          this.removeMarkedTag();\n        }\n      }\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(item) {\n      var getLabel = this.props.getLabel;\n\n      if (getLabel) {\n        return getLabel(item);\n      }\n\n      if (_.isString(item)) {\n        return item;\n      }\n\n      return _.get(item, 'label');\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(tag, shouldMarkTag) {\n      var typography = this.extractTypographyValue();\n      var label = this.getLabel(tag);\n      return React.createElement(View, {\n        row: true,\n        centerV: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }\n      }, shouldMarkTag && React.createElement(Image, {\n        style: [styles.removeIcon, tag.invalid && styles.inValidTagRemoveIcon],\n        source: Assets.icons.x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: [tag.invalid ? shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage : styles.tagLabel, typography],\n        accessibilityLabel: label + \" tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 9\n        }\n      }, !tag.invalid && shouldMarkTag ? 'Remove' : label));\n    }\n  }, {\n    key: \"renderTag\",\n    value: function renderTag(tag, index) {\n      var _this$getThemeProps3 = this.getThemeProps(),\n          tagStyle = _this$getThemeProps3.tagStyle,\n          renderTag = _this$getThemeProps3.renderTag;\n\n      var tagIndexToRemove = this.state.tagIndexToRemove;\n      var shouldMarkTag = tagIndexToRemove === index;\n\n      if (tag.invalid) {\n        return React.createElement(View, {\n          key: index,\n          style: [styles.inValidTag, tagStyle, shouldMarkTag && styles.inValidMarkedTag],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 9\n          }\n        }, this.renderLabel(tag, shouldMarkTag));\n      }\n\n      if (_.isFunction(renderTag)) {\n        return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n      }\n\n      return React.createElement(View, {\n        key: index,\n        style: [styles.tag, tagStyle, shouldMarkTag && styles.tagMarked],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 7\n        }\n      }, this.renderLabel(tag, shouldMarkTag));\n    }\n  }, {\n    key: \"renderTagWrapper\",\n    value: function renderTagWrapper(tag, index) {\n      var _this2 = this;\n\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this2.onTagPress(index);\n        },\n        accessibilityHint: !this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 7\n        }\n      }, this.renderTag(tag, index));\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this3 = this;\n\n      var _this$getThemeProps4 = this.getThemeProps(),\n          inputStyle = _this$getThemeProps4.inputStyle,\n          selectionColor = _this$getThemeProps4.selectionColor,\n          others = _objectWithoutProperties(_this$getThemeProps4, _excluded);\n\n      var value = this.state.value;\n      var isLastTagMarked = this.isLastTagMarked();\n      return React.createElement(View, {\n        style: styles.inputWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 7\n        }\n      }, React.createElement(TextField, _extends({\n        ref: function ref(r) {\n          return _this3.input = r;\n        },\n        text80: true,\n        blurOnSubmit: false\n      }, others, {\n        value: value,\n        onSubmitEditing: this.addTag,\n        onChangeText: this.onChangeText,\n        onKeyPress: this.onKeyPress,\n        enableErrors: false,\n        hideUnderline: true,\n        selectionColor: isLastTagMarked ? 'transparent' : selectionColor,\n        style: [inputStyle, {\n          textAlignVertical: 'center'\n        }],\n        containerStyle: {\n          flexGrow: 0\n        },\n        collapsable: false,\n        accessibilityHint: !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps5 = this.getThemeProps(),\n          disableTagRemoval = _this$getThemeProps5.disableTagRemoval,\n          containerStyle = _this$getThemeProps5.containerStyle,\n          hideUnderline = _this$getThemeProps5.hideUnderline,\n          validationErrorMessage = _this$getThemeProps5.validationErrorMessage;\n\n      var tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n      var _this$state5 = this.state,\n          tags = _this$state5.tags,\n          tagIndexToRemove = _this$state5.tagIndexToRemove;\n      return React.createElement(View, {\n        style: [!hideUnderline && styles.withUnderline, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.tagsList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, _.map(tags, tagRenderFn), this.renderTextInput()), validationErrorMessage ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.errorMessage, tagIndexToRemove && styles.errorMessageWhileMarked],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }\n      }, validationErrorMessage)) : null);\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }]);\n\n  return TagsInput;\n}(BaseComponent);\n\nTagsInput.displayName = 'TagsInput';\nTagsInput.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),\n  getLabel: PropTypes.func,\n  renderTag: PropTypes.elementType,\n  onChangeTags: PropTypes.func,\n  onCreateTag: PropTypes.func,\n  onTagPress: PropTypes.func,\n  validationErrorMessage: PropTypes.string,\n  disableTagRemoval: PropTypes.bool,\n  disableTagAdding: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  tagStyle: ViewPropTypes.style,\n  inputStyle: TextField.propTypes.style,\n  hideUnderline: PropTypes.bool\n};\nTagsInput.onChangeTagsActions = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\nexport { TagsInput as default };\nvar basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\nvar basicIconStyle = {\n  width: 10,\n  height: 10,\n  marginRight: 6\n};\nvar styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.dark70\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: _objectSpread({\n    backgroundColor: Colors.primary\n  }, basicTagStyle),\n  inValidTag: _objectSpread({\n    borderWidth: 1,\n    borderColor: Colors.red30\n  }, basicTagStyle),\n  inValidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.dark10\n  },\n  removeIcon: _objectSpread({\n    tintColor: Colors.white\n  }, basicIconStyle),\n  inValidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.white\n  }),\n  errorMessage: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.red30\n  }),\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tagsInput/index.js"],"names":["_","PropTypes","React","ReactNative","ViewPropTypes","Constants","Colors","BorderRadiuses","Typography","Assets","BaseComponent","LogService","View","TouchableOpacity","TextField","Text","GUTTER_SPACING","TagsInput","props","warn","addTag","bind","onChangeText","renderTagWrapper","renderTag","getLabel","onKeyPress","markTagIndex","state","value","tags","cloneDeep","tagIndexToRemove","undefined","isAndroid","textInputHandle","findNodeHandle","input","NativeModules","TextInputDelKeyHandler","register","DeviceEventEmitter","addListener","removeListener","nextProps","setState","getThemeProps","onCreateTag","disableTagAdding","isNil","isEmpty","trim","newTag","isFunction","newTags","invoke","onChangeTagsActions","ADDED","clear","isUndefined","removedTag","splice","REMOVED","tagIndex","index","onTagPress","removeMarkedTag","tagsCount","size","isLastTagMarked","event","disableTagRemoval","keyCode","get","hasNoValue","pressedBackspace","backspaceKey","hasTags","item","isString","tag","shouldMarkTag","typography","extractTypographyValue","label","styles","removeIcon","invalid","inValidTagRemoveIcon","icons","x","errorMessageWhileMarked","errorMessage","tagLabel","tagStyle","inValidTag","inValidMarkedTag","renderLabel","tagMarked","inputStyle","selectionColor","others","inputWrapper","r","textAlignVertical","flexGrow","containerStyle","hideUnderline","validationErrorMessage","tagRenderFn","withUnderline","tagsList","map","renderTextInput","blur","focus","displayName","propTypes","arrayOf","oneOfType","object","string","func","elementType","onChangeTags","bool","style","basicTagStyle","borderRadius","br100","paddingVertical","paddingHorizontal","marginRight","marginVertical","basicIconStyle","width","height","StyleSheet","create","borderBottomWidth","hairlineWidth","borderColor","dark70","flexDirection","flexWrap","minWidth","justifyContent","backgroundColor","primary","borderWidth","red30","red10","dark10","tintColor","white","text80","color"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactNative, {NativeModules, StyleSheet, ViewPropTypes, Image, DeviceEventEmitter} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors, BorderRadiuses, Typography} from '../../style';\nimport Assets from '../../assets';\nimport {BaseComponent} from '../../commons';\nimport {LogService} from '../../services';\nimport View from '../view';\nimport TouchableOpacity from '../touchableOpacity';\nimport {TextField} from '../inputs';\nimport Text from '../text';\n\n// TODO: support updating tags externally\n// TODO: support char array as tag creators (like comma)\n// TODO: add notes to Docs about the Android fix for onKeyPress\n\nconst GUTTER_SPACING = 8;\n\n/**\n * @description: Tags input component (chips)\n * @modifiers: Typography\n * @gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipsInputScreen.js\n * @extends: TextField\n * @extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/inputs/TextField.js\n */\nexport default class TagsInput extends BaseComponent {\n  static displayName = 'TagsInput';\n\n  static propTypes = {\n    /**\n     * list of tags. can be string boolean or custom object when implementing getLabel\n     */\n    tags: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),\n    /**\n     * callback for extracting the label out of the tag item\n     */\n    getLabel: PropTypes.func,\n    /**\n     * callback for custom rendering tag item\n     */\n    renderTag: PropTypes.elementType,\n    /**\n     * callback for onChangeTags event\n     */\n    onChangeTags: PropTypes.func,\n    /**\n     * callback for creating new tag out of input value (good for composing tag object)\n     */\n    onCreateTag: PropTypes.func,\n    /**\n     * callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}\n     */\n    onTagPress: PropTypes.func,\n    /**\n     * validation message error appears when tag isn't validate\n     */\n    validationErrorMessage: PropTypes.string,\n    /**\n     * if true, tags *removal* Ux won't be available\n     */\n    disableTagRemoval: PropTypes.bool,\n    /**\n     * if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available\n     */\n    disableTagAdding: PropTypes.bool,\n    /**\n     * custom styling for the component container\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the tag item\n     */\n    tagStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the text input\n     */\n    inputStyle: TextField.propTypes.style,\n    /**\n     * should hide input underline\n     */\n    hideUnderline: PropTypes.bool\n  };\n\n  static onChangeTagsActions = {\n    ADDED: 'added',\n    REMOVED: 'removed'\n  };\n\n  constructor(props) {\n    super(props);\n\n    LogService.warn('TagsInput has been renamed to ChipsInput, please replace accordingly');\n\n    this.addTag = this.addTag.bind(this);\n    this.onChangeText = this.onChangeText.bind(this);\n    this.renderTagWrapper = this.renderTagWrapper.bind(this);\n    this.renderTag = this.renderTag.bind(this);\n    this.getLabel = this.getLabel.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.markTagIndex = this.markTagIndex.bind(this);\n\n    this.state = {\n      value: props.value,\n      tags: _.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined\n    };\n  }\n\n  componentDidMount() {\n    if (Constants.isAndroid) {\n      const textInputHandle = ReactNative.findNodeHandle(this.input);\n\n      if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n        NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n        DeviceEventEmitter.addListener('onBackspacePress', this.onKeyPress);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (Constants.isAndroid) {\n      DeviceEventEmitter.removeListener('onBackspacePress', this.onKeyPress);\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.tags !== this.state.tags) {\n      this.setState({\n        tags: nextProps.tags\n      });\n    }\n  }\n\n  addTag() {\n    const {onCreateTag, disableTagAdding} = this.getThemeProps();\n    const {value, tags} = this.state;\n\n    if (disableTagAdding) {\n      return;\n    }\n    if (_.isNil(value) || _.isEmpty(value.trim())) {\n      return;\n    }\n\n    const newTag = _.isFunction(onCreateTag) ? onCreateTag(value) : value;\n    const newTags = [...tags, newTag];\n\n    this.setState({\n      value: '',\n      tags: newTags\n    });\n    _.invoke(this.props, 'onChangeTags', newTags, TagsInput.onChangeTagsActions.ADDED, newTag);\n    this.clear();\n  }\n\n  removeMarkedTag() {\n    const {tags, tagIndexToRemove} = this.state;\n\n    if (!_.isUndefined(tagIndexToRemove)) {\n      const removedTag = tags[tagIndexToRemove];\n\n      tags.splice(tagIndexToRemove, 1);\n      this.setState({\n        tags,\n        tagIndexToRemove: undefined\n      });\n      _.invoke(this.props, 'onChangeTags', tags, TagsInput.onChangeTagsActions.REMOVED, removedTag);\n    }\n  }\n\n  markTagIndex(tagIndex) {\n    this.setState({tagIndexToRemove: tagIndex});\n  }\n\n  onChangeText(value) {\n    this.setState({value, tagIndexToRemove: undefined});\n    _.invoke(this.props, 'onChangeText', value);\n  }\n\n  onTagPress(index) {\n    const {onTagPress} = this.props;\n    const {tagIndexToRemove} = this.state;\n\n    // custom press handler\n    if (onTagPress) {\n      onTagPress(index, tagIndexToRemove);\n      return;\n    }\n\n    // default press handler\n    if (tagIndexToRemove === index) {\n      this.removeMarkedTag();\n    } else {\n      this.markTagIndex(index);\n    }\n  }\n\n  isLastTagMarked() {\n    const {tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n\n    return isLastTagMarked;\n  }\n\n  onKeyPress(event) {\n    _.invoke(this.props, 'onKeyPress', event);\n\n    const {disableTagRemoval} = this.getThemeProps();\n    if (disableTagRemoval) {\n      return;\n    }\n\n    const {value, tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const keyCode = _.get(event, 'nativeEvent.key');\n    const hasNoValue = _.isEmpty(value);\n    const pressedBackspace = Constants.isAndroid || keyCode === Constants.backspaceKey;\n    const hasTags = tagsCount > 0;\n\n    if (pressedBackspace) {\n      if (hasNoValue && hasTags && _.isUndefined(tagIndexToRemove)) {\n        this.setState({\n          tagIndexToRemove: tagsCount - 1\n        });\n      } else if (!_.isUndefined(tagIndexToRemove)) {\n        this.removeMarkedTag();\n      }\n    }\n  }\n\n  getLabel(item) {\n    const {getLabel} = this.props;\n\n    if (getLabel) {\n      return getLabel(item);\n    }\n    if (_.isString(item)) {\n      return item;\n    }\n    return _.get(item, 'label');\n  }\n\n  renderLabel(tag, shouldMarkTag) {\n    const typography = this.extractTypographyValue();\n    const label = this.getLabel(tag);\n\n    return (\n      <View row centerV>\n        {shouldMarkTag && (\n          <Image style={[styles.removeIcon, tag.invalid && styles.inValidTagRemoveIcon]} source={Assets.icons.x}/>\n        )}\n        <Text\n          style={[\n            tag.invalid ? (shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage) : styles.tagLabel,\n            typography\n          ]}\n          accessibilityLabel={`${label} tag`}\n        >\n          {!tag.invalid && shouldMarkTag ? 'Remove' : label}\n        </Text>\n      </View>\n    );\n  }\n\n  renderTag(tag, index) {\n    const {tagStyle, renderTag} = this.getThemeProps();\n    const {tagIndexToRemove} = this.state;\n    const shouldMarkTag = tagIndexToRemove === index;\n\n    if (tag.invalid) {\n      return (\n        <View key={index} style={[styles.inValidTag, tagStyle, shouldMarkTag && styles.inValidMarkedTag]}>\n          {this.renderLabel(tag, shouldMarkTag)}\n        </View>\n      );\n    }\n\n    if (_.isFunction(renderTag)) {\n      return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n    }\n\n    return (\n      <View key={index} style={[styles.tag, tagStyle, shouldMarkTag && styles.tagMarked]}>\n        {this.renderLabel(tag, shouldMarkTag)}\n      </View>\n    );\n  }\n\n  renderTagWrapper(tag, index) {\n    return (\n      <TouchableOpacity\n        key={index}\n        activeOpacity={1}\n        onPress={() => this.onTagPress(index)}\n        accessibilityHint={!this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined}\n      >\n        {this.renderTag(tag, index)}\n      </TouchableOpacity>\n    );\n  }\n\n  renderTextInput() {\n    const {inputStyle, selectionColor, ...others} = this.getThemeProps();\n    const {value} = this.state;\n    const isLastTagMarked = this.isLastTagMarked();\n\n    return (\n      <View style={styles.inputWrapper}>\n        <TextField\n          ref={r => (this.input = r)}\n          text80\n          blurOnSubmit={false}\n          {...others}\n          value={value}\n          onSubmitEditing={this.addTag}\n          onChangeText={this.onChangeText}\n          onKeyPress={this.onKeyPress}\n          enableErrors={false}\n          hideUnderline\n          selectionColor={isLastTagMarked ? 'transparent' : selectionColor}\n          style={[inputStyle, {textAlignVertical: 'center'}]}\n          containerStyle={{flexGrow: 0}}\n          collapsable={false}\n          accessibilityHint={\n            !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined\n          }\n        />\n      </View>\n    );\n  }\n\n  render() {\n    const {disableTagRemoval, containerStyle, hideUnderline, validationErrorMessage} = this.getThemeProps();\n    const tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n    const {tags, tagIndexToRemove} = this.state;\n\n    return (\n      <View style={[!hideUnderline && styles.withUnderline, containerStyle]}>\n        <View style={styles.tagsList}>\n          {_.map(tags, tagRenderFn)}\n          {this.renderTextInput()}\n        </View>\n        {validationErrorMessage ? (\n          <View>\n            <Text style={[styles.errorMessage, tagIndexToRemove && styles.errorMessageWhileMarked]}>\n              {validationErrorMessage}\n            </Text>\n          </View>\n        ) : null}\n      </View>\n    );\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n}\nconst basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\n\nconst basicIconStyle = {\n  width: 10,\n  height: 10,\n  marginRight: 6\n};\n\nconst styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: Colors.dark70\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: {\n    backgroundColor: Colors.primary,\n    ...basicTagStyle\n  },\n  inValidTag: {\n    borderWidth: 1,\n    borderColor: Colors.red30,\n    ...basicTagStyle\n  },\n  inValidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.dark10\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    ...basicIconStyle\n  },\n  inValidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: {\n    ...Typography.text80,\n    color: Colors.white\n  },\n  errorMessage: {\n    ...Typography.text80,\n    color: Colors.red30\n  },\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}