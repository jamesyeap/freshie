{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/stepper/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from 'prop-types';\nimport StepperButton from \"./StepperButton\";\nimport createStyles from \"./style\";\nimport { PureBaseComponent } from \"../../commons\";\n\nvar Stepper = function (_PureBaseComponent) {\n  _inherits(Stepper, _PureBaseComponent);\n\n  var _super = _createSuper(Stepper);\n\n  function Stepper(props) {\n    var _this;\n\n    _classCallCheck(this, Stepper);\n\n    _this = _super.call(this, props);\n\n    _this.onAccessibilityAction = function (event) {\n      var value = _this.state.value;\n      var _this$props = _this.props,\n          min = _this$props.min,\n          max = _this$props.max;\n      var eventMsgContext = event.nativeEvent.action === 'decrement' ? 'Minimum' : 'Maximum';\n      var stepperLimitMsg = eventMsgContext + \" stepper value, \" + value + \", reached\";\n\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          if (value <= min) {\n            _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n          } else {\n            _this.updateValue(value - 1);\n\n            _.invoke(AccessibilityInfo, 'announceForAccessibility', value - 1);\n          }\n\n          break;\n\n        case 'increment':\n          if (value >= max) {\n            _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n          } else {\n            _this.updateValue(value + 1);\n\n            _.invoke(AccessibilityInfo, 'announceForAccessibility', value + 1);\n          }\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.state = {\n      value: props.initialValue\n    };\n    return _this;\n  }\n\n  _createClass(Stepper, [{\n    key: \"getAccessibilityProps\",\n    value: function getAccessibilityProps() {\n      var value = this.state.value;\n      var accessibilityLabel = this.props.accessibilityLabel;\n      var labelSuffix = \"value = \" + value;\n      return {\n        accessibilityLabel: accessibilityLabel ? accessibilityLabel + \", \" + labelSuffix : \"Stepper, \" + labelSuffix,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction\n      };\n    }\n  }, {\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props.size);\n    }\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return [this.state.value, this.props.label].join(' ');\n    }\n  }, {\n    key: \"getDisabledState\",\n    value: function getDisabledState() {\n      var minusDisabled = this.state.value === this.props.min;\n      var plusDisabled = this.state.value === this.props.max;\n      return {\n        minusDisabled: minusDisabled,\n        plusDisabled: plusDisabled\n      };\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(value) {\n      var _this2 = this;\n\n      var newValue = _.max([value, this.props.min]);\n\n      newValue = _.min([newValue, this.props.max]);\n\n      if (this.state.value !== newValue) {\n        this.setState({\n          value: newValue\n        }, function () {\n          if (_this2.props.onValueChange) {\n            _this2.props.onValueChange(newValue);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$getDisabledStat = this.getDisabledState(),\n          minusDisabled = _this$getDisabledStat.minusDisabled,\n          plusDisabled = _this$getDisabledStat.plusDisabled,\n          testID = _this$getDisabledStat.testID;\n\n      return React.createElement(View, _extends({}, this.getAccessibilityProps(), {\n        style: [this.styles.container, this.props.containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }\n      }), React.createElement(View, {\n        style: this.styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        testID: testID + \".label\",\n        style: this.styles.titleText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, this.getLabel())), React.createElement(View, {\n        style: this.styles.buttons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, React.createElement(StepperButton, {\n        label: \"-\",\n        testID: testID + \".decrease\",\n        styles: this.styles,\n        disabled: minusDisabled,\n        onPress: function onPress() {\n          return _this3.updateValue(_this3.state.value - 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: this.styles.separator,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }), React.createElement(StepperButton, {\n        label: \"+\",\n        testID: testID + \".increase\",\n        styles: this.styles,\n        disabled: plusDisabled,\n        onPress: function onPress() {\n          return _this3.updateValue(_this3.state.value + 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Stepper;\n}(PureBaseComponent);\n\nStepper.displayName = 'Stepper';\nStepper.propTypes = {\n  label: PropTypes.string,\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number,\n  containerStyle: PropTypes.object,\n  onValueChange: PropTypes.func,\n  initialValue: PropTypes.number.isRequired\n};\nexport { Stepper as default };","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/stepper/index.js"],"names":["_","React","PropTypes","StepperButton","createStyles","PureBaseComponent","Stepper","props","onAccessibilityAction","event","value","state","min","max","eventMsgContext","nativeEvent","action","stepperLimitMsg","actionName","invoke","AccessibilityInfo","updateValue","initialValue","accessibilityLabel","labelSuffix","accessible","accessibilityRole","accessibilityActions","name","label","styles","size","join","minusDisabled","plusDisabled","newValue","setState","onValueChange","getDisabledState","testID","getAccessibilityProps","container","containerStyle","title","titleText","getLabel","buttons","separator","displayName","propTypes","string","number","isRequired","object","func"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport {AccessibilityInfo, Text, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport StepperButton from './StepperButton';\nimport createStyles from './style';\nimport {PureBaseComponent} from '../../commons';\n\n/**\n * @description: Stepper component with increase and decrease buttons\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Stepper/Stepper.gif?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/StepperScreen.js\n */\nexport default class Stepper extends PureBaseComponent {\n  static displayName = 'Stepper';\n  static propTypes = {\n    /**\n     * Text to show next to the current number\n     */\n    label: PropTypes.string,\n    /**\n     * Minimum value\n     */\n    min: PropTypes.number.isRequired,\n    /**\n     * Maximum value\n     */\n    max: PropTypes.number,\n    /**\n     * Additional styles for the top container\n     */\n    containerStyle: PropTypes.object,\n    /**\n     * Handler function to receive updates when the value changes\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * the initial value\n     */\n    initialValue: PropTypes.number.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.initialValue\n    };\n  }\n\n  getAccessibilityProps() {\n    const {value} = this.state;\n    const {accessibilityLabel} = this.props;\n    const labelSuffix = `value = ${value}`;\n    return {\n      accessibilityLabel: accessibilityLabel ? `${accessibilityLabel}, ${labelSuffix}` : `Stepper, ${labelSuffix}`,\n      accessible: true,\n      accessibilityRole: 'adjustable',\n      accessibilityActions: [{name: 'increment', label: 'increment'}, {name: 'decrement', label: 'decrement'}],\n      onAccessibilityAction: this.onAccessibilityAction\n    };\n  }\n\n  onAccessibilityAction = event => {\n    const {value} = this.state;\n    const {min, max} = this.props;\n    const eventMsgContext = event.nativeEvent.action === 'decrement' ? 'Minimum' : 'Maximum';\n    const stepperLimitMsg = `${eventMsgContext} stepper value, ${value}, reached`;\n\n    // switch (event.nativeEvent.action) {\n    switch (event.nativeEvent.actionName) {\n      case 'decrement':\n        if (value <= min) {\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n        } else {\n          this.updateValue(value - 1);\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', value - 1);\n        }\n        break;\n      case 'increment':\n        if (value >= max) {\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', stepperLimitMsg);\n        } else {\n          this.updateValue(value + 1);\n          _.invoke(AccessibilityInfo, 'announceForAccessibility', value + 1);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  \n  generateStyles() {\n    this.styles = createStyles(this.props.size);\n  }\n\n  getLabel() {\n    return [this.state.value, this.props.label].join(' ');\n  }\n\n  getDisabledState() {\n    const minusDisabled = this.state.value === this.props.min;\n    const plusDisabled = this.state.value === this.props.max;\n    return {minusDisabled, plusDisabled};\n  }\n\n  updateValue(value) {\n    let newValue = _.max([value, this.props.min]);\n    newValue = _.min([newValue, this.props.max]);\n    if (this.state.value !== newValue) {\n      this.setState({\n        value: newValue\n      },\n      () => {\n        if (this.props.onValueChange) {\n          this.props.onValueChange(newValue);\n        }\n      });\n    }\n  }\n\n  render() {\n    const {minusDisabled, plusDisabled, testID} = this.getDisabledState();\n    return (\n      <View {...this.getAccessibilityProps()} style={[this.styles.container, this.props.containerStyle]}>\n        <View style={this.styles.title}>\n          <Text testID={`${testID}.label`} style={this.styles.titleText}>\n            {this.getLabel()}\n          </Text>\n        </View>\n        <View style={this.styles.buttons}>\n          <StepperButton\n            label=\"-\"\n            testID={`${testID}.decrease`}\n            styles={this.styles}\n            disabled={minusDisabled}\n            onPress={() => this.updateValue(this.state.value - 1)}\n          />\n          <View style={this.styles.separator}/>\n          <StepperButton\n            label=\"+\"\n            testID={`${testID}.increase`}\n            styles={this.styles}\n            disabled={plusDisabled}\n            onPress={() => this.updateValue(this.state.value + 1)}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}