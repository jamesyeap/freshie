{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/PageCarousel.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport Animated from 'react-native-reanimated';\nimport { Constants } from \"../../helpers\";\nvar Code = Animated.Code,\n    block = Animated.block,\n    call = Animated.call;\n\nvar PageCarousel = function (_PureComponent) {\n  _inherits(PageCarousel, _PureComponent);\n\n  var _super = _createSuper(PageCarousel);\n\n  function PageCarousel() {\n    var _this;\n\n    _classCallCheck(this, PageCarousel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.carousel = React.createRef();\n    _this.onScroll = Animated.event([{\n      nativeEvent: {\n        contentOffset: {\n          x: _this.context.carouselOffset\n        }\n      }\n    }], {\n      useNativeDriver: true\n    });\n\n    _this.onTabChange = function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 1),\n          index = _ref2[0];\n\n      _this.scrollToPage(index);\n    };\n\n    _this.scrollToPage = function (pageIndex) {\n      var pageWidth = _this.context.pageWidth;\n\n      var node = _.invoke(_this.carousel, 'current.getNode');\n\n      if (node) {\n        node.scrollTo({\n          x: pageIndex * pageWidth,\n          animated: false\n        });\n      }\n    };\n\n    _this.renderCodeBlock = _.memoize(function () {\n      var _this$context = _this.context,\n          targetPage = _this$context.targetPage,\n          containerWidth = _this$context.containerWidth;\n      return React.createElement(Code, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 12\n        }\n      }, function () {\n        return block([Animated.onChange(targetPage, [call([targetPage], _this.onTabChange)]), Animated.onChange(containerWidth, [call([targetPage], _this.onTabChange)])]);\n      });\n    });\n    return _this;\n  }\n\n  _createClass(PageCarousel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (Constants.isAndroid) {\n        setTimeout(function () {\n          _this2.scrollToPage(_this2.context.selectedIndex);\n        }, 0);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$context2 = this.context,\n          selectedIndex = _this$context2.selectedIndex,\n          pageWidth = _this$context2.pageWidth;\n      return React.createElement(React.Fragment, null, React.createElement(Animated.ScrollView, _extends({}, this.props, {\n        ref: this.carousel,\n        horizontal: true,\n        pagingEnabled: true,\n        showsHorizontalScrollIndicator: false,\n        onScroll: this.onScroll,\n        scrollEventThrottle: 16,\n        contentOffset: {\n          x: selectedIndex * pageWidth,\n          y: 0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      })), this.renderCodeBlock());\n    }\n  }]);\n\n  return PageCarousel;\n}(PureComponent);\n\nPageCarousel.displayName = 'TabController.PageCarousel';\nPageCarousel.contextType = TabBarContext;\nexport default PageCarousel;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/PageCarousel.js"],"names":["React","PureComponent","_","TabBarContext","Animated","Constants","Code","block","call","PageCarousel","carousel","createRef","onScroll","event","nativeEvent","contentOffset","x","context","carouselOffset","useNativeDriver","onTabChange","index","scrollToPage","pageIndex","pageWidth","node","invoke","scrollTo","animated","renderCodeBlock","memoize","targetPage","containerWidth","onChange","isAndroid","setTimeout","selectedIndex","props","y","displayName","contextType"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport Animated from 'react-native-reanimated';\nimport { Constants } from \"../../helpers\";\nconst {\n  Code,\n  block,\n  call\n} = Animated;\n/**\n * @description: TabController's Page Carousel\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n * @notes: You must pass `asCarousel` flag to TabController and render your TabPages inside a PageCarousel\n */\n\nclass PageCarousel extends PureComponent {\n  static displayName = 'TabController.PageCarousel';\n  static contextType = TabBarContext;\n  carousel = React.createRef();\n  onScroll = Animated.event([{\n    nativeEvent: {\n      contentOffset: {\n        x: this.context.carouselOffset\n      }\n    }\n  }], {\n    useNativeDriver: true\n  });\n\n  componentDidMount() {\n    if (Constants.isAndroid) {\n      setTimeout(() => {\n        this.scrollToPage(this.context.selectedIndex);\n      }, 0);\n    }\n  }\n\n  onTabChange = ([index]) => {\n    this.scrollToPage(index);\n  };\n  scrollToPage = pageIndex => {\n    const {\n      pageWidth\n    } = this.context;\n\n    const node = _.invoke(this.carousel, 'current.getNode');\n\n    if (node) {\n      node.scrollTo({\n        x: pageIndex * pageWidth,\n        animated: false\n      });\n    }\n  };\n  renderCodeBlock = _.memoize(() => {\n    const {\n      targetPage,\n      containerWidth\n    } = this.context;\n    return <Code>\n        {() => block([Animated.onChange(targetPage, [call([targetPage], this.onTabChange)]), Animated.onChange(containerWidth, [call([targetPage], this.onTabChange)])])}\n      </Code>;\n  });\n\n  render() {\n    const {\n      selectedIndex,\n      pageWidth\n    } = this.context;\n    return <>\n        <Animated.ScrollView {...this.props} ref={this.carousel} horizontal pagingEnabled showsHorizontalScrollIndicator={false} onScroll={this.onScroll} scrollEventThrottle={16} contentOffset={{\n        x: selectedIndex * pageWidth,\n        y: 0\n      }} // iOS only\n      />\n\n        {this.renderCodeBlock()}\n      </>;\n  }\n\n}\n\nexport default PageCarousel;"]},"metadata":{},"sourceType":"module"}