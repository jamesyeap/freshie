{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/incubator/WheelPicker/index.js\";\n\nimport _pt from \"prop-types\";\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from 'react-native-reanimated';\nimport { onScrollEvent, useValues } from 'react-native-redash';\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport { Constants } from \"../../helpers\";\nimport Item from \"./Item\";\nimport usePresenter from \"./usePresenter\";\nimport Text from \"../../components/text\";\nvar AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\nvar WheelPicker = React.memo(function (_ref) {\n  var propItems = _ref.items,\n      _ref$itemHeight = _ref.itemHeight,\n      itemHeight = _ref$itemHeight === void 0 ? 44 : _ref$itemHeight,\n      _ref$numberOfVisibleR = _ref.numberOfVisibleRows,\n      numberOfVisibleRows = _ref$numberOfVisibleR === void 0 ? 5 : _ref$numberOfVisibleR,\n      _ref$activeTextColor = _ref.activeTextColor,\n      activeTextColor = _ref$activeTextColor === void 0 ? Colors.primary : _ref$activeTextColor,\n      inactiveTextColor = _ref.inactiveTextColor,\n      textStyle = _ref.textStyle,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelProps = _ref.labelProps,\n      onChange = _ref.onChange,\n      style = _ref.style,\n      children = _ref.children,\n      selectedValue = _ref.selectedValue,\n      testID = _ref.testID;\n  var scrollView = useRef();\n\n  var _useValues = useValues([0], []),\n      _useValues2 = _slicedToArray(_useValues, 1),\n      offset = _useValues2[0];\n\n  var onScroll = onScrollEvent({\n    y: offset\n  });\n\n  var _usePresenter = usePresenter({\n    selectedValue: selectedValue,\n    items: propItems,\n    children: children,\n    itemHeight: itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  }),\n      height = _usePresenter.height,\n      items = _usePresenter.items,\n      shouldControlComponent = _usePresenter.shouldControlComponent,\n      currentIndex = _usePresenter.index,\n      getRowItemAtOffset = _usePresenter.getRowItemAtOffset;\n\n  var prevIndex = useRef(currentIndex);\n\n  var _useState = useState(currentIndex * itemHeight),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrollOffset = _useState2[0],\n      setScrollOffset = _useState2[1];\n\n  useEffect(function () {\n    controlComponent();\n  });\n\n  var controlComponent = function controlComponent() {\n    if (shouldControlComponent(scrollOffset)) {\n      scrollToIndex(currentIndex, true);\n    }\n  };\n\n  var scrollToPassedIndex = function scrollToPassedIndex() {\n    scrollToIndex(currentIndex, false);\n  };\n\n  var scrollToIndex = function scrollToIndex(index, animated) {\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      var _items$index;\n\n      prevIndex.current = index;\n      onChange == null ? void 0 : onChange(items == null ? void 0 : (_items$index = items[index]) == null ? void 0 : _items$index.value, index);\n    }\n\n    setTimeout(function () {\n      var _scrollView$current, _scrollView$current$g;\n\n      return (_scrollView$current = scrollView.current) == null ? void 0 : (_scrollView$current$g = _scrollView$current.getNode()) == null ? void 0 : _scrollView$current$g.scrollToOffset({\n        offset: index * itemHeight,\n        animated: animated\n      });\n    }, 100);\n  };\n\n  var selectItem = useCallback(function (index) {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n\n  var onValueChange = function onValueChange(event) {\n    setScrollOffset(event.nativeEvent.contentOffset.y);\n\n    var _getRowItemAtOffset = getRowItemAtOffset(event.nativeEvent.contentOffset.y),\n        index = _getRowItemAtOffset.index,\n        value = _getRowItemAtOffset.value;\n\n    onChange == null ? void 0 : onChange(value, index);\n  };\n\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return React.createElement(Item, _extends({\n      index: index,\n      itemHeight: itemHeight,\n      offset: offset,\n      activeColor: activeTextColor,\n      inactiveColor: inactiveTextColor,\n      style: textStyle\n    }, item, {\n      centerH: !label,\n      onSelect: selectItem,\n      testID: testID + \".item_\" + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 12\n      }\n    }));\n  }, [itemHeight]);\n\n  var renderSeparators = function renderSeparators() {\n    return React.createElement(View, {\n      absF: true,\n      centerV: true,\n      pointerEvents: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 12\n      }\n    }, React.createElement(View, {\n      style: styles.separators,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var renderLabel = function renderLabel() {\n    return React.createElement(View, {\n      centerV: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, React.createElement(Text, _extends({\n      \"marginL-s2\": true,\n      text80M: true\n    }, labelProps, {\n      color: activeTextColor,\n      style: labelStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }), label));\n  };\n\n  var fader = useMemo(function () {\n    return function (position) {\n      return React.createElement(Fader, {\n        visible: true,\n        position: position,\n        size: 60,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 12\n        }\n      });\n    };\n  }, []);\n  var getItemLayout = useCallback(function (_data, index) {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index: index\n    };\n  }, [itemHeight]);\n  var contentContainerStyle = useMemo(function () {\n    return {\n      paddingVertical: height / 2 - itemHeight / 2\n    };\n  }, [height, itemHeight]);\n  return React.createElement(View, {\n    testID: testID,\n    \"bg-white\": true,\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 10\n    }\n  }, React.createElement(View, {\n    row: true,\n    \"marginH-s5\": true,\n    centerH: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, React.createElement(AnimatedFlatList, {\n    testID: testID + \".list\",\n    height: height,\n    data: items,\n    keyExtractor: keyExtractor,\n    scrollEventThrottle: 100,\n    onScroll: onScroll,\n    onMomentumScrollEnd: onValueChange,\n    showsVerticalScrollIndicator: false,\n    onLayout: scrollToPassedIndex,\n    ref: scrollView,\n    contentContainerStyle: contentContainerStyle,\n    snapToInterval: itemHeight,\n    decelerationRate: Constants.isAndroid ? 0.98 : 'normal',\n    renderItem: renderItem,\n    getItemLayout: getItemLayout,\n    initialScrollIndex: currentIndex,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  })), label && renderLabel()), fader(FaderPosition.BOTTOM), fader(FaderPosition.TOP), renderSeparators());\n});\nWheelPicker.propTypes = {\n  items: _pt.array,\n  itemHeight: _pt.number,\n  numberOfVisibleRows: _pt.number,\n  activeTextColor: _pt.string,\n  inactiveTextColor: _pt.string,\n  label: _pt.string,\n  onChange: _pt.func,\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n  testID: _pt.string\n};\n\nvar keyExtractor = function keyExtractor(item) {\n  return \"\" + item.value;\n};\n\nexport default WheelPicker;\nvar styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/incubator/WheelPicker/index.js"],"names":["_pt","React","useCallback","useRef","useMemo","useEffect","useState","Animated","onScrollEvent","useValues","Colors","Spacings","View","Fader","FaderPosition","Constants","Item","usePresenter","Text","AnimatedFlatList","createAnimatedComponent","FlatList","WheelPicker","memo","propItems","items","itemHeight","numberOfVisibleRows","activeTextColor","primary","inactiveTextColor","textStyle","label","labelStyle","labelProps","onChange","style","children","selectedValue","testID","scrollView","offset","onScroll","y","preferredNumVisibleRows","height","shouldControlComponent","currentIndex","index","getRowItemAtOffset","prevIndex","scrollOffset","setScrollOffset","controlComponent","scrollToIndex","scrollToPassedIndex","animated","isAndroid","current","value","setTimeout","getNode","scrollToOffset","selectItem","onValueChange","event","nativeEvent","contentOffset","renderItem","item","renderSeparators","styles","separators","renderLabel","fader","position","getItemLayout","_data","length","contentContainerStyle","paddingVertical","keyExtractor","BOTTOM","TOP","propTypes","array","number","string","func","oneOfType","element","arrayOf","StyleSheet","create","borderTopWidth","borderBottomWidth","s9","borderColor","grey60"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: Support style customization\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\nimport { onScrollEvent, useValues } from 'react-native-redash';\nimport { Colors, Spacings } from \"../../style\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport { Constants } from \"../../helpers\";\nimport Item from \"./Item\";\nimport usePresenter from \"./usePresenter\";\nimport Text from \"../../components/text\";\nconst AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\nconst WheelPicker = React.memo(({\n  items: propItems,\n  itemHeight = 44,\n  numberOfVisibleRows = 5,\n  activeTextColor = Colors.primary,\n  inactiveTextColor,\n  textStyle,\n  label,\n  labelStyle,\n  labelProps,\n  onChange,\n  style,\n  children,\n  selectedValue,\n  testID\n}) => {\n  const scrollView = useRef();\n  const [offset] = useValues([0], []);\n  const onScroll = onScrollEvent({\n    y: offset\n  });\n  const {\n    height,\n    items,\n    shouldControlComponent,\n    index: currentIndex,\n    getRowItemAtOffset\n  } = usePresenter({\n    selectedValue,\n    items: propItems,\n    children,\n    itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  });\n  const prevIndex = useRef(currentIndex);\n  const [scrollOffset, setScrollOffset] = useState(currentIndex * itemHeight);\n  useEffect(() => {\n    controlComponent();\n  });\n  /**\n     * The picker is a controlled component. This means we expect the\n     * to relay on `selectedValue` prop to be our\n     * source of truth - not the picker current value.\n     * This way, you can control disallow or mutate selection of some values.\n     */\n\n  const controlComponent = () => {\n    if (shouldControlComponent(scrollOffset)) {\n      scrollToIndex(currentIndex, true);\n    }\n  };\n\n  const scrollToPassedIndex = () => {\n    scrollToIndex(currentIndex, false);\n  };\n\n  const scrollToIndex = (index, animated) => {\n    // this is done to handle onMomentumScrollEnd not being called in Android:\n    // https://github.com/facebook/react-native/issues/26661\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      prevIndex.current = index;\n      onChange?.(items?.[index]?.value, index);\n    } //@ts-ignore for some reason scrollToOffset isn't recognized\n\n\n    setTimeout(() => scrollView.current?.getNode()?.scrollToOffset({\n      offset: index * itemHeight,\n      animated\n    }), 100);\n  };\n\n  const selectItem = useCallback(index => {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n\n  const onValueChange = event => {\n    setScrollOffset(event.nativeEvent.contentOffset.y);\n    const {\n      index,\n      value\n    } = getRowItemAtOffset(event.nativeEvent.contentOffset.y);\n    onChange?.(value, index);\n  };\n\n  const renderItem = useCallback(({\n    item,\n    index\n  }) => {\n    return <Item index={index} itemHeight={itemHeight} offset={offset} activeColor={activeTextColor} inactiveColor={inactiveTextColor} style={textStyle} {...item} centerH={!label} onSelect={selectItem} testID={`${testID}.item_${index}`} />;\n  }, [itemHeight]);\n\n  const renderSeparators = () => {\n    return <View absF centerV pointerEvents=\"none\">\n        <View style={styles.separators} />\n      </View>;\n  };\n\n  const renderLabel = () => {\n    return <View centerV>\n        <Text marginL-s2 text80M {...labelProps} color={activeTextColor} style={labelStyle}>\n          {label}\n        </Text>\n      </View>;\n  };\n\n  const fader = useMemo(() => position => {\n    return <Fader visible position={position} size={60} />;\n  }, []);\n  const getItemLayout = useCallback((_data, index) => {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index\n    };\n  }, [itemHeight]);\n  const contentContainerStyle = useMemo(() => {\n    return {\n      paddingVertical: height / 2 - itemHeight / 2\n    };\n  }, [height, itemHeight]);\n  return <View testID={testID} bg-white style={style}>\n      <View row marginH-s5 centerH>\n        <View>\n          <AnimatedFlatList testID={`${testID}.list`} height={height} data={items} // @ts-ignore reanimated2\n        keyExtractor={keyExtractor} scrollEventThrottle={100} onScroll={onScroll} onMomentumScrollEnd={onValueChange} showsVerticalScrollIndicator={false} onLayout={scrollToPassedIndex} // @ts-ignore\n        ref={scrollView} contentContainerStyle={contentContainerStyle} snapToInterval={itemHeight} decelerationRate={Constants.isAndroid ? 0.98 : 'normal'} renderItem={renderItem} getItemLayout={getItemLayout} initialScrollIndex={currentIndex} />\n        </View>\n        {label && renderLabel()}\n      </View>\n      {fader(FaderPosition.BOTTOM)}\n      {fader(FaderPosition.TOP)}\n      {renderSeparators()}\n    </View>;\n});\nWheelPicker.propTypes = {\n  /**\n     * Data source for WheelPicker\n     */\n  items: _pt.array,\n\n  /**\n     * Describe the height of each item in the WheelPicker\n     * default value: 44\n     */\n  itemHeight: _pt.number,\n\n  /**\n     * Describe the number of rows visible\n     * default value: 5\n     */\n  numberOfVisibleRows: _pt.number,\n\n  /**\n     * Text color for the focused row\n     */\n  activeTextColor: _pt.string,\n\n  /**\n     * Text color for other, non-focused rows\n     */\n  inactiveTextColor: _pt.string,\n\n  /**\n     * Additional label on the right of the item text\n     */\n  label: _pt.string,\n\n  /**\n     * Event, on active row change\n     */\n  onChange: _pt.func,\n\n  /**\n     * Support passing items as children props\n     */\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n  testID: _pt.string\n};\n\nconst keyExtractor = item => `${item.value}`;\n\nexport default WheelPicker;\nconst styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  }\n});"]},"metadata":{},"sourceType":"module"}