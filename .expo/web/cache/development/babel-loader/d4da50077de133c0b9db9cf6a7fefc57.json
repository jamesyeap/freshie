{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jamesyeap1/freshie/_components/_molecules/FAB.js\";\n\nimport React, { useState } from 'react';\nimport { FAB as ParentFAB, Portal, Provider } from 'react-native-paper';\nexport var FAB = function FAB() {\n  var _useState = useState({\n    open: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var onStateChange = function onStateChange(_ref) {\n    var open = _ref.open;\n    return setState({\n      open: open\n    });\n  };\n\n  var open = state.open;\n  return React.createElement(Provider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }\n  }, React.createElement(Portal, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 6\n    }\n  }, React.createElement(ParentFAB.Group, {\n    open: open,\n    icon: open ? 'minus' : 'plus',\n    actions: [{\n      icon: 'plus',\n      onPress: function onPress() {\n        return console.log('Pressed add');\n      }\n    }, {\n      icon: 'star',\n      label: 'Star',\n      onPress: function onPress() {\n        return console.log('Pressed star');\n      }\n    }, {\n      icon: 'email',\n      label: 'Email',\n      onPress: function onPress() {\n        return console.log('Pressed email');\n      }\n    }, {\n      icon: 'bell',\n      label: 'Remind',\n      onPress: function onPress() {\n        return console.log('Pressed notifications');\n      },\n      small: false\n    }],\n    onStateChange: onStateChange,\n    onPress: function onPress() {\n      if (open) {}\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/_components/_molecules/FAB.js"],"names":["React","useState","FAB","ParentFAB","Portal","Provider","open","state","setState","onStateChange","icon","onPress","console","log","label","small"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAG,IAAIC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,oBAAnD;AAEA,OAAO,IAAMH,GAAG,GAAG,SAANA,GAAM,GAAM;AACxB,kBAA0BD,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,QAAGH,IAAH,QAAGA,IAAH;AAAA,WAAcE,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAJA;AAAF,KAAD,CAAtB;AAAA,GAAtB;;AAEA,MAAQA,IAAR,GAAiBC,KAAjB,CAAQD,IAAR;AAEA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,KAAX;AACL,IAAA,IAAI,EAAEA,IADD;AAEL,IAAA,IAAI,EAAEA,IAAI,GAAG,OAAH,GAAa,MAFlB;AAGL,IAAA,OAAO,EAAE,CACP;AAAEI,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,aAAZ,CAAN;AAAA;AAAzB,KADO,EAEP;AACEH,MAAAA,IAAI,EAAE,MADR;AAEEI,MAAAA,KAAK,EAAE,MAFT;AAGEH,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN;AAAA;AAHX,KAFO,EAOP;AACEH,MAAAA,IAAI,EAAE,OADR;AAEEI,MAAAA,KAAK,EAAE,OAFT;AAGEH,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAAN;AAAA;AAHX,KAPO,EAYP;AACEH,MAAAA,IAAI,EAAE,MADR;AAEEI,MAAAA,KAAK,EAAE,QAFT;AAGEH,MAAAA,OAAO,EAAE;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAN;AAAA,OAHX;AAIEE,MAAAA,KAAK,EAAE;AAJT,KAZO,CAHJ;AAsBL,IAAA,aAAa,EAAEN,aAtBV;AAuBL,IAAA,OAAO,EAAE,mBAAM;AACb,UAAIH,IAAJ,EAAU,CAET;AACF,KA3BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAmCA,CAzCM","sourcesContent":["import React, { useState } from 'react';\nimport { FAB as ParentFAB, Portal, Provider } from 'react-native-paper';\n\nexport const FAB = () => {\n\tconst [state, setState] = useState({ open: false });\n\tconst onStateChange = ({ open }) => setState({ open });\n\n\tconst { open } = state;\n      \n\treturn (\n\t  <Provider>\n\t    <Portal>\n\t      <ParentFAB.Group\n\t\topen={open}\n\t\ticon={open ? 'minus' : 'plus'}\n\t\tactions={[\n\t\t  { icon: 'plus', onPress: () => console.log('Pressed add') },\n\t\t  {\n\t\t    icon: 'star',\n\t\t    label: 'Star',\n\t\t    onPress: () => console.log('Pressed star'),\n\t\t  },\n\t\t  {\n\t\t    icon: 'email',\n\t\t    label: 'Email',\n\t\t    onPress: () => console.log('Pressed email'),\n\t\t  },\n\t\t  {\n\t\t    icon: 'bell',\n\t\t    label: 'Remind',\n\t\t    onPress: () => console.log('Pressed notifications'),\n\t\t    small: false,\n\t\t  },\n\t\t]}\n\t\tonStateChange={onStateChange}\n\t\tonPress={() => {\n\t\t  if (open) {\n\t\t    // do something if the speed dial is open\n\t\t  }\n\t\t}}\n\t      />\n\t    </Portal>\n\t  </Provider>\n\t);\n};\n      "]},"metadata":{},"sourceType":"module"}