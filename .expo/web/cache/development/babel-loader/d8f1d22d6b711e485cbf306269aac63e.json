{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/wizard/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"../view\";\nimport { BaseComponent } from \"../../commons\";\nimport Constants from \"../../helpers/Constants\";\nimport Colors from \"../../style/colors\";\nimport Shadows from \"../../style/shadows\";\nimport WizardStep from \"./WizardStep\";\nimport { States, StatesConfig } from \"./WizardStates\";\n\nvar Wizard = function (_BaseComponent) {\n  _inherits(Wizard, _BaseComponent);\n\n  var _super = _createSuper(Wizard);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _super.call(this, props);\n\n    _this.onOrientationChange = function () {\n      var maxWidth = _this.getMaxWidth();\n\n      if (_this.state.maxWidth !== maxWidth) {\n        _this.setState({\n          maxWidth: maxWidth\n        });\n      }\n    };\n\n    _this.state = {\n      maxWidth: _this.getMaxWidth()\n    };\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Constants.addDimensionsEventListener(this.onOrientationChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.onOrientationChange);\n    }\n  }, {\n    key: \"getMaxWidth\",\n    value: function getMaxWidth() {\n      if (Constants.isTablet) {\n        if (Constants.isLandscape) {\n          return Constants.screenWidth * 0.2;\n        } else {\n          return Constants.screenWidth * 0.26;\n        }\n      } else {\n        return Constants.screenWidth * 0.4;\n      }\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var _this2 = this;\n\n      var maxWidth = this.state.maxWidth;\n\n      var _this$getThemeProps = this.getThemeProps(),\n          activeIndex = _this$getThemeProps.activeIndex,\n          _this$getThemeProps$a = _this$getThemeProps.activeConfig,\n          activeConfig = _this$getThemeProps$a === void 0 ? StatesConfig.active : _this$getThemeProps$a,\n          testID = _this$getThemeProps.testID;\n\n      var children = React.Children.map(this.props.children, function (child, index) {\n        return React.cloneElement(child, {\n          testID: testID + \".step\" + index,\n          maxWidth: maxWidth,\n          index: index,\n          activeIndex: activeIndex,\n          activeConfig: activeConfig,\n          onPress: function onPress() {\n            _.invoke(_this2.props, 'onActiveIndexChanged', index);\n          }\n        });\n      });\n      return children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          testID = _this$getThemeProps2.testID,\n          containerStyle = _this$getThemeProps2.containerStyle;\n\n      return React.createElement(View, {\n        testID: testID,\n        style: [styles.container, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, this.renderChildren());\n    }\n  }]);\n\n  return Wizard;\n}(BaseComponent);\n\nWizard.displayName = 'Wizard';\nWizard.propTypes = {\n  activeIndex: PropTypes.number,\n  activeConfig: PropTypes.shape(WizardStep.propTypes),\n  onActiveIndexChanged: PropTypes.func\n};\nexport { Wizard as default };\nvar styles = StyleSheet.create({\n  container: _objectSpread({\n    backgroundColor: Colors.white,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%'\n  }, Platform.select({\n    ios: _objectSpread({}, Shadows.white30.bottom),\n    android: {\n      elevation: 2\n    }\n  }))\n});\nWizard.Step = WizardStep;\nWizard.States = States;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/wizard/index.js"],"names":["_","PropTypes","React","View","BaseComponent","Constants","Colors","Shadows","WizardStep","States","StatesConfig","Wizard","props","onOrientationChange","maxWidth","getMaxWidth","state","setState","addDimensionsEventListener","removeDimensionsEventListener","isTablet","isLandscape","screenWidth","getThemeProps","activeIndex","activeConfig","active","testID","children","Children","map","child","index","cloneElement","onPress","invoke","containerStyle","styles","container","renderChildren","displayName","propTypes","number","shape","onActiveIndexChanged","func","StyleSheet","create","backgroundColor","white","paddingVertical","paddingHorizontal","flexDirection","justifyContent","width","Platform","select","ios","white30","bottom","android","elevation","Step"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, Platform} from 'react-native';\nimport View from '../view';\nimport {BaseComponent} from '../../commons';\nimport Constants from '../../helpers/Constants';\nimport Colors from '../../style/colors';\nimport Shadows from '../../style/shadows';\nimport WizardStep from './WizardStep';\nimport {States, StatesConfig} from './WizardStates';\n\n/**\n * @description: Wizard Component: a wizard presents a series of steps in  prescribed order\n * that the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n *\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.js\n * @notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result.\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Wizard/Wizard.gif?raw=true\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Wizard/WizardPresets.png?raw=true\n */\nexport default class Wizard extends BaseComponent {\n  static displayName = 'Wizard';\n\n  static propTypes = {\n    /**\n     * The active step's index\n     */\n    activeIndex: PropTypes.number,\n    /**\n     * The configuration of the active step (see Wizard.Step.propTypes)\n     */\n    activeConfig: PropTypes.shape(WizardStep.propTypes),\n    /**\n     * Callback that is called when the active step is changed (i.e. a step was clicked on).\n     * The new activeIndex will be the input of the callback.\n     */\n    onActiveIndexChanged: PropTypes.func\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      maxWidth: this.getMaxWidth()\n    };\n  }\n\n  componentDidMount() {\n    Constants.addDimensionsEventListener(this.onOrientationChange);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.onOrientationChange);\n  }\n\n  onOrientationChange = () => {\n    const maxWidth = this.getMaxWidth();\n    if (this.state.maxWidth !== maxWidth) {\n      this.setState({maxWidth});\n    }\n  };\n\n  getMaxWidth() {\n    if (Constants.isTablet) {\n      if (Constants.isLandscape) {\n        return Constants.screenWidth * 0.2;\n      } else {\n        return Constants.screenWidth * 0.26;\n      }\n    } else {\n      return Constants.screenWidth * 0.4;\n    }\n  }\n\n  renderChildren() {\n    const {maxWidth} = this.state;\n    const {activeIndex, activeConfig = StatesConfig.active, testID} = this.getThemeProps();\n\n    const children = React.Children.map(this.props.children, (child, index) => {\n      return React.cloneElement(child, {\n        testID: `${testID}.step${index}`,\n        maxWidth,\n        index,\n        activeIndex,\n        activeConfig,\n        onPress: () => {\n          _.invoke(this.props, 'onActiveIndexChanged', index);\n        }\n      });\n    });\n\n    return children;\n  }\n\n  render() {\n    const {testID, containerStyle} = this.getThemeProps();\n\n    return (\n      <View testID={testID} style={[styles.container, containerStyle]}>\n        {this.renderChildren()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: Colors.white,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    ...Platform.select({\n      ios: {\n        ...Shadows.white30.bottom\n      },\n      android: {\n        elevation: 2\n      }\n    })\n  }\n});\n\nWizard.Step = WizardStep;\nWizard.States = States;\n"]},"metadata":{},"sourceType":"module"}