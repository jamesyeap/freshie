{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"inputStyle\", \"selectionColor\"];\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/chipsInput/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ReactNative from \"react-native-web/dist/index\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Constants } from \"../../helpers\";\nimport { Colors, BorderRadiuses, ThemeManager, Typography } from \"../../style\";\nimport Assets from \"../../assets\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { TextField } from \"../inputs\";\nimport Text from \"../text\";\nvar GUTTER_SPACING = 8;\n\nvar ChipsInput = function (_Component) {\n  _inherits(ChipsInput, _Component);\n\n  var _super = _createSuper(ChipsInput);\n\n  function ChipsInput(props) {\n    var _this;\n\n    _classCallCheck(this, ChipsInput);\n\n    _this = _super.call(this, props);\n\n    _this.addTag = function () {\n      var _this$props = _this.props,\n          onCreateTag = _this$props.onCreateTag,\n          disableTagAdding = _this$props.disableTagAdding;\n      var _this$state = _this.state,\n          value = _this$state.value,\n          tags = _this$state.tags;\n\n      if (disableTagAdding) {\n        return;\n      }\n\n      if (_.isNil(value) || _.isEmpty(value.trim())) {\n        return;\n      }\n\n      var newTag = _.isFunction(onCreateTag) ? onCreateTag(value) : value;\n      var newTags = [].concat(_toConsumableArray(tags), [newTag]);\n\n      _this.setState({\n        value: '',\n        tags: newTags\n      });\n\n      _.invoke(_this.props, 'onChangeTags', newTags, ChipsInput.onChangeTagsActions.ADDED, newTag);\n\n      _this.clear();\n    };\n\n    _this.markTagIndex = function (tagIndex) {\n      _this.setState({\n        tagIndexToRemove: tagIndex\n      });\n    };\n\n    _this.onChangeText = _.debounce(function (value) {\n      _this.setState({\n        value: value,\n        tagIndexToRemove: undefined\n      });\n\n      _.invoke(_this.props, 'onChangeText', value);\n    }, 0);\n\n    _this.onKeyPress = function (event) {\n      _.invoke(_this.props, 'onKeyPress', event);\n\n      var disableTagRemoval = _this.props.disableTagRemoval;\n\n      if (disableTagRemoval) {\n        return;\n      }\n\n      var _this$state2 = _this.state,\n          value = _this$state2.value,\n          tags = _this$state2.tags,\n          tagIndexToRemove = _this$state2.tagIndexToRemove;\n\n      var tagsCount = _.size(tags);\n\n      var keyCode = _.get(event, 'nativeEvent.key');\n\n      var hasNoValue = _.isEmpty(value);\n\n      var pressedBackspace = keyCode === Constants.backspaceKey;\n      var hasTags = tagsCount > 0;\n\n      if (pressedBackspace) {\n        if (hasNoValue && hasTags && _.isUndefined(tagIndexToRemove)) {\n          _this.setState({\n            tagIndexToRemove: tagsCount - 1\n          });\n        } else if (!_.isUndefined(tagIndexToRemove)) {\n          _this.removeMarkedTag();\n        }\n      }\n    };\n\n    _this.getLabel = function (item) {\n      var getLabel = _this.props.getLabel;\n\n      if (getLabel) {\n        return getLabel(item);\n      }\n\n      if (_.isString(item)) {\n        return item;\n      }\n\n      return _.get(item, 'label');\n    };\n\n    _this.renderTag = function (tag, index) {\n      var _this$props2 = _this.props,\n          tagStyle = _this$props2.tagStyle,\n          renderTag = _this$props2.renderTag;\n      var tagIndexToRemove = _this.state.tagIndexToRemove;\n      var shouldMarkTag = tagIndexToRemove === index;\n      var markedTagStyle = tag.invalid ? styles.inValidMarkedTag : styles.tagMarked;\n      var defaultTagStyle = tag.invalid ? styles.inValidTag : styles.tag;\n\n      if (_.isFunction(renderTag)) {\n        return renderTag(tag, index, shouldMarkTag, _this.getLabel(tag));\n      }\n\n      return React.createElement(View, {\n        key: index,\n        style: [defaultTagStyle, tagStyle, shouldMarkTag && markedTagStyle],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 7\n        }\n      }, _this.renderLabel(tag, shouldMarkTag));\n    };\n\n    _this.renderTagWrapper = function (tag, index) {\n      return React.createElement(TouchableOpacity, {\n        key: index,\n        activeOpacity: 1,\n        onPress: function onPress() {\n          return _this.onTagPress(index);\n        },\n        accessibilityHint: !_this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 7\n        }\n      }, _this.renderTag(tag, index));\n    };\n\n    _this.state = {\n      value: props.value,\n      tags: _.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined,\n      initialTags: props.tags\n    };\n    return _this;\n  }\n\n  _createClass(ChipsInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (Constants.isAndroid) {\n        var textInputHandle = ReactNative.findNodeHandle(this.input);\n\n        if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n          NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n        }\n      }\n    }\n  }, {\n    key: \"removeMarkedTag\",\n    value: function removeMarkedTag() {\n      var _this$state3 = this.state,\n          tags = _this$state3.tags,\n          tagIndexToRemove = _this$state3.tagIndexToRemove;\n\n      if (!_.isUndefined(tagIndexToRemove)) {\n        var removedTag = tags[tagIndexToRemove];\n        tags.splice(tagIndexToRemove, 1);\n        this.setState({\n          tags: tags,\n          tagIndexToRemove: undefined\n        });\n\n        _.invoke(this.props, 'onChangeTags', tags, ChipsInput.onChangeTagsActions.REMOVED, removedTag);\n      }\n    }\n  }, {\n    key: \"onTagPress\",\n    value: function onTagPress(index) {\n      var onTagPress = this.props.onTagPress;\n      var tagIndexToRemove = this.state.tagIndexToRemove;\n\n      if (onTagPress) {\n        onTagPress(index, tagIndexToRemove);\n        return;\n      }\n\n      if (tagIndexToRemove === index) {\n        this.removeMarkedTag();\n      } else {\n        this.markTagIndex(index);\n      }\n    }\n  }, {\n    key: \"isLastTagMarked\",\n    value: function isLastTagMarked() {\n      var _this$state4 = this.state,\n          tags = _this$state4.tags,\n          tagIndexToRemove = _this$state4.tagIndexToRemove;\n\n      var tagsCount = _.size(tags);\n\n      var isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n      return isLastTagMarked;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(tag, shouldMarkTag) {\n      var typography = this.props.modifiers.typography;\n      var label = this.getLabel(tag);\n      return React.createElement(View, {\n        row: true,\n        centerV: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }\n      }, shouldMarkTag && React.createElement(Image, {\n        style: [styles.removeIcon, tag.invalid && styles.inValidTagRemoveIcon],\n        source: Assets.icons.x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: [tag.invalid ? shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage : styles.tagLabel, typography],\n        accessibilityLabel: label + \" tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, !tag.invalid && shouldMarkTag ? 'Remove' : label));\n    }\n  }, {\n    key: \"renderTextInput\",\n    value: function renderTextInput() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          inputStyle = _this$props3.inputStyle,\n          selectionColor = _this$props3.selectionColor,\n          others = _objectWithoutProperties(_this$props3, _excluded);\n\n      var value = this.state.value;\n      var isLastTagMarked = this.isLastTagMarked();\n      return React.createElement(View, {\n        style: styles.inputWrapper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 7\n        }\n      }, React.createElement(TextField, _extends({\n        ref: function ref(r) {\n          return _this2.input = r;\n        },\n        text80: true,\n        blurOnSubmit: false\n      }, others, {\n        value: value,\n        onSubmitEditing: this.addTag,\n        onChangeText: this.onChangeText,\n        onKeyPress: this.onKeyPress,\n        enableErrors: false,\n        hideUnderline: true,\n        selectionColor: isLastTagMarked ? 'transparent' : selectionColor,\n        style: [inputStyle, {\n          textAlignVertical: 'center'\n        }],\n        containerStyle: {\n          flexGrow: 0\n        },\n        collapsable: false,\n        accessibilityHint: !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 9\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          disableTagRemoval = _this$props4.disableTagRemoval,\n          containerStyle = _this$props4.containerStyle,\n          hideUnderline = _this$props4.hideUnderline,\n          validationErrorMessage = _this$props4.validationErrorMessage;\n      var tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n      var _this$state5 = this.state,\n          tags = _this$state5.tags,\n          tagIndexToRemove = _this$state5.tagIndexToRemove;\n      return React.createElement(View, {\n        style: [!hideUnderline && styles.withUnderline, containerStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.tagsList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 9\n        }\n      }, _.map(tags, tagRenderFn), this.renderTextInput()), validationErrorMessage ? React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: [styles.errorMessage, tagIndexToRemove && styles.errorMessageWhileMarked],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }\n      }, validationErrorMessage)) : null);\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.tags !== prevState.initialTags) {\n        return {\n          initialTags: nextProps.tags,\n          tags: nextProps.tags\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return ChipsInput;\n}(Component);\n\nChipsInput.displayName = 'ChipsInput';\nChipsInput.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),\n  getLabel: PropTypes.func,\n  renderTag: PropTypes.elementType,\n  onChangeTags: PropTypes.func,\n  onCreateTag: PropTypes.func,\n  onTagPress: PropTypes.func,\n  validationErrorMessage: PropTypes.string,\n  disableTagRemoval: PropTypes.bool,\n  disableTagAdding: PropTypes.bool,\n  containerStyle: ViewPropTypes.style,\n  tagStyle: ViewPropTypes.style,\n  inputStyle: TextField.propTypes.style,\n  hideUnderline: PropTypes.bool\n};\nChipsInput.onChangeTagsActions = {\n  ADDED: 'added',\n  REMOVED: 'removed'\n};\nexport { ChipsInput };\nexport default asBaseComponent(ChipsInput);\nvar basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\nvar styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ThemeManager.dividerColor\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: _objectSpread({\n    backgroundColor: Colors.primary\n  }, basicTagStyle),\n  inValidTag: _objectSpread({\n    borderWidth: 1,\n    borderColor: Colors.red30\n  }, basicTagStyle),\n  inValidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.dark10\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  inValidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.white\n  }),\n  errorMessage: _objectSpread(_objectSpread({}, Typography.text80), {}, {\n    color: Colors.red30\n  }),\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/chipsInput/index.js"],"names":["_","PropTypes","React","Component","ReactNative","ViewPropTypes","Constants","Colors","BorderRadiuses","ThemeManager","Typography","Assets","asBaseComponent","View","TouchableOpacity","TextField","Text","GUTTER_SPACING","ChipsInput","props","addTag","onCreateTag","disableTagAdding","state","value","tags","isNil","isEmpty","trim","newTag","isFunction","newTags","setState","invoke","onChangeTagsActions","ADDED","clear","markTagIndex","tagIndex","tagIndexToRemove","onChangeText","debounce","undefined","onKeyPress","event","disableTagRemoval","tagsCount","size","keyCode","get","hasNoValue","pressedBackspace","backspaceKey","hasTags","isUndefined","removeMarkedTag","getLabel","item","isString","renderTag","tag","index","tagStyle","shouldMarkTag","markedTagStyle","invalid","styles","inValidMarkedTag","tagMarked","defaultTagStyle","inValidTag","renderLabel","renderTagWrapper","onTagPress","cloneDeep","initialTags","isAndroid","textInputHandle","findNodeHandle","input","NativeModules","TextInputDelKeyHandler","register","removedTag","splice","REMOVED","isLastTagMarked","typography","modifiers","label","removeIcon","inValidTagRemoveIcon","icons","x","errorMessageWhileMarked","errorMessage","tagLabel","inputStyle","selectionColor","others","inputWrapper","r","textAlignVertical","flexGrow","containerStyle","hideUnderline","validationErrorMessage","tagRenderFn","withUnderline","tagsList","map","renderTextInput","blur","focus","nextProps","prevState","displayName","propTypes","arrayOf","oneOfType","object","string","func","elementType","onChangeTags","bool","style","basicTagStyle","borderRadius","br100","paddingVertical","paddingHorizontal","marginRight","marginVertical","StyleSheet","create","borderBottomWidth","hairlineWidth","borderColor","dividerColor","flexDirection","flexWrap","minWidth","justifyContent","backgroundColor","primary","borderWidth","red30","red10","dark10","tintColor","white","width","height","text80","color"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;OACOC,W;;;SAAyCC,a;;AAChD,SAAQC,SAAR;AACA,SAAQC,MAAR,EAAgBC,cAAhB,EAAgCC,YAAhC,EAA8CC,UAA9C;AACA,OAAOC,MAAP;AACA,SAAQC,eAAR;AACA,OAAOC,IAAP;AACA,OAAOC,gBAAP;AACA,SAAQC,SAAR;AACA,OAAOC,IAAP;AAOA,IAAMC,cAAc,GAAG,CAAvB;;IAUMC,U;;;;;AA+DJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA8BnBC,MA9BmB,GA8BV,YAAM;AACb,wBAAwC,MAAKD,KAA7C;AAAA,UAAOE,WAAP,eAAOA,WAAP;AAAA,UAAoBC,gBAApB,eAAoBA,gBAApB;AACA,wBAAsB,MAAKC,KAA3B;AAAA,UAAOC,KAAP,eAAOA,KAAP;AAAA,UAAcC,IAAd,eAAcA,IAAd;;AAEA,UAAIH,gBAAJ,EAAsB;AACpB;AACD;;AACD,UAAItB,CAAC,CAAC0B,KAAF,CAAQF,KAAR,KAAkBxB,CAAC,CAAC2B,OAAF,CAAUH,KAAK,CAACI,IAAN,EAAV,CAAtB,EAA+C;AAC7C;AACD;;AAED,UAAMC,MAAM,GAAG7B,CAAC,CAAC8B,UAAF,CAAaT,WAAb,IAA4BA,WAAW,CAACG,KAAD,CAAvC,GAAiDA,KAAhE;AACA,UAAMO,OAAO,gCAAON,IAAP,IAAaI,MAAb,EAAb;;AAEA,YAAKG,QAAL,CAAc;AACZR,QAAAA,KAAK,EAAE,EADK;AAEZC,QAAAA,IAAI,EAAEM;AAFM,OAAd;;AAKA/B,MAAAA,CAAC,CAACiC,MAAF,CAAS,MAAKd,KAAd,EAAqB,cAArB,EAAqCY,OAArC,EAA8Cb,UAAU,CAACgB,mBAAX,CAA+BC,KAA7E,EAAoFN,MAApF;;AACA,YAAKO,KAAL;AACD,KAnDkB;;AAAA,UAqEnBC,YArEmB,GAqEJ,UAACC,QAAD,EAAc;AAC3B,YAAKN,QAAL,CAAc;AAACO,QAAAA,gBAAgB,EAAED;AAAnB,OAAd;AACD,KAvEkB;;AAAA,UAyEnBE,YAzEmB,GAyEJxC,CAAC,CAACyC,QAAF,CAAW,UAACjB,KAAD,EAAW;AACnC,YAAKQ,QAAL,CAAc;AAACR,QAAAA,KAAK,EAALA,KAAD;AAAQe,QAAAA,gBAAgB,EAAEG;AAA1B,OAAd;;AACA1C,MAAAA,CAAC,CAACiC,MAAF,CAAS,MAAKd,KAAd,EAAqB,cAArB,EAAqCK,KAArC;AACD,KAHc,EAGZ,CAHY,CAzEI;;AAAA,UAwGnBmB,UAxGmB,GAwGN,UAACC,KAAD,EAAW;AACtB5C,MAAAA,CAAC,CAACiC,MAAF,CAAS,MAAKd,KAAd,EAAqB,YAArB,EAAmCyB,KAAnC;;AAEA,UAAOC,iBAAP,GAA4B,MAAK1B,KAAjC,CAAO0B,iBAAP;;AACA,UAAIA,iBAAJ,EAAuB;AACrB;AACD;;AAED,yBAAwC,MAAKtB,KAA7C;AAAA,UAAOC,KAAP,gBAAOA,KAAP;AAAA,UAAcC,IAAd,gBAAcA,IAAd;AAAA,UAAoBc,gBAApB,gBAAoBA,gBAApB;;AACA,UAAMO,SAAS,GAAG9C,CAAC,CAAC+C,IAAF,CAAOtB,IAAP,CAAlB;;AACA,UAAMuB,OAAO,GAAGhD,CAAC,CAACiD,GAAF,CAAML,KAAN,EAAa,iBAAb,CAAhB;;AACA,UAAMM,UAAU,GAAGlD,CAAC,CAAC2B,OAAF,CAAUH,KAAV,CAAnB;;AACA,UAAM2B,gBAAgB,GAAGH,OAAO,KAAK1C,SAAS,CAAC8C,YAA/C;AACA,UAAMC,OAAO,GAAGP,SAAS,GAAG,CAA5B;;AAEA,UAAIK,gBAAJ,EAAsB;AACpB,YAAID,UAAU,IAAIG,OAAd,IAAyBrD,CAAC,CAACsD,WAAF,CAAcf,gBAAd,CAA7B,EAA8D;AAC5D,gBAAKP,QAAL,CAAc;AACZO,YAAAA,gBAAgB,EAAEO,SAAS,GAAG;AADlB,WAAd;AAGD,SAJD,MAIO,IAAI,CAAC9C,CAAC,CAACsD,WAAF,CAAcf,gBAAd,CAAL,EAAsC;AAC3C,gBAAKgB,eAAL;AACD;AACF;AACF,KAhIkB;;AAAA,UAkInBC,QAlImB,GAkIR,UAACC,IAAD,EAAU;AACnB,UAAOD,QAAP,GAAmB,MAAKrC,KAAxB,CAAOqC,QAAP;;AAEA,UAAIA,QAAJ,EAAc;AACZ,eAAOA,QAAQ,CAACC,IAAD,CAAf;AACD;;AACD,UAAIzD,CAAC,CAAC0D,QAAF,CAAWD,IAAX,CAAJ,EAAsB;AACpB,eAAOA,IAAP;AACD;;AACD,aAAOzD,CAAC,CAACiD,GAAF,CAAMQ,IAAN,EAAY,OAAZ,CAAP;AACD,KA5IkB;;AAAA,UAoKnBE,SApKmB,GAoKP,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC1B,yBAA8B,MAAK1C,KAAnC;AAAA,UAAO2C,QAAP,gBAAOA,QAAP;AAAA,UAAiBH,SAAjB,gBAAiBA,SAAjB;AACA,UAAOpB,gBAAP,GAA2B,MAAKhB,KAAhC,CAAOgB,gBAAP;AACA,UAAMwB,aAAa,GAAGxB,gBAAgB,KAAKsB,KAA3C;AACA,UAAMG,cAAc,GAAGJ,GAAG,CAACK,OAAJ,GAAcC,MAAM,CAACC,gBAArB,GAAwCD,MAAM,CAACE,SAAtE;AACA,UAAMC,eAAe,GAAGT,GAAG,CAACK,OAAJ,GAAcC,MAAM,CAACI,UAArB,GAAkCJ,MAAM,CAACN,GAAjE;;AAEA,UAAI5D,CAAC,CAAC8B,UAAF,CAAa6B,SAAb,CAAJ,EAA6B;AAC3B,eAAOA,SAAS,CAACC,GAAD,EAAMC,KAAN,EAAaE,aAAb,EAA4B,MAAKP,QAAL,CAAcI,GAAd,CAA5B,CAAhB;AACD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEC,KAAX;AAAkB,QAAA,KAAK,EAAE,CAACQ,eAAD,EAAkBP,QAAlB,EAA4BC,aAAa,IAAIC,cAA7C,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,MAAKO,WAAL,CAAiBX,GAAjB,EAAsBG,aAAtB,CADH,CADF;AAKD,KApLkB;;AAAA,UAsLnBS,gBAtLmB,GAsLA,UAACZ,GAAD,EAAMC,KAAN,EAAgB;AACjC,aACE,oBAAC,gBAAD;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,aAAa,EAAE,CAFjB;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKY,UAAL,CAAgBZ,KAAhB,CAAN;AAAA,SAHX;AAIE,QAAA,iBAAiB,EAAE,CAAC,MAAK1C,KAAL,CAAW0B,iBAAZ,GAAgC,+BAAhC,GAAkEH,SAJvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMG,MAAKiB,SAAL,CAAeC,GAAf,EAAoBC,KAApB,CANH,CADF;AAUD,KAjMkB;;AAGjB,UAAKtC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAEL,KAAK,CAACK,KADF;AAEXC,MAAAA,IAAI,EAAEzB,CAAC,CAAC0E,SAAF,CAAYvD,KAAK,CAACM,IAAlB,KAA2B,EAFtB;AAGXc,MAAAA,gBAAgB,EAAEG,SAHP;AAIXiC,MAAAA,WAAW,EAAExD,KAAK,CAACM;AAJR,KAAb;AAHiB;AASlB;;;;WAED,6BAAoB;AAClB,UAAInB,SAAS,CAACsE,SAAd,EAAyB;AACvB,YAAMC,eAAe,GAAGzE,WAAW,CAAC0E,cAAZ,CAA2B,KAAKC,KAAhC,CAAxB;;AACA,YAAIF,eAAe,IAAIG,aAAa,CAACC,sBAArC,EAA6D;AAC3DD,UAAAA,aAAa,CAACC,sBAAd,CAAqCC,QAArC,CAA8CL,eAA9C;AACD;AACF;AACF;;;WAmCD,2BAAkB;AAChB,yBAAiC,KAAKtD,KAAtC;AAAA,UAAOE,IAAP,gBAAOA,IAAP;AAAA,UAAac,gBAAb,gBAAaA,gBAAb;;AAEA,UAAI,CAACvC,CAAC,CAACsD,WAAF,CAAcf,gBAAd,CAAL,EAAsC;AACpC,YAAM4C,UAAU,GAAG1D,IAAI,CAACc,gBAAD,CAAvB;AAEAd,QAAAA,IAAI,CAAC2D,MAAL,CAAY7C,gBAAZ,EAA8B,CAA9B;AACA,aAAKP,QAAL,CAAc;AACZP,UAAAA,IAAI,EAAJA,IADY;AAEZc,UAAAA,gBAAgB,EAAEG;AAFN,SAAd;;AAKA1C,QAAAA,CAAC,CAACiC,MAAF,CAAS,KAAKd,KAAd,EAAqB,cAArB,EAAqCM,IAArC,EAA2CP,UAAU,CAACgB,mBAAX,CAA+BmD,OAA1E,EAAmFF,UAAnF;AACD;AACF;;;WAWD,oBAAWtB,KAAX,EAAkB;AAChB,UAAOY,UAAP,GAAqB,KAAKtD,KAA1B,CAAOsD,UAAP;AACA,UAAOlC,gBAAP,GAA2B,KAAKhB,KAAhC,CAAOgB,gBAAP;;AAGA,UAAIkC,UAAJ,EAAgB;AACdA,QAAAA,UAAU,CAACZ,KAAD,EAAQtB,gBAAR,CAAV;AACA;AACD;;AAGD,UAAIA,gBAAgB,KAAKsB,KAAzB,EAAgC;AAC9B,aAAKN,eAAL;AACD,OAFD,MAEO;AACL,aAAKlB,YAAL,CAAkBwB,KAAlB;AACD;AACF;;;WAED,2BAAkB;AAChB,yBAAiC,KAAKtC,KAAtC;AAAA,UAAOE,IAAP,gBAAOA,IAAP;AAAA,UAAac,gBAAb,gBAAaA,gBAAb;;AACA,UAAMO,SAAS,GAAG9C,CAAC,CAAC+C,IAAF,CAAOtB,IAAP,CAAlB;;AACA,UAAM6D,eAAe,GAAG/C,gBAAgB,KAAKO,SAAS,GAAG,CAAzD;AAEA,aAAOwC,eAAP;AACD;;;WAwCD,qBAAY1B,GAAZ,EAAiBG,aAAjB,EAAgC;AAC9B,UAAOwB,UAAP,GAAqB,KAAKpE,KAAL,CAAWqE,SAAhC,CAAOD,UAAP;AACA,UAAME,KAAK,GAAG,KAAKjC,QAAL,CAAcI,GAAd,CAAd;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,GAAG,MAAT;AAAU,QAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,aAAa,IACZ,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,CAACG,MAAM,CAACwB,UAAR,EAAoB9B,GAAG,CAACK,OAAJ,IAAeC,MAAM,CAACyB,oBAA1C,CADT;AAEE,QAAA,MAAM,EAAEhF,MAAM,CAACiF,KAAP,CAAaC,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CAACjC,GAAG,CAACK,OAAJ,GAAeF,aAAa,GAAGG,MAAM,CAAC4B,uBAAV,GAAoC5B,MAAM,CAAC6B,YAAvE,GACJ7B,MAAM,CAAC8B,QADJ,EACcT,UADd,CADT;AAEoC,QAAA,kBAAkB,EAAKE,KAAL,SAFtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,CAAC7B,GAAG,CAACK,OAAL,IAAgBF,aAAhB,GAAgC,QAAhC,GAA2C0B,KAJ9C,CAPF,CADF;AAgBD;;;WAiCD,2BAAkB;AAAA;;AAChB,yBAAgD,KAAKtE,KAArD;AAAA,UAAO8E,UAAP,gBAAOA,UAAP;AAAA,UAAmBC,cAAnB,gBAAmBA,cAAnB;AAAA,UAAsCC,MAAtC;;AACA,UAAO3E,KAAP,GAAgB,KAAKD,KAArB,CAAOC,KAAP;AACA,UAAM8D,eAAe,GAAG,KAAKA,eAAL,EAAxB;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACkC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,GAAG,EAAE,aAAAC,CAAC;AAAA,iBAAK,MAAI,CAACtB,KAAL,GAAasB,CAAlB;AAAA,SADR;AAEE,QAAA,MAAM,MAFR;AAGE,QAAA,YAAY,EAAE;AAHhB,SAIMF,MAJN;AAKE,QAAA,KAAK,EAAE3E,KALT;AAME,QAAA,eAAe,EAAE,KAAKJ,MANxB;AAOE,QAAA,YAAY,EAAE,KAAKoB,YAPrB;AAQE,QAAA,UAAU,EAAE,KAAKG,UARnB;AASE,QAAA,YAAY,EAAE,KAThB;AAUE,QAAA,aAAa,MAVf;AAWE,QAAA,cAAc,EAAE2C,eAAe,GAAG,aAAH,GAAmBY,cAXpD;AAYE,QAAA,KAAK,EAAE,CAACD,UAAD,EAAa;AAACK,UAAAA,iBAAiB,EAAE;AAApB,SAAb,CAZT;AAaE,QAAA,cAAc,EAAE;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAblB;AAcE,QAAA,WAAW,EAAE,KAdf;AAeE,QAAA,iBAAiB,EACf,CAAC,KAAKpF,KAAL,CAAW0B,iBAAZ,GAAgC,iDAAhC,GAAoFH,SAhBxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAuBD;;;WAED,kBAAS;AACP,yBAAmF,KAAKvB,KAAxF;AAAA,UAAO0B,iBAAP,gBAAOA,iBAAP;AAAA,UAA0B2D,cAA1B,gBAA0BA,cAA1B;AAAA,UAA0CC,aAA1C,gBAA0CA,aAA1C;AAAA,UAAyDC,sBAAzD,gBAAyDA,sBAAzD;AACA,UAAMC,WAAW,GAAG9D,iBAAiB,GAAG,KAAKc,SAAR,GAAoB,KAAKa,gBAA9D;AACA,yBAAiC,KAAKjD,KAAtC;AAAA,UAAOE,IAAP,gBAAOA,IAAP;AAAA,UAAac,gBAAb,gBAAaA,gBAAb;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAAC,CAACkE,aAAD,IAAkBvC,MAAM,CAAC0C,aAA1B,EAAyCJ,cAAzC,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtC,MAAM,CAAC2C,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG7G,CAAC,CAAC8G,GAAF,CAAMrF,IAAN,EAAYkF,WAAZ,CADH,EAEG,KAAKI,eAAL,EAFH,CADF,EAKGL,sBAAsB,GAEnB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACxC,MAAM,CAAC6B,YAAR,EAAsBxD,gBAAgB,IAAI2B,MAAM,CAAC4B,uBAAjD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGY,sBADH,CADF,CAFmB,GAOjB,IAZR,CADF;AAgBD;;;WAED,gBAAO;AACL,WAAK3B,KAAL,CAAWiC,IAAX;AACD;;;WAED,iBAAQ;AACN,WAAKjC,KAAL,CAAWkC,KAAX;AACD;;;WAED,iBAAQ;AACN,WAAKlC,KAAL,CAAW3C,KAAX;AACD;;;WA9OD,kCAAgC8E,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,UAAID,SAAS,CAACzF,IAAV,KAAmB0F,SAAS,CAACxC,WAAjC,EAA8C;AAC5C,eAAO;AACLA,UAAAA,WAAW,EAAEuC,SAAS,CAACzF,IADlB;AAELA,UAAAA,IAAI,EAAEyF,SAAS,CAACzF;AAFX,SAAP;AAID;;AACD,aAAO,IAAP;AACD;;;;EA3FsBtB,S;;AAAnBe,U,CACGkG,W,GAAc,Y;AADjBlG,U,CAGGmG,S,GAAY;AAIjB5F,EAAAA,IAAI,EAAExB,SAAS,CAACqH,OAAV,CAAkBrH,SAAS,CAACsH,SAAV,CAAoB,CAACtH,SAAS,CAACuH,MAAX,EAAmBvH,SAAS,CAACwH,MAA7B,CAApB,CAAlB,CAJW;AAQjBjE,EAAAA,QAAQ,EAAEvD,SAAS,CAACyH,IARH;AAYjB/D,EAAAA,SAAS,EAAE1D,SAAS,CAAC0H,WAZJ;AAgBjBC,EAAAA,YAAY,EAAE3H,SAAS,CAACyH,IAhBP;AAoBjBrG,EAAAA,WAAW,EAAEpB,SAAS,CAACyH,IApBN;AAwBjBjD,EAAAA,UAAU,EAAExE,SAAS,CAACyH,IAxBL;AA4BjBhB,EAAAA,sBAAsB,EAAEzG,SAAS,CAACwH,MA5BjB;AAgCjB5E,EAAAA,iBAAiB,EAAE5C,SAAS,CAAC4H,IAhCZ;AAoCjBvG,EAAAA,gBAAgB,EAAErB,SAAS,CAAC4H,IApCX;AAwCjBrB,EAAAA,cAAc,EAAEnG,aAAa,CAACyH,KAxCb;AA4CjBhE,EAAAA,QAAQ,EAAEzD,aAAa,CAACyH,KA5CP;AAgDjB7B,EAAAA,UAAU,EAAElF,SAAS,CAACsG,SAAV,CAAoBS,KAhDf;AAoDjBrB,EAAAA,aAAa,EAAExG,SAAS,CAAC4H;AApDR,C;AAHf3G,U,CA0DGgB,mB,GAAsB;AAC3BC,EAAAA,KAAK,EAAE,OADoB;AAE3BkD,EAAAA,OAAO,EAAE;AAFkB,C;AA0Q/B,SAAQnE,UAAR;AACA,eAAeN,eAAe,CAACM,UAAD,CAA9B;AAGA,IAAM6G,aAAa,GAAG;AACpBC,EAAAA,YAAY,EAAExH,cAAc,CAACyH,KADT;AAEpBC,EAAAA,eAAe,EAAE,GAFG;AAGpBC,EAAAA,iBAAiB,EAAE,EAHC;AAIpBC,EAAAA,WAAW,EAAEnH,cAJO;AAKpBoH,EAAAA,cAAc,EAAEpH,cAAc,GAAG;AALb,CAAtB;AAQA,IAAMiD,MAAM,GAAGoE,UAAU,CAACC,MAAX,CAAkB;AAC/B3B,EAAAA,aAAa,EAAE;AACb4B,IAAAA,iBAAiB,EAAEF,UAAU,CAACG,aADjB;AAEbC,IAAAA,WAAW,EAAEjI,YAAY,CAACkI;AAFb,GADgB;AAK/B9B,EAAAA,QAAQ,EAAE;AACR+B,IAAAA,aAAa,EAAE,KADP;AAERC,IAAAA,QAAQ,EAAE;AAFF,GALqB;AAS/BzC,EAAAA,YAAY,EAAE;AACZG,IAAAA,QAAQ,EAAE,CADE;AAEZuC,IAAAA,QAAQ,EAAE,GAFE;AAGZC,IAAAA,cAAc,EAAE;AAHJ,GATiB;AAc/BnF,EAAAA,GAAG;AACDoF,IAAAA,eAAe,EAAEzI,MAAM,CAAC0I;AADvB,KAEElB,aAFF,CAd4B;AAkB/BzD,EAAAA,UAAU;AACR4E,IAAAA,WAAW,EAAE,CADL;AAERR,IAAAA,WAAW,EAAEnI,MAAM,CAAC4I;AAFZ,KAGLpB,aAHK,CAlBqB;AAuB/B5D,EAAAA,gBAAgB,EAAE;AAChBuE,IAAAA,WAAW,EAAEnI,MAAM,CAAC6I;AADJ,GAvBa;AA0B/BhF,EAAAA,SAAS,EAAE;AACT4E,IAAAA,eAAe,EAAEzI,MAAM,CAAC8I;AADf,GA1BoB;AA6B/B3D,EAAAA,UAAU,EAAE;AACV4D,IAAAA,SAAS,EAAE/I,MAAM,CAACgJ,KADR;AAEVC,IAAAA,KAAK,EAAE,EAFG;AAGVC,IAAAA,MAAM,EAAE,EAHE;AAIVrB,IAAAA,WAAW,EAAE;AAJH,GA7BmB;AAmC/BzC,EAAAA,oBAAoB,EAAE;AACpB2D,IAAAA,SAAS,EAAE/I,MAAM,CAAC6I;AADE,GAnCS;AAsC/BpD,EAAAA,QAAQ,kCACHtF,UAAU,CAACgJ,MADR;AAENC,IAAAA,KAAK,EAAEpJ,MAAM,CAACgJ;AAFR,IAtCuB;AA0C/BxD,EAAAA,YAAY,kCACPrF,UAAU,CAACgJ,MADJ;AAEVC,IAAAA,KAAK,EAAEpJ,MAAM,CAAC4I;AAFJ,IA1CmB;AA8C/BrD,EAAAA,uBAAuB,EAAE;AACvB6D,IAAAA,KAAK,EAAEpJ,MAAM,CAAC6I;AADS;AA9CM,CAAlB,CAAf","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {Component} from 'react';\nimport ReactNative, {NativeModules, StyleSheet, ViewPropTypes, Image} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {Colors, BorderRadiuses, ThemeManager, Typography} from '../../style';\nimport Assets from '../../assets';\nimport {asBaseComponent} from '../../commons/new';\nimport View from '../view';\nimport TouchableOpacity from '../touchableOpacity';\nimport {TextField} from '../inputs';\nimport Text from '../text';\n\n// TODO: support updating tags externally\n// TODO: support char array as tag creators (like comma)\n// TODO: add notes to Docs about the Android fix for onKeyPress\n\n\nconst GUTTER_SPACING = 8;\n\n/**\n * @description: Tags input component (chips)\n * @modifiers: Typography\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ChipsInput/ChipsInput.gif?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ChipsInputScreen.js\n * @extends: TextField\n * @extendsLink: https://github.com/wix/react-native-ui-lib/blob/master/src/components/inputs/TextField.js\n */\nclass ChipsInput extends Component {\n  static displayName = 'ChipsInput';\n\n  static propTypes = {\n    /**\n     * list of tags. can be string boolean or custom object when implementing getLabel\n     */\n    tags: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.object, PropTypes.string])),\n    /**\n     * callback for extracting the label out of the tag item\n     */\n    getLabel: PropTypes.func,\n    /**\n     * callback for custom rendering tag item\n     */\n    renderTag: PropTypes.elementType,\n    /**\n     * callback for onChangeTags event\n     */\n    onChangeTags: PropTypes.func,\n    /**\n     * callback for creating new tag out of input value (good for composing tag object)\n     */\n    onCreateTag: PropTypes.func,\n    /**\n     * callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}\n     */\n    onTagPress: PropTypes.func,\n    /**\n     * validation message error appears when tag isn't validate\n     */\n    validationErrorMessage: PropTypes.string,\n    /**\n     * if true, tags *removal* Ux won't be available\n     */\n    disableTagRemoval: PropTypes.bool,\n    /**\n     * if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available\n     */\n    disableTagAdding: PropTypes.bool,\n    /**\n     * custom styling for the component container\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the tag item\n     */\n    tagStyle: ViewPropTypes.style,\n    /**\n     * custom styling for the text input\n     */\n    inputStyle: TextField.propTypes.style,\n    /**\n     * should hide input underline\n     */\n    hideUnderline: PropTypes.bool\n  };\n\n  static onChangeTagsActions = {\n    ADDED: 'added',\n    REMOVED: 'removed'\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: props.value,\n      tags: _.cloneDeep(props.tags) || [],\n      tagIndexToRemove: undefined,\n      initialTags: props.tags\n    };\n  }\n\n  componentDidMount() {\n    if (Constants.isAndroid) {\n      const textInputHandle = ReactNative.findNodeHandle(this.input);\n      if (textInputHandle && NativeModules.TextInputDelKeyHandler) {\n        NativeModules.TextInputDelKeyHandler.register(textInputHandle);\n      }\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.tags !== prevState.initialTags) {\n      return {\n        initialTags: nextProps.tags,\n        tags: nextProps.tags\n      };\n    }\n    return null;\n  }\n\n  addTag = () => {\n    const {onCreateTag, disableTagAdding} = this.props;\n    const {value, tags} = this.state;\n\n    if (disableTagAdding) {\n      return;\n    }\n    if (_.isNil(value) || _.isEmpty(value.trim())) {\n      return;\n    }\n\n    const newTag = _.isFunction(onCreateTag) ? onCreateTag(value) : value;\n    const newTags = [...tags, newTag];\n\n    this.setState({\n      value: '',\n      tags: newTags\n    });\n\n    _.invoke(this.props, 'onChangeTags', newTags, ChipsInput.onChangeTagsActions.ADDED, newTag);\n    this.clear();\n  }\n\n  removeMarkedTag() {\n    const {tags, tagIndexToRemove} = this.state;\n\n    if (!_.isUndefined(tagIndexToRemove)) {\n      const removedTag = tags[tagIndexToRemove];\n\n      tags.splice(tagIndexToRemove, 1);\n      this.setState({\n        tags,\n        tagIndexToRemove: undefined\n      });\n\n      _.invoke(this.props, 'onChangeTags', tags, ChipsInput.onChangeTagsActions.REMOVED, removedTag);\n    }\n  }\n\n  markTagIndex = (tagIndex) => {\n    this.setState({tagIndexToRemove: tagIndex});\n  }\n\n  onChangeText = _.debounce((value) => {\n    this.setState({value, tagIndexToRemove: undefined});\n    _.invoke(this.props, 'onChangeText', value);\n  }, 0);\n\n  onTagPress(index) {\n    const {onTagPress} = this.props;\n    const {tagIndexToRemove} = this.state;\n\n    // custom press handler\n    if (onTagPress) {\n      onTagPress(index, tagIndexToRemove);\n      return;\n    }\n\n    // default press handler\n    if (tagIndexToRemove === index) {\n      this.removeMarkedTag();\n    } else {\n      this.markTagIndex(index);\n    }\n  }\n\n  isLastTagMarked() {\n    const {tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const isLastTagMarked = tagIndexToRemove === tagsCount - 1;\n\n    return isLastTagMarked;\n  }\n\n  onKeyPress = (event) => {\n    _.invoke(this.props, 'onKeyPress', event);\n\n    const {disableTagRemoval} = this.props;\n    if (disableTagRemoval) {\n      return;\n    }\n\n    const {value, tags, tagIndexToRemove} = this.state;\n    const tagsCount = _.size(tags);\n    const keyCode = _.get(event, 'nativeEvent.key');\n    const hasNoValue = _.isEmpty(value);\n    const pressedBackspace = keyCode === Constants.backspaceKey;\n    const hasTags = tagsCount > 0;\n\n    if (pressedBackspace) {\n      if (hasNoValue && hasTags && _.isUndefined(tagIndexToRemove)) {\n        this.setState({\n          tagIndexToRemove: tagsCount - 1\n        });\n      } else if (!_.isUndefined(tagIndexToRemove)) {\n        this.removeMarkedTag();\n      }\n    }\n  }\n\n  getLabel = (item) => {\n    const {getLabel} = this.props;\n\n    if (getLabel) {\n      return getLabel(item);\n    }\n    if (_.isString(item)) {\n      return item;\n    }\n    return _.get(item, 'label');\n  }\n\n  renderLabel(tag, shouldMarkTag) {\n    const {typography} = this.props.modifiers;\n    const label = this.getLabel(tag);\n\n    return (\n      <View row centerV>\n        {shouldMarkTag && (\n          <Image\n            style={[styles.removeIcon, tag.invalid && styles.inValidTagRemoveIcon]}\n            source={Assets.icons.x}\n          />)\n        }\n        <Text\n          style={[tag.invalid ? (shouldMarkTag ? styles.errorMessageWhileMarked : styles.errorMessage)\n            : styles.tagLabel, typography]} accessibilityLabel={`${label} tag`}\n        >\n          {!tag.invalid && shouldMarkTag ? 'Remove' : label}\n        </Text>\n      </View>\n    );\n  }\n\n  renderTag = (tag, index) => {\n    const {tagStyle, renderTag} = this.props;\n    const {tagIndexToRemove} = this.state;\n    const shouldMarkTag = tagIndexToRemove === index;\n    const markedTagStyle = tag.invalid ? styles.inValidMarkedTag : styles.tagMarked;\n    const defaultTagStyle = tag.invalid ? styles.inValidTag : styles.tag;\n\n    if (_.isFunction(renderTag)) {\n      return renderTag(tag, index, shouldMarkTag, this.getLabel(tag));\n    }\n\n    return (\n      <View key={index} style={[defaultTagStyle, tagStyle, shouldMarkTag && markedTagStyle]}>\n        {this.renderLabel(tag, shouldMarkTag)}\n      </View>\n    );\n  }\n\n  renderTagWrapper = (tag, index) => {\n    return (\n      <TouchableOpacity\n        key={index}\n        activeOpacity={1}\n        onPress={() => this.onTagPress(index)}\n        accessibilityHint={!this.props.disableTagRemoval ? 'tap twice for remove tag mode' : undefined}\n      >\n        {this.renderTag(tag, index)}\n      </TouchableOpacity>\n    );\n  }\n\n  renderTextInput() {\n    const {inputStyle, selectionColor, ...others} = this.props;\n    const {value} = this.state;\n    const isLastTagMarked = this.isLastTagMarked();\n\n    return (\n      <View style={styles.inputWrapper}>\n        <TextField\n          ref={r => (this.input = r)}\n          text80\n          blurOnSubmit={false}\n          {...others}\n          value={value}\n          onSubmitEditing={this.addTag}\n          onChangeText={this.onChangeText}\n          onKeyPress={this.onKeyPress}\n          enableErrors={false}\n          hideUnderline\n          selectionColor={isLastTagMarked ? 'transparent' : selectionColor}\n          style={[inputStyle, {textAlignVertical: 'center'}]}\n          containerStyle={{flexGrow: 0}}\n          collapsable={false}\n          accessibilityHint={\n            !this.props.disableTagRemoval ? 'press keyboard delete button to remove last tag' : undefined\n          }\n        />\n      </View>\n    );\n  }\n\n  render() {\n    const {disableTagRemoval, containerStyle, hideUnderline, validationErrorMessage} = this.props;\n    const tagRenderFn = disableTagRemoval ? this.renderTag : this.renderTagWrapper;\n    const {tags, tagIndexToRemove} = this.state;\n\n    return (\n      <View style={[!hideUnderline && styles.withUnderline, containerStyle]}>\n        <View style={styles.tagsList}>\n          {_.map(tags, tagRenderFn)}\n          {this.renderTextInput()}\n        </View>\n        {validationErrorMessage ?\n          (\n            <View>\n              <Text style={[styles.errorMessage, tagIndexToRemove && styles.errorMessageWhileMarked]}>\n                {validationErrorMessage}\n              </Text>\n            </View>\n          ) : null}\n      </View>\n    );\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n}\n\nexport {ChipsInput}; // For tests\nexport default asBaseComponent(ChipsInput);\n\n\nconst basicTagStyle = {\n  borderRadius: BorderRadiuses.br100,\n  paddingVertical: 4.5,\n  paddingHorizontal: 12,\n  marginRight: GUTTER_SPACING,\n  marginVertical: GUTTER_SPACING / 2\n};\n\nconst styles = StyleSheet.create({\n  withUnderline: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderColor: ThemeManager.dividerColor\n  },\n  tagsList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  inputWrapper: {\n    flexGrow: 1,\n    minWidth: 120,\n    justifyContent: 'center'\n  },\n  tag: {\n    backgroundColor: Colors.primary,\n    ...basicTagStyle\n  },\n  inValidTag: {\n    borderWidth: 1,\n    borderColor: Colors.red30,\n    ...basicTagStyle\n  },\n  inValidMarkedTag: {\n    borderColor: Colors.red10\n  },\n  tagMarked: {\n    backgroundColor: Colors.dark10\n  },\n  removeIcon: {\n    tintColor: Colors.white,\n    width: 10,\n    height: 10,\n    marginRight: 6\n  },\n  inValidTagRemoveIcon: {\n    tintColor: Colors.red10\n  },\n  tagLabel: {\n    ...Typography.text80,\n    color: Colors.white\n  },\n  errorMessage: {\n    ...Typography.text80,\n    color: Colors.red30\n  },\n  errorMessageWhileMarked: {\n    color: Colors.red10\n  }\n});\n"]},"metadata":{},"sourceType":"module"}