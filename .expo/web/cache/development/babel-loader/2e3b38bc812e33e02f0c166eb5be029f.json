{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/wizard/WizardStep.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { PureBaseComponent } from \"../../commons\";\nimport Colors from \"../../style/colors\";\nimport BorderRadiuses from \"../../style/borderRadiuses\";\nimport Spacings from \"../../style/spacings\";\nimport { States, StatesConfig } from \"./WizardStates\";\n\nvar WizardStep = function (_PureBaseComponent) {\n  _inherits(WizardStep, _PureBaseComponent);\n\n  var _super = _createSuper(WizardStep);\n\n  function WizardStep() {\n    _classCallCheck(this, WizardStep);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(WizardStep, [{\n    key: \"getProps\",\n    value: function getProps() {\n      var props = this.getThemeProps();\n      var state = props.state,\n          propsActiveConfig = props.activeConfig,\n          index = props.index,\n          activeIndex = props.activeIndex;\n      var config = StatesConfig[state];\n      var activeConfig = index === activeIndex ? propsActiveConfig : {};\n      return _objectSpread(_objectSpread(_objectSpread({}, config), props), activeConfig);\n    }\n  }, {\n    key: \"getAccessibilityLabel\",\n    value: function getAccessibilityLabel() {\n      var _this$props = this.props,\n          index = _this$props.index,\n          label = _this$props.label,\n          state = _this$props.state;\n      var config = StatesConfig[state];\n      var extraInfo = (config == null ? void 0 : config.accessibilityInfo) || '';\n      return \"Step \" + (index + 1) + \", \" + label + \", \" + extraInfo;\n    }\n  }, {\n    key: \"renderCircle\",\n    value: function renderCircle(props) {\n      var testID = props.testID,\n          index = props.index,\n          activeIndex = props.activeIndex,\n          onPress = props.onPress,\n          indexLabelStyle = props.indexLabelStyle,\n          circleSize = props.circleSize,\n          color = props.color,\n          _props$circleColor = props.circleColor,\n          circleColor = _props$circleColor === void 0 ? color : _props$circleColor,\n          circleBackgroundColor = props.circleBackgroundColor,\n          icon = props.icon,\n          enabled = props.enabled;\n      var hitSlopSize = Spacings.s2;\n      return React.createElement(TouchableOpacity, {\n        testID: testID + \".circle\",\n        style: [styles.circle, circleSize && {\n          width: circleSize,\n          height: circleSize\n        }, {\n          borderColor: circleColor,\n          backgroundColor: circleBackgroundColor\n        }],\n        onPress: enabled ? onPress : undefined,\n        hitSlop: {\n          top: hitSlopSize,\n          bottom: hitSlopSize,\n          left: hitSlopSize,\n          right: hitSlopSize\n        },\n        disabled: !enabled,\n        accessibilityLabel: this.getAccessibilityLabel(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, index === activeIndex || _.isUndefined(icon) ? React.createElement(Text, {\n        text80: true,\n        testID: testID + \".index\",\n        style: [{\n          color: color\n        }, indexLabelStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, index + 1) : React.createElement(Image, {\n        testID: testID + \".image\",\n        source: icon,\n        tintColor: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.getProps();\n      var testID = props.testID,\n          label = props.label,\n          labelStyle = props.labelStyle,\n          index = props.index,\n          activeIndex = props.activeIndex,\n          maxWidth = props.maxWidth,\n          connectorStyle = props.connectorStyle;\n      return React.createElement(View, {\n        testID: testID,\n        row: true,\n        center: true,\n        flex: index !== activeIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, index > activeIndex && React.createElement(View, {\n        flex: true,\n        style: [styles.connector, connectorStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }\n      }), this.renderCircle(props), index === activeIndex && React.createElement(Text, {\n        text80: true,\n        testID: testID + \".label\",\n        numberOfLines: 1,\n        style: [styles.label, {\n          maxWidth: maxWidth\n        }, labelStyle],\n        accessible: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }\n      }, label), index < activeIndex && React.createElement(View, {\n        flex: true,\n        style: [styles.connector, connectorStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 33\n        }\n      }));\n    }\n  }]);\n\n  return WizardStep;\n}(PureBaseComponent);\n\nWizardStep.displayName = 'Wizard.Step';\nWizardStep.propTypes = {\n  state: PropTypes.oneOf(Object.values(States)),\n  label: PropTypes.string,\n  labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  connectorStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  color: PropTypes.string,\n  circleColor: PropTypes.string,\n  circleSize: PropTypes.number,\n  circleBackgroundColor: PropTypes.string,\n  icon: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  indexLabelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  enabled: PropTypes.bool,\n  accessibilityInfo: PropTypes.string\n};\nexport { WizardStep as default };\nvar styles = StyleSheet.create({\n  connector: {\n    borderWidth: 0.5,\n    borderColor: Colors.dark60\n  },\n  circle: {\n    width: 24,\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100,\n    borderWidth: 1\n  },\n  label: {\n    marginHorizontal: 8,\n    color: Colors.dark20\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/wizard/WizardStep.js"],"names":["_","PropTypes","React","View","Text","Image","TouchableOpacity","PureBaseComponent","Colors","BorderRadiuses","Spacings","States","StatesConfig","WizardStep","props","getThemeProps","state","propsActiveConfig","activeConfig","index","activeIndex","config","label","extraInfo","accessibilityInfo","testID","onPress","indexLabelStyle","circleSize","color","circleColor","circleBackgroundColor","icon","enabled","hitSlopSize","s2","styles","circle","width","height","borderColor","backgroundColor","undefined","top","bottom","left","right","getAccessibilityLabel","isUndefined","getProps","labelStyle","maxWidth","connectorStyle","connector","renderCircle","displayName","propTypes","oneOf","Object","values","string","oneOfType","object","number","array","bool","StyleSheet","create","borderWidth","dark60","alignItems","justifyContent","borderRadius","br100","marginHorizontal","dark20"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport View from '../view';\nimport Text from '../text';\nimport Image from '../image';\nimport TouchableOpacity from '../touchableOpacity';\nimport {PureBaseComponent} from '../../commons';\nimport Colors from '../../style/colors';\nimport BorderRadiuses from '../../style/borderRadiuses';\nimport Spacings from '../../style/spacings';\nimport {States, StatesConfig} from './WizardStates';\n\n/**\n * @description: WizardStep Component: a wizard presents a series of steps in  prescribed order\n * that the user needs to complete in order to accomplish a goal (e.g. purchase a product).\n *\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/WizardScreen.js\n * @notes: Use Wizard with nested Wizard.Step(s) to achieve the desired result.\n */\nexport default class WizardStep extends PureBaseComponent {\n  static displayName = 'Wizard.Step';\n\n  static propTypes = {\n    /**\n     * The state of the step (Wizard.States.X)\n     */\n    state: PropTypes.oneOf(Object.values(States)),\n    /**\n     * The label of the item\n     */\n    label: PropTypes.string,\n    /**\n     * Additional styles for the label\n     */\n    labelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Additional styles for the connector\n     */\n    connectorStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Color of the step index (or of the icon, when provided)\n     */\n    color: PropTypes.string,\n    /**\n     * Color of the circle\n     */\n    circleColor: PropTypes.string,\n    /**\n     * The step's circle size (diameter)\n     */\n    circleSize: PropTypes.number,\n    /**\n     * Circle's background color\n     */\n    circleBackgroundColor: PropTypes.string,\n    /**\n     * Icon to replace the (default) index\n     */\n    icon: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    /**\n     * Additional styles for the index's label (when icon is not provided)\n     */\n    indexLabelStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /**\n     * Whether the step should be enabled\n     */\n    enabled: PropTypes.bool,\n    /**\n     * Extra text to be read in accessibility mode\n     */\n    accessibilityInfo: PropTypes.string\n  };\n\n  getProps() {\n    const props = this.getThemeProps();\n    const {state, activeConfig: propsActiveConfig, index, activeIndex} = props;\n    const config = StatesConfig[state];\n    const activeConfig = index === activeIndex ? propsActiveConfig : {};\n    return {...config, ...props, ...activeConfig};\n  }\n\n  getAccessibilityLabel() {\n    const {index, label, state} = this.props;\n    const config = StatesConfig[state];\n    const extraInfo = config?.accessibilityInfo || '';\n    return `Step ${index + 1}, ${label}, ${extraInfo}`;\n  }\n\n  renderCircle(props) {\n    const {\n      testID,\n      index,\n      activeIndex,\n      onPress,\n      indexLabelStyle,\n      circleSize,\n      color,\n      circleColor = color,\n      circleBackgroundColor,\n      icon,\n      enabled\n    } = props;\n    const hitSlopSize = Spacings.s2;\n\n    return (\n      <TouchableOpacity\n        testID={`${testID}.circle`}\n        style={[\n          styles.circle,\n          circleSize && {width: circleSize, height: circleSize},\n          {borderColor: circleColor, backgroundColor: circleBackgroundColor}\n        ]}\n        onPress={enabled ? onPress : undefined}\n        hitSlop={{top: hitSlopSize, bottom: hitSlopSize, left: hitSlopSize, right: hitSlopSize}}\n        disabled={!enabled}\n        accessibilityLabel={this.getAccessibilityLabel()}\n      >\n        {index === activeIndex || _.isUndefined(icon) ? (\n          <Text text80 testID={`${testID}.index`} style={[{color}, indexLabelStyle]}>\n            {index + 1}\n          </Text>\n        ) : (\n          <Image testID={`${testID}.image`} source={icon} tintColor={color}/>\n        )}\n      </TouchableOpacity>\n    );\n  }\n\n  render() {\n    const props = this.getProps();\n    const {testID, label, labelStyle, index, activeIndex, maxWidth, connectorStyle} = props;\n\n    return (\n      <View testID={testID} row center flex={index !== activeIndex}>\n        {index > activeIndex && <View flex style={[styles.connector, connectorStyle]}/>}\n        {this.renderCircle(props)}\n        {index === activeIndex && (\n          <Text\n            text80\n            testID={`${testID}.label`}\n            numberOfLines={1}\n            style={[styles.label, {maxWidth}, labelStyle]}\n            accessible={false}\n          >\n            {label}\n          </Text>\n        )}\n        {index < activeIndex && <View flex style={[styles.connector, connectorStyle]}/>}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  connector: {\n    borderWidth: 0.5,\n    borderColor: Colors.dark60\n  },\n  circle: {\n    width: 24,\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: BorderRadiuses.br100,\n    borderWidth: 1\n  },\n  label: {\n    marginHorizontal: 8,\n    color: Colors.dark20\n  }\n});\n"]},"metadata":{},"sourceType":"module"}