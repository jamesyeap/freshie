{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/lib/components/HighlighterOverlayView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { requireNativeComponent } from \"react-native-web/dist/index\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nvar NativeHighlighterView = requireNativeComponent('HighlighterView', null);\nvar DefaultOverlayColor = 'rgba(0, 0, 0, 0.5)';\n\nvar HighlighterOverlayView = function HighlighterOverlayView(props) {\n  var overlayColor = props.overlayColor,\n      borderRadius = props.borderRadius,\n      strokeColor = props.strokeColor,\n      strokeWidth = props.strokeWidth,\n      visible = props.visible,\n      _onRequestClose = props.onRequestClose,\n      highlightFrame = props.highlightFrame,\n      style = props.style,\n      children = props.children,\n      highlightViewTag = props.highlightViewTag,\n      highlightViewTagParams = props.highlightViewTagParams,\n      minimumRectSize = props.minimumRectSize,\n      innerPadding = props.innerPadding;\n  var overlayColorToUse = overlayColor || DefaultOverlayColor;\n  var strokeColorToUse = strokeColor;\n\n  if (Platform.OS === 'android') {\n    overlayColorToUse = processColor(overlayColorToUse);\n    strokeColorToUse = processColor(strokeColorToUse);\n  }\n\n  return React.createElement(Modal, {\n    visible: !!visible,\n    animationType: 'fade',\n    transparent: true,\n    onRequestClose: function onRequestClose() {\n      return _onRequestClose && _onRequestClose();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(NativeHighlighterView, {\n    highlightFrame: highlightFrame,\n    style: [style, _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n      backgroundColor: 'transparent'\n    })],\n    overlayColor: overlayColorToUse,\n    borderRadius: borderRadius,\n    strokeColor: strokeColorToUse,\n    strokeWidth: strokeWidth,\n    highlightViewTag: highlightViewTag,\n    highlightViewTagParams: highlightViewTagParams,\n    minimumRectSize: minimumRectSize,\n    innerPadding: innerPadding,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), children);\n};\n\nHighlighterOverlayView.propTypes = {\n  overlayColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  visible: PropTypes.bool.isRequired,\n  onRequestClose: PropTypes.func,\n  highlightFrame: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  highlightViewTag: PropTypes.number,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  highlightViewTagParams: PropTypes.shape({\n    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      top: PropTypes.number,\n      left: PropTypes.number,\n      bottom: PropTypes.number,\n      right: PropTypes.number\n    })]),\n    offset: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    })\n  }),\n  minimumRectSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number\n  }),\n  innerPadding: PropTypes.number\n};\nHighlighterOverlayView.displayName = 'IGNORE';\nexport default HighlighterOverlayView;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/lib/components/HighlighterOverlayView.js"],"names":["React","PropTypes","requireNativeComponent","NativeHighlighterView","DefaultOverlayColor","HighlighterOverlayView","props","overlayColor","borderRadius","strokeColor","strokeWidth","visible","onRequestClose","highlightFrame","style","children","highlightViewTag","highlightViewTagParams","minimumRectSize","innerPadding","overlayColorToUse","strokeColorToUse","Platform","OS","processColor","StyleSheet","absoluteFillObject","backgroundColor","propTypes","string","number","bool","isRequired","func","shape","x","y","width","height","oneOfType","object","array","arrayOf","node","padding","top","left","bottom","right","offset","displayName"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;SACQC,sB;;;;;AAER,IAAMC,qBAAqB,GAAGD,sBAAsB,CAAC,iBAAD,EAAoB,IAApB,CAApD;AACA,IAAME,mBAAmB,GAAG,oBAA5B;;AAEA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAW;AACxC,MACEC,YADF,GAcID,KAdJ,CACEC,YADF;AAAA,MAEEC,YAFF,GAcIF,KAdJ,CAEEE,YAFF;AAAA,MAGEC,WAHF,GAcIH,KAdJ,CAGEG,WAHF;AAAA,MAIEC,WAJF,GAcIJ,KAdJ,CAIEI,WAJF;AAAA,MAKEC,OALF,GAcIL,KAdJ,CAKEK,OALF;AAAA,MAMEC,eANF,GAcIN,KAdJ,CAMEM,cANF;AAAA,MAOEC,cAPF,GAcIP,KAdJ,CAOEO,cAPF;AAAA,MAQEC,KARF,GAcIR,KAdJ,CAQEQ,KARF;AAAA,MASEC,QATF,GAcIT,KAdJ,CASES,QATF;AAAA,MAUEC,gBAVF,GAcIV,KAdJ,CAUEU,gBAVF;AAAA,MAWEC,sBAXF,GAcIX,KAdJ,CAWEW,sBAXF;AAAA,MAYEC,eAZF,GAcIZ,KAdJ,CAYEY,eAZF;AAAA,MAaEC,YAbF,GAcIb,KAdJ,CAaEa,YAbF;AAgBA,MAAIC,iBAAiB,GAAGb,YAAY,IAAIH,mBAAxC;AACA,MAAIiB,gBAAgB,GAAGZ,WAAvB;;AACA,MAAIa,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7BH,IAAAA,iBAAiB,GAAGI,YAAY,CAACJ,iBAAD,CAAhC;AACAC,IAAAA,gBAAgB,GAAGG,YAAY,CAACH,gBAAD,CAA/B;AACD;;AAED,SACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,CAAC,CAAEV,OADd;AAEE,IAAA,aAAa,EAAE,MAFjB;AAGE,IAAA,WAAW,MAHb;AAIE,IAAA,cAAc,EAAE;AAAA,aAAMC,eAAc,IAAIA,eAAc,EAAtC;AAAA,KAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,qBAAD;AACE,IAAA,cAAc,EAAEC,cADlB;AAEE,IAAA,KAAK,EAAE,CAACC,KAAD,kCAAYW,UAAU,CAACC,kBAAvB;AAA2CC,MAAAA,eAAe,EAAE;AAA5D,OAFT;AAGE,IAAA,YAAY,EAAEP,iBAHhB;AAIE,IAAA,YAAY,EAAEZ,YAJhB;AAKE,IAAA,WAAW,EAAEa,gBALf;AAME,IAAA,WAAW,EAAEX,WANf;AAOE,IAAA,gBAAgB,EAAEM,gBAPpB;AAQE,IAAA,sBAAsB,EAAEC,sBAR1B;AASE,IAAA,eAAe,EAAEC,eATnB;AAUE,IAAA,YAAY,EAAEC,YAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAkBGJ,QAlBH,CADF;AAsBD,CA9CD;;AAgDAV,sBAAsB,CAACuB,SAAvB,GAAmC;AACjCrB,EAAAA,YAAY,EAAEN,SAAS,CAAC4B,MADS;AAEjCrB,EAAAA,YAAY,EAAEP,SAAS,CAAC6B,MAFS;AAGjCrB,EAAAA,WAAW,EAAER,SAAS,CAAC4B,MAHU;AAIjCnB,EAAAA,WAAW,EAAET,SAAS,CAAC6B,MAJU;AAKjCnB,EAAAA,OAAO,EAAEV,SAAS,CAAC8B,IAAV,CAAeC,UALS;AAMjCpB,EAAAA,cAAc,EAAEX,SAAS,CAACgC,IANO;AAOjCpB,EAAAA,cAAc,EAAEZ,SAAS,CAACiC,KAAV,CAAgB;AAC9BC,IAAAA,CAAC,EAAElC,SAAS,CAAC6B,MADiB;AAE9BM,IAAAA,CAAC,EAAEnC,SAAS,CAAC6B,MAFiB;AAG9BO,IAAAA,KAAK,EAAEpC,SAAS,CAAC6B,MAHa;AAI9BQ,IAAAA,MAAM,EAAErC,SAAS,CAAC6B;AAJY,GAAhB,CAPiB;AAajChB,EAAAA,KAAK,EAAEb,SAAS,CAACsC,SAAV,CAAoB,CAACtC,SAAS,CAACuC,MAAX,EAAmBvC,SAAS,CAAC6B,MAA7B,EAAqC7B,SAAS,CAACwC,KAA/C,CAApB,CAb0B;AAcjCzB,EAAAA,gBAAgB,EAAEf,SAAS,CAAC6B,MAdK;AAejCf,EAAAA,QAAQ,EAAEd,SAAS,CAACsC,SAAV,CAAoB,CAC5BtC,SAAS,CAACyC,OAAV,CAAkBzC,SAAS,CAAC0C,IAA5B,CAD4B,EAE5B1C,SAAS,CAAC0C,IAFkB,CAApB,CAfuB;AAmBjC1B,EAAAA,sBAAsB,EAAEhB,SAAS,CAACiC,KAAV,CAAgB;AACtCU,IAAAA,OAAO,EAAE3C,SAAS,CAACsC,SAAV,CAAoB,CAC3BtC,SAAS,CAAC6B,MADiB,EAE3B7B,SAAS,CAACiC,KAAV,CAAgB;AACdW,MAAAA,GAAG,EAAE5C,SAAS,CAAC6B,MADD;AAEdgB,MAAAA,IAAI,EAAE7C,SAAS,CAAC6B,MAFF;AAGdiB,MAAAA,MAAM,EAAE9C,SAAS,CAAC6B,MAHJ;AAIdkB,MAAAA,KAAK,EAAE/C,SAAS,CAAC6B;AAJH,KAAhB,CAF2B,CAApB,CAD6B;AAStCmB,IAAAA,MAAM,EAAEhD,SAAS,CAACiC,KAAV,CAAgB;AACtBC,MAAAA,CAAC,EAAElC,SAAS,CAAC6B,MADS;AAEtBM,MAAAA,CAAC,EAAEnC,SAAS,CAAC6B;AAFS,KAAhB;AAT8B,GAAhB,CAnBS;AAiCjCZ,EAAAA,eAAe,EAAEjB,SAAS,CAACiC,KAAV,CAAgB;AAC/BG,IAAAA,KAAK,EAAEpC,SAAS,CAAC6B,MADc;AAE/BQ,IAAAA,MAAM,EAAErC,SAAS,CAAC6B;AAFa,GAAhB,CAjCgB;AAqCjCX,EAAAA,YAAY,EAAElB,SAAS,CAAC6B;AArCS,CAAnC;AAwCAzB,sBAAsB,CAAC6C,WAAvB,GAAqC,QAArC;AAEA,eAAe7C,sBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {requireNativeComponent, processColor, Platform, StyleSheet, Modal} from 'react-native';\n\nconst NativeHighlighterView = requireNativeComponent('HighlighterView', null);\nconst DefaultOverlayColor = 'rgba(0, 0, 0, 0.5)';\n\nconst HighlighterOverlayView = (props) => {\n  const {\n    overlayColor,\n    borderRadius,\n    strokeColor,\n    strokeWidth,\n    visible,\n    onRequestClose,\n    highlightFrame,\n    style,\n    children,\n    highlightViewTag,\n    highlightViewTagParams,\n    minimumRectSize,\n    innerPadding,\n  } = props;\n\n  let overlayColorToUse = overlayColor || DefaultOverlayColor;\n  let strokeColorToUse = strokeColor;\n  if (Platform.OS === 'android') {\n    overlayColorToUse = processColor(overlayColorToUse);\n    strokeColorToUse = processColor(strokeColorToUse);\n  }\n\n  return (\n    <Modal\n      visible={!!(visible)}\n      animationType={'fade'}\n      transparent\n      onRequestClose={() => onRequestClose && onRequestClose()}\n    >\n      <NativeHighlighterView\n        highlightFrame={highlightFrame}\n        style={[style, {...StyleSheet.absoluteFillObject, backgroundColor: 'transparent'}]}\n        overlayColor={overlayColorToUse}\n        borderRadius={borderRadius}\n        strokeColor={strokeColorToUse}\n        strokeWidth={strokeWidth}\n        highlightViewTag={highlightViewTag}\n        highlightViewTagParams={highlightViewTagParams}\n        minimumRectSize={minimumRectSize}\n        innerPadding={innerPadding}\n      />\n      {children}\n    </Modal>\n  );\n};\n\nHighlighterOverlayView.propTypes = {\n  overlayColor: PropTypes.string,\n  borderRadius: PropTypes.number,\n  strokeColor: PropTypes.string,\n  strokeWidth: PropTypes.number,\n  visible: PropTypes.bool.isRequired,\n  onRequestClose: PropTypes.func,\n  highlightFrame: PropTypes.shape({\n    x: PropTypes.number,\n    y: PropTypes.number,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  highlightViewTag: PropTypes.number,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n  highlightViewTagParams: PropTypes.shape({\n    padding: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.shape({\n        top: PropTypes.number,\n        left: PropTypes.number,\n        bottom: PropTypes.number,\n        right: PropTypes.number}),\n    ]),\n    offset: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number,\n    }),\n  }),\n  minimumRectSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n  innerPadding: PropTypes.number,\n};\n\nHighlighterOverlayView.displayName = 'IGNORE';\n\nexport default HighlighterOverlayView;\n"]},"metadata":{},"sourceType":"module"}