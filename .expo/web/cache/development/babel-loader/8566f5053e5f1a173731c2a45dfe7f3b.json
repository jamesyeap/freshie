{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/slider/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Constants } from \"../../helpers\";\nimport { PureBaseComponent } from \"../../commons\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nvar TRACK_SIZE = 6;\nvar THUMB_SIZE = 24;\nvar BORDER_WIDTH = 6;\nvar SHADOW_RADIUS = 4;\nvar DEFAULT_COLOR = Colors.dark50;\nvar ACTIVE_COLOR = Colors.violet30;\nvar INACTIVE_COLOR = Colors.dark60;\n\nvar Slider = function (_PureBaseComponent) {\n  _inherits(Slider, _PureBaseComponent);\n\n  var _super = _createSuper(Slider);\n\n  function Slider(props) {\n    var _this;\n\n    _classCallCheck(this, Slider);\n\n    _this = _super.call(this, props);\n\n    _this.handleMoveShouldSetPanResponder = function () {\n      return true;\n    };\n\n    _this.handlePanResponderGrant = function () {\n      _this.updateThumbStyle(true);\n\n      _this._dx = 0;\n\n      _this.onSeekStart();\n    };\n\n    _this.handlePanResponderMove = function (_e, gestureState) {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      var dx = gestureState.dx * (Constants.isRTL ? -1 : 1);\n\n      _this.update(dx - _this._dx);\n\n      _this._dx = dx;\n    };\n\n    _this.handlePanResponderEnd = function () {\n      _this.updateThumbStyle(false);\n\n      _this.bounceToStep();\n\n      _this.onSeekEnd();\n    };\n\n    _this.scaleThumb = function (start) {\n      var scaleFactor = start ? _this.calculatedThumbActiveScale() : 1;\n\n      _this.thumbAnimationAction(scaleFactor);\n    };\n\n    _this.thumbAnimationAction = function (toValue) {\n      var thumbActiveAnimation = _this.state.thumbActiveAnimation;\n      var duration = _this._thumbAnimationConstants.duration;\n      Animated.timing(thumbActiveAnimation, {\n        toValue: toValue,\n        duration: duration,\n        useNativeDriver: true\n      }).start();\n    };\n\n    _this.setMinTrackRef = function (r) {\n      _this.minTrack = r;\n    };\n\n    _this.setThumbRef = function (r) {\n      _this.thumb = r;\n    };\n\n    _this.shouldDoubleSizeByDefault = function () {\n      var _this$props = _this.props,\n          activeThumbStyle = _this$props.activeThumbStyle,\n          thumbStyle = _this$props.thumbStyle;\n      return !activeThumbStyle || !thumbStyle;\n    };\n\n    _this.calculatedThumbActiveScale = function () {\n      var _this$props2 = _this.props,\n          activeThumbStyle = _this$props2.activeThumbStyle,\n          thumbStyle = _this$props2.thumbStyle,\n          disabled = _this$props2.disabled,\n          disableActiveStyling = _this$props2.disableActiveStyling;\n\n      if (disabled || disableActiveStyling) {\n        return 1;\n      }\n\n      var defaultScaleFactor = _this._thumbAnimationConstants.defaultScaleFactor;\n\n      if (_this.shouldDoubleSizeByDefault()) {\n        return defaultScaleFactor;\n      }\n\n      var scaleRatioFromSize = activeThumbStyle.height / thumbStyle.height;\n      return scaleRatioFromSize || defaultScaleFactor;\n    };\n\n    _this.updateTrackStepAndStyle = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      _this._x = nativeEvent.locationX;\n\n      _this.updateValue(_this._x);\n\n      if (_this.props.step > 0) {\n        _this.bounceToStep();\n      } else {\n        _this.updateStyles(_this._x);\n      }\n    };\n\n    _this.onOrientationChanged = function () {\n      _this.initialValue = _this.lastValue;\n\n      _this.setState({\n        measureCompleted: false\n      });\n    };\n\n    _this.onValueChange = function (value) {\n      _this.lastValue = value;\n\n      _.invoke(_this.props, 'onValueChange', value);\n    };\n\n    _this.onContainerLayout = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n\n      _this.handleMeasure('containerSize', nativeEvent);\n    };\n\n    _this.onTrackLayout = function (_ref3) {\n      var nativeEvent = _ref3.nativeEvent;\n\n      _this.setState({\n        measureCompleted: false\n      });\n\n      _this.handleMeasure('trackSize', nativeEvent);\n    };\n\n    _this.onThumbLayout = function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n\n      _this.handleMeasure('thumbSize', nativeEvent);\n    };\n\n    _this.handleTrackPress = function (_ref5) {\n      var nativeEvent = _ref5.nativeEvent;\n\n      if (_this.props.disabled) {\n        return;\n      }\n\n      _this.updateTrackStepAndStyle({\n        nativeEvent: nativeEvent\n      });\n\n      _this.onSeekEnd();\n    };\n\n    _this.handleMeasure = function (name, nativeEvent) {\n      var _nativeEvent$layout = nativeEvent.layout,\n          width = _nativeEvent$layout.width,\n          height = _nativeEvent$layout.height;\n      var size = {\n        width: width,\n        height: height\n      };\n      var layoutName = \"\" + name;\n      var currentSize = _this[layoutName];\n\n      if (currentSize && width === currentSize.width && height === currentSize.height) {\n        return;\n      }\n\n      _this[layoutName] = size;\n\n      if (_this.containerSize && _this.thumbSize && _this.trackSize) {\n        _this.setState({\n          containerSize: _this.containerSize,\n          trackSize: _this.trackSize,\n          thumbSize: _this.thumbSize\n        }, function () {\n          _this.setState({\n            measureCompleted: true\n          });\n        });\n      }\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      var _this$props3 = _this.props,\n          maximumValue = _this$props3.maximumValue,\n          minimumValue = _this$props3.minimumValue,\n          step = _this$props3.step;\n\n      var value = _this.getValueForX(_this._x);\n\n      var newValue;\n\n      switch (event.nativeEvent.actionName) {\n        case 'increment':\n          newValue = value !== maximumValue ? value + step : value;\n          break;\n\n        case 'decrement':\n          newValue = value !== minimumValue ? value - step : value;\n          break;\n\n        default:\n          break;\n      }\n\n      _this._x = _this.getXForValue(newValue);\n\n      _this.updateValue(_this._x);\n\n      _this.updateStyles(_this._x);\n\n      _.invoke(AccessibilityInfo, 'announceForAccessibility', \"New value \" + newValue);\n    };\n\n    _this.thumbHitSlop = {\n      top: 10,\n      bottom: 10,\n      left: 24,\n      right: 24\n    };\n\n    _this.renderThumb = function () {\n      var _this$getThemeProps = _this.getThemeProps(),\n          thumbStyle = _this$getThemeProps.thumbStyle,\n          disabled = _this$getThemeProps.disabled,\n          thumbTintColor = _this$getThemeProps.thumbTintColor;\n\n      return React.createElement(Animated.View, _extends({\n        hitSlop: _this.thumbHitSlop,\n        ref: _this.setThumbRef,\n        onLayout: _this.onThumbLayout\n      }, _this._panResponder.panHandlers, {\n        style: [styles.thumb, thumbStyle, {\n          backgroundColor: disabled ? DEFAULT_COLOR : thumbTintColor || ACTIVE_COLOR\n        }, {\n          transform: [{\n            scale: _this.state.thumbActiveAnimation\n          }]\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    _this.state = {\n      containerSize: {\n        width: 0,\n        height: 0\n      },\n      trackSize: {\n        width: 0,\n        height: 0\n      },\n      thumbSize: {\n        width: 0,\n        height: 0\n      },\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n    _this.thumb = undefined;\n    _this._thumbStyles = {\n      style: {}\n    };\n    _this.minTrack = undefined;\n    _this._minTrackStyles = {\n      style: {}\n    };\n    _this._x = 0;\n    _this._dx = 0;\n    _this._thumbAnimationConstants = {\n      duration: 100,\n      defaultScaleFactor: 1.5\n    };\n    _this.initialValue = _this.getRoundedValue(props.value);\n    _this.lastValue = _this.initialValue;\n    _this.initialThumbSize = THUMB_SIZE;\n\n    _this.checkProps(props);\n\n    _this.createPanResponderConfig();\n\n    return _this;\n  }\n\n  _createClass(Slider, [{\n    key: \"checkProps\",\n    value: function checkProps(props) {\n      if (props.minimumValue >= props.maximumValue) {\n        console.warn('Slider minimumValue must be lower than maximumValue');\n      }\n\n      if (props.value < props.minimumValue || props.value > props.maximumValue) {\n        console.warn('Slider value is not in range');\n      }\n    }\n  }, {\n    key: \"createPanResponderConfig\",\n    value: function createPanResponderConfig() {\n      this._panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n        onPanResponderGrant: this.handlePanResponderGrant,\n        onPanResponderMove: this.handlePanResponderMove,\n        onPanResponderRelease: this.handlePanResponderEnd,\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          return true;\n        },\n        onPanResponderEnd: function onPanResponderEnd() {\n          return true;\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest() {\n          return false;\n        }\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (prevProps.value !== this.props.value) {\n        this.initialValue = this.getRoundedValue(this.props.value);\n        this._x = this.getXForValue(this.initialValue);\n        this.updateStyles(this._x);\n      }\n\n      if (prevState.measureCompleted !== this.state.measureCompleted) {\n        this.initialThumbSize = this.state.thumbSize;\n        this._x = this.getXForValue(this.initialValue);\n        this.updateStyles(this._x);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Constants.addDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Constants.removeDimensionsEventListener(this.onOrientationChanged);\n    }\n  }, {\n    key: \"update\",\n    value: function update(dx) {\n      var x = this._x;\n      x += dx;\n      x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n      this._x = x;\n      this.updateStyles(this._x);\n      this.updateValue(this._x);\n    }\n  }, {\n    key: \"bounceToStep\",\n    value: function bounceToStep() {\n      if (this.props.step > 0) {\n        var v = this.getValueForX(this._x);\n        var round = this.getRoundedValue(v);\n        var x = this.getXForValue(round);\n        this._x = x;\n        this.updateStyles(x);\n      }\n    }\n  }, {\n    key: \"updateStyles\",\n    value: function updateStyles(x) {\n      if (this.thumb) {\n        var trackSize = this.state.trackSize;\n        var position = x - this.initialThumbSize.width / 2;\n        var deviation = 3;\n\n        if (position + deviation < 0) {\n          this._thumbStyles.left = 0;\n        } else if (position - deviation > trackSize.width - this.initialThumbSize.width) {\n          this._thumbStyles.left = trackSize.width - this.initialThumbSize.width;\n        } else {\n          this._thumbStyles.left = position;\n        }\n\n        this.thumb.setNativeProps(this._thumbStyles);\n      }\n\n      if (this.minTrack) {\n        this._minTrackStyles.width = Math.min(this.state.trackSize.width, x);\n        this.minTrack.setNativeProps(this._minTrackStyles);\n      }\n    }\n  }, {\n    key: \"updateValue\",\n    value: function updateValue(x) {\n      var value = this.getValueForX(x);\n      this.onValueChange(value);\n    }\n  }, {\n    key: \"updateThumbStyle\",\n    value: function updateThumbStyle(start) {\n      if (this.thumb && !this.props.disableActiveStyling) {\n        var _this$props4 = this.props,\n            thumbStyle = _this$props4.thumbStyle,\n            activeThumbStyle = _this$props4.activeThumbStyle;\n        var style = thumbStyle || styles.thumb;\n        var activeStyle = activeThumbStyle || styles.activeThumb;\n        var activeOrInactiveStyle = !this.props.disabled && (start ? activeStyle : style);\n        this._thumbStyles.style = _.omit(activeOrInactiveStyle, 'height', 'width');\n        this.thumb.setNativeProps(this._thumbStyles);\n        this.scaleThumb(start);\n      }\n    }\n  }, {\n    key: \"getRoundedValue\",\n    value: function getRoundedValue(value) {\n      var step = this.props.step;\n      var v = this.getValueInRange(value);\n      return step > 0 ? Math.round(v / step) * step : v;\n    }\n  }, {\n    key: \"getValueInRange\",\n    value: function getValueInRange(value) {\n      var _this$props5 = this.props,\n          minimumValue = _this$props5.minimumValue,\n          maximumValue = _this$props5.maximumValue;\n      var v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n      return v;\n    }\n  }, {\n    key: \"getXForValue\",\n    value: function getXForValue(v) {\n      var minimumValue = this.props.minimumValue;\n      var range = this.getRange();\n      var relativeValue = minimumValue - v;\n      var value = minimumValue < 0 ? Math.abs(relativeValue) : v - minimumValue;\n      var ratio = value / range;\n      var x = ratio * this.state.trackSize.width;\n      return x;\n    }\n  }, {\n    key: \"getValueForX\",\n    value: function getValueForX(x) {\n      var _this$props6 = this.props,\n          maximumValue = _this$props6.maximumValue,\n          minimumValue = _this$props6.minimumValue,\n          step = _this$props6.step;\n      var ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n      var range = this.getRange();\n\n      if (step) {\n        return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round(ratio * range / step) * step));\n      } else {\n        return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n      }\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var _this$props7 = this.props,\n          minimumValue = _this$props7.minimumValue,\n          maximumValue = _this$props7.maximumValue;\n      var range = maximumValue - minimumValue;\n      return range;\n    }\n  }, {\n    key: \"onSeekStart\",\n    value: function onSeekStart() {\n      _.invoke(this.props, 'onSeekStart');\n    }\n  }, {\n    key: \"onSeekEnd\",\n    value: function onSeekEnd() {\n      _.invoke(this.props, 'onSeekEnd');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$getThemeProps2 = this.getThemeProps(),\n          containerStyle = _this$getThemeProps2.containerStyle,\n          trackStyle = _this$getThemeProps2.trackStyle,\n          renderTrack = _this$getThemeProps2.renderTrack,\n          disabled = _this$getThemeProps2.disabled,\n          _this$getThemeProps2$ = _this$getThemeProps2.minimumTrackTintColor,\n          minimumTrackTintColor = _this$getThemeProps2$ === void 0 ? ACTIVE_COLOR : _this$getThemeProps2$,\n          _this$getThemeProps2$2 = _this$getThemeProps2.maximumTrackTintColor,\n          maximumTrackTintColor = _this$getThemeProps2$2 === void 0 ? DEFAULT_COLOR : _this$getThemeProps2$2,\n          testID = _this$getThemeProps2.testID;\n\n      return React.createElement(View, _extends({\n        style: [styles.container, containerStyle],\n        onLayout: this.onContainerLayout,\n        accessible: true,\n        accessibilityLabel: 'Slider'\n      }, this.extractAccessibilityProps(), {\n        accessibilityRole: 'adjustable',\n        accessibilityStates: disabled ? ['disabled'] : [],\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction,\n        testID: testID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 7\n        }\n      }), _.isFunction(renderTrack) ? React.createElement(View, {\n        style: [styles.track, {\n          backgroundColor: maximumTrackTintColor\n        }, trackStyle],\n        onLayout: this.onTrackLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }\n      }, renderTrack()) : React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: [styles.track, trackStyle, {\n          backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n        }],\n        onLayout: this.onTrackLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        ref: this.setMinTrackRef,\n        style: [styles.track, trackStyle, styles.minimumTrack, {\n          backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.touchArea,\n        onTouchEnd: this.handleTrackPress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 9\n        }\n      }), this.renderThumb());\n    }\n  }]);\n\n  return Slider;\n}(PureBaseComponent);\n\nSlider.displayName = 'Slider';\nSlider.propTypes = {\n  value: PropTypes.number,\n  minimumValue: PropTypes.number,\n  maximumValue: PropTypes.number,\n  step: PropTypes.number,\n  minimumTrackTintColor: PropTypes.string,\n  maximumTrackTintColor: PropTypes.string,\n  renderTrack: PropTypes.elementType,\n  thumbTintColor: PropTypes.string,\n  onValueChange: PropTypes.func,\n  onSeekStart: PropTypes.func,\n  onSeekEnd: PropTypes.func,\n  containerStyle: ViewPropTypes.style,\n  trackStyle: ViewPropTypes.style,\n  thumbStyle: ViewPropTypes.style,\n  activeThumbStyle: ViewPropTypes.style,\n  disableActiveStyling: PropTypes.bool,\n  disabled: PropTypes.bool,\n  testID: PropTypes.string\n};\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0\n};\nexport { Slider as default };\nvar styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n    borderWidth: BORDER_WIDTH,\n    borderColor: Colors.white,\n    shadowColor: Colors.rgba(Colors.black, 0.3),\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.9,\n    shadowRadius: SHADOW_RADIUS,\n    elevation: 2\n  },\n  activeThumb: {\n    width: THUMB_SIZE + 16,\n    height: THUMB_SIZE + 16,\n    borderRadius: (THUMB_SIZE + 16) / 2,\n    borderWidth: BORDER_WIDTH\n  },\n  touchArea: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'transparent'\n  })\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/slider/index.js"],"names":["_","PropTypes","React","ViewPropTypes","Constants","PureBaseComponent","Colors","View","TRACK_SIZE","THUMB_SIZE","BORDER_WIDTH","SHADOW_RADIUS","DEFAULT_COLOR","dark50","ACTIVE_COLOR","violet30","INACTIVE_COLOR","dark60","Slider","props","handleMoveShouldSetPanResponder","handlePanResponderGrant","updateThumbStyle","_dx","onSeekStart","handlePanResponderMove","_e","gestureState","disabled","dx","isRTL","update","handlePanResponderEnd","bounceToStep","onSeekEnd","scaleThumb","start","scaleFactor","calculatedThumbActiveScale","thumbAnimationAction","toValue","thumbActiveAnimation","state","duration","_thumbAnimationConstants","Animated","timing","useNativeDriver","setMinTrackRef","r","minTrack","setThumbRef","thumb","shouldDoubleSizeByDefault","activeThumbStyle","thumbStyle","disableActiveStyling","defaultScaleFactor","scaleRatioFromSize","height","updateTrackStepAndStyle","nativeEvent","_x","locationX","updateValue","step","updateStyles","onOrientationChanged","initialValue","lastValue","setState","measureCompleted","onValueChange","value","invoke","onContainerLayout","handleMeasure","onTrackLayout","onThumbLayout","handleTrackPress","name","layout","width","size","layoutName","currentSize","containerSize","thumbSize","trackSize","onAccessibilityAction","event","maximumValue","minimumValue","getValueForX","newValue","actionName","getXForValue","AccessibilityInfo","thumbHitSlop","top","bottom","left","right","renderThumb","getThemeProps","thumbTintColor","_panResponder","panHandlers","styles","backgroundColor","transform","scale","Value","undefined","_thumbStyles","style","_minTrackStyles","getRoundedValue","initialThumbSize","checkProps","createPanResponderConfig","console","warn","PanResponder","create","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onStartShouldSetPanResponder","onPanResponderEnd","onPanResponderTerminationRequest","prevProps","prevState","addDimensionsEventListener","removeDimensionsEventListener","x","Math","max","min","v","round","position","deviation","setNativeProps","activeStyle","activeThumb","activeOrInactiveStyle","omit","getValueInRange","range","getRange","relativeValue","abs","ratio","containerStyle","trackStyle","renderTrack","minimumTrackTintColor","maximumTrackTintColor","testID","container","extractAccessibilityProps","label","isFunction","track","minimumTrack","touchArea","displayName","propTypes","number","string","elementType","func","bool","defaultProps","StyleSheet","justifyContent","borderRadius","overflow","borderWidth","borderColor","white","shadowColor","rgba","black","shadowOffset","shadowOpacity","shadowRadius","elevation","absoluteFillObject"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  StyleSheet,\n  PanResponder,\n  ViewPropTypes,\n  AccessibilityInfo,\n  Animated\n} from 'react-native';\nimport {Constants} from '../../helpers';\nimport {PureBaseComponent} from '../../commons';\nimport {Colors} from '../../style';\nimport View from '../view';\n\nconst TRACK_SIZE = 6;\nconst THUMB_SIZE = 24;\nconst BORDER_WIDTH = 6;\nconst SHADOW_RADIUS = 4;\nconst DEFAULT_COLOR = Colors.dark50;\nconst ACTIVE_COLOR = Colors.violet30;\nconst INACTIVE_COLOR = Colors.dark60;\n\n/**\n * @description: A Slider component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/SliderScreen.js\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Slider/Slider.gif?raw=true\n */\nexport default class Slider extends PureBaseComponent {\n  static displayName = 'Slider';\n\n  static propTypes = {\n    /**\n     * Initial value\n     */\n    value: PropTypes.number,\n    /**\n     * Minimum value\n     */\n    minimumValue: PropTypes.number,\n    /**\n     * Maximum value\n     */\n    maximumValue: PropTypes.number,\n    /**\n     * Step value of the slider. The value should be between 0 and (maximumValue - minimumValue)\n     */\n    step: PropTypes.number,\n    /**\n     * The color used for the track from minimum value to current value\n     */\n    minimumTrackTintColor: PropTypes.string,\n    /**\n     * The track color\n     */\n    maximumTrackTintColor: PropTypes.string,\n    /**\n     * Custom render instead of rendering the track\n     */\n    renderTrack: PropTypes.elementType,\n    /**\n     * Thumb color\n     */\n    thumbTintColor: PropTypes.string,\n    /**\n     * Callback for onValueChange\n     */\n    onValueChange: PropTypes.func,\n    /**\n     * Callback that notifies about slider seeking is started\n     */\n    onSeekStart: PropTypes.func,\n    /**\n     * Callback that notifies about slider seeking is finished\n     */\n    onSeekEnd: PropTypes.func,\n    /**\n     * The container style\n     */\n    containerStyle: ViewPropTypes.style,\n    /**\n     * The track style\n     */\n    trackStyle: ViewPropTypes.style,\n    /**\n     * The thumb style\n     */\n    thumbStyle: ViewPropTypes.style,\n    /**\n     * The active (during press) thumb style\n     */\n    activeThumbStyle: ViewPropTypes.style,\n    /**\n     * If true the Slider will not change it's style on press\n     */\n    disableActiveStyling: PropTypes.bool,\n    /**\n     * If true the Slider will be disabled and will appear in disabled color\n     */\n    disabled: PropTypes.bool,\n    testID: PropTypes.string\n  };\n\n  static defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      containerSize: {width: 0, height: 0},\n      trackSize: {width: 0, height: 0},\n      thumbSize: {width: 0, height: 0},\n      thumbActiveAnimation: new Animated.Value(1),\n      measureCompleted: false\n    };\n\n    this.thumb = undefined;\n    this._thumbStyles = {style: {}};\n    this.minTrack = undefined;\n    this._minTrackStyles = {style: {}};\n    this._x = 0;\n    this._dx = 0;\n    this._thumbAnimationConstants = {\n      duration: 100,\n      defaultScaleFactor: 1.5\n    };\n\n    this.initialValue = this.getRoundedValue(props.value);\n    this.lastValue = this.initialValue;\n\n    this.initialThumbSize = THUMB_SIZE;\n    this.checkProps(props);\n\n    this.createPanResponderConfig();\n  }\n\n  checkProps(props) {\n    if (props.minimumValue >= props.maximumValue) {\n      console.warn('Slider minimumValue must be lower than maximumValue');\n    }\n    if (props.value < props.minimumValue || props.value > props.maximumValue) {\n      console.warn('Slider value is not in range');\n    }\n  }\n\n  createPanResponderConfig() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder,\n      onPanResponderGrant: this.handlePanResponderGrant,\n      onPanResponderMove: this.handlePanResponderMove,\n      onPanResponderRelease: this.handlePanResponderEnd,\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderEnd: () => true,\n      onPanResponderTerminationRequest: () => false\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.value !== this.props.value) {\n      this.initialValue = this.getRoundedValue(this.props.value);\n      // set position for new value\n      this._x = this.getXForValue(this.initialValue);\n      this.updateStyles(this._x);\n    }\n\n    if (prevState.measureCompleted !== this.state.measureCompleted) {\n      this.initialThumbSize = this.state.thumbSize; // for thumb enlargement\n      // set initial position\n      this._x = this.getXForValue(this.initialValue);\n      this.updateStyles(this._x);\n    }\n  }\n\n  componentDidMount() {\n    Constants.addDimensionsEventListener(this.onOrientationChanged);\n  }\n\n  componentWillUnmount() {\n    Constants.removeDimensionsEventListener(this.onOrientationChanged);\n  }\n\n\n  /* Gesture Recognizer */\n\n  handleMoveShouldSetPanResponder = () => {\n    return true;\n  };\n  handlePanResponderGrant = () => {\n    this.updateThumbStyle(true);\n    this._dx = 0;\n    this.onSeekStart();\n  };\n  handlePanResponderMove = (_e, gestureState) => {\n    if (this.props.disabled) {\n      return;\n    }\n    const dx = gestureState.dx * (Constants.isRTL ? -1 : 1);\n    this.update(dx - this._dx);\n    this._dx = dx;\n  };\n  handlePanResponderEnd = () => {\n    this.updateThumbStyle(false);\n    this.bounceToStep();\n    this.onSeekEnd();\n  };\n\n  /* Actions */\n\n  update(dx) {\n    // calc x in range (instead of: this._x += dx)\n    let x = this._x;\n    x += dx;\n    x = Math.max(Math.min(x, this.state.trackSize.width), 0);\n\n    this._x = x;\n\n    this.updateStyles(this._x);\n    this.updateValue(this._x);\n  }\n\n  bounceToStep() {\n    if (this.props.step > 0) {\n      const v = this.getValueForX(this._x);\n      const round = this.getRoundedValue(v);\n      const x = this.getXForValue(round);\n      this._x = x;\n      this.updateStyles(x);\n    }\n  }\n\n  updateStyles(x) {\n    if (this.thumb) {\n      const {trackSize} = this.state;\n      const position = x - this.initialThumbSize.width / 2;\n      const deviation = 3;\n\n      if (position + deviation < 0) {\n        this._thumbStyles.left = 0;\n      } else if (position - deviation > trackSize.width - this.initialThumbSize.width) {\n        this._thumbStyles.left = trackSize.width - this.initialThumbSize.width;\n      } else {\n        this._thumbStyles.left = position;\n      }\n\n      this.thumb.setNativeProps(this._thumbStyles);\n    }\n\n    if (this.minTrack) {\n      this._minTrackStyles.width = Math.min(this.state.trackSize.width, x);\n      this.minTrack.setNativeProps(this._minTrackStyles);\n    }\n  }\n\n  updateValue(x) {\n    const value = this.getValueForX(x);\n    this.onValueChange(value);\n  }\n\n  updateThumbStyle(start) {\n    if (this.thumb && !this.props.disableActiveStyling) {\n      const {thumbStyle, activeThumbStyle} = this.props;\n      const style = thumbStyle || styles.thumb;\n      const activeStyle = activeThumbStyle || styles.activeThumb;\n\n      const activeOrInactiveStyle = !this.props.disabled && (start ? activeStyle : style);\n      this._thumbStyles.style = _.omit(activeOrInactiveStyle, 'height', 'width');\n      this.thumb.setNativeProps(this._thumbStyles);\n      this.scaleThumb(start);\n    }\n  }\n\n  scaleThumb = start => {\n    const scaleFactor = start ? this.calculatedThumbActiveScale() : 1;\n    this.thumbAnimationAction(scaleFactor);\n  }\n\n  thumbAnimationAction = (toValue) => {\n    const {thumbActiveAnimation} = this.state;\n    const {duration} = this._thumbAnimationConstants;\n    Animated.timing(thumbActiveAnimation, {\n      toValue,\n      duration,\n      useNativeDriver: true\n    }).start();\n  }\n\n  getRoundedValue(value) {\n    const {step} = this.props;\n    const v = this.getValueInRange(value);\n    return step > 0 ? Math.round(v / step) * step : v;\n  }\n\n  getValueInRange(value) {\n    const {minimumValue, maximumValue} = this.props;\n    const v = value < minimumValue ? minimumValue : value > maximumValue ? maximumValue : value;\n    return v;\n  }\n\n  getXForValue(v) {\n    const {minimumValue} = this.props;\n    const range = this.getRange();\n    const relativeValue = minimumValue - v;\n    const value = minimumValue < 0 ? Math.abs(relativeValue) : v - minimumValue; // for negatives\n    const ratio = value / range;\n    const x = ratio * this.state.trackSize.width;\n    return x;\n  }\n\n  getValueForX(x) {\n    const {maximumValue, minimumValue, step} = this.props;\n    const ratio = x / (this.state.trackSize.width - this.initialThumbSize.width / 2);\n    const range = this.getRange();\n\n    if (step) {\n      return Math.max(minimumValue, Math.min(maximumValue, minimumValue + Math.round((ratio * range) / step) * step));\n    } else {\n      return Math.max(minimumValue, Math.min(maximumValue, ratio * range + minimumValue));\n    }\n  }\n\n  getRange() {\n    const {minimumValue, maximumValue} = this.props;\n    const range = maximumValue - minimumValue;\n    return range;\n  }\n\n  setMinTrackRef = r => {\n    this.minTrack = r;\n  };\n\n  setThumbRef = r => {\n    this.thumb = r;\n  };\n\n  shouldDoubleSizeByDefault = () => {\n    const {activeThumbStyle, thumbStyle} = this.props;\n    return !activeThumbStyle || !thumbStyle;\n  }\n\n  calculatedThumbActiveScale = () => {\n    const {activeThumbStyle, thumbStyle, disabled, disableActiveStyling} = this.props;\n    if (disabled || disableActiveStyling) {\n      return 1;\n    }\n    \n    const {defaultScaleFactor} = this._thumbAnimationConstants;\n    if (this.shouldDoubleSizeByDefault()) { \n      return defaultScaleFactor;\n    }\n      \n    const scaleRatioFromSize = activeThumbStyle.height / thumbStyle.height;\n    return scaleRatioFromSize || defaultScaleFactor;\n  };\n\n  updateTrackStepAndStyle = ({nativeEvent}) => {\n    this._x = nativeEvent.locationX;\n    this.updateValue(this._x);\n\n    if (this.props.step > 0) {\n      this.bounceToStep();\n    } else {\n      this.updateStyles(this._x);\n    }\n  }\n\n  onOrientationChanged = () => {\n    this.initialValue = this.lastValue;\n    this.setState({measureCompleted: false});\n  };\n\n  /* Events */\n\n  onValueChange = value => {\n    this.lastValue = value;\n    _.invoke(this.props, 'onValueChange', value);\n  };\n\n  onSeekStart() {\n    _.invoke(this.props, 'onSeekStart');\n  }\n\n  onSeekEnd() {\n    _.invoke(this.props, 'onSeekEnd');\n  }\n\n  onContainerLayout = ({nativeEvent}) => {\n    this.handleMeasure('containerSize', nativeEvent);\n  };\n\n  onTrackLayout = ({nativeEvent}) => {\n    this.setState({measureCompleted: false});\n    this.handleMeasure('trackSize', nativeEvent);\n  };\n\n  onThumbLayout = ({nativeEvent}) => {\n    this.handleMeasure('thumbSize', nativeEvent);\n  };\n\n  handleTrackPress = ({nativeEvent}) => {\n    if (this.props.disabled) {\n      return;\n    }\n    \n    this.updateTrackStepAndStyle({nativeEvent});\n    this.onSeekEnd();\n  };\n\n  handleMeasure = (name, nativeEvent) => {\n    const {width, height} = nativeEvent.layout;\n    const size = {width, height};\n    const layoutName = `${name}`;\n    const currentSize = this[layoutName];\n\n    if (currentSize && width === currentSize.width && height === currentSize.height) {\n      return;\n    }\n    this[layoutName] = size;\n    if (this.containerSize && this.thumbSize && this.trackSize) {\n      // console.warn('post return');\n      this.setState({\n        containerSize: this.containerSize,\n        trackSize: this.trackSize,\n        thumbSize: this.thumbSize\n      }, () => {\n        this.setState({measureCompleted: true});\n      });\n    }\n  };\n\n  onAccessibilityAction = event => {\n    const {maximumValue, minimumValue, step} = this.props;\n    const value = this.getValueForX(this._x);\n    let newValue;\n\n    // switch (event.nativeEvent.action) {\n    switch (event.nativeEvent.actionName) {\n      case 'increment':\n        newValue = value !== maximumValue ? value + step : value;\n        break;\n      case 'decrement':\n        newValue = value !== minimumValue ? value - step : value;\n        break;\n      default:\n        break;\n    }\n\n    this._x = this.getXForValue(newValue);\n    this.updateValue(this._x);\n    this.updateStyles(this._x);\n    _.invoke(AccessibilityInfo, 'announceForAccessibility', `New value ${newValue}`);\n  };\n\n  thumbHitSlop = {top: 10, bottom: 10, left: 24, right: 24};\n\n  /* Renders */\n\n  renderThumb = () => {\n    const {\n      thumbStyle,\n      disabled,\n      thumbTintColor\n    } = this.getThemeProps();\n    return (\n      <Animated.View\n        hitSlop={this.thumbHitSlop}\n        ref={this.setThumbRef}\n        onLayout={this.onThumbLayout}\n        {...this._panResponder.panHandlers}\n        style={[\n          styles.thumb,\n          thumbStyle,\n          {\n            backgroundColor: disabled\n              ? DEFAULT_COLOR\n              : thumbTintColor || ACTIVE_COLOR\n          },\n          {\n            transform: [\n              {\n                scale: this.state.thumbActiveAnimation\n              }\n            ]\n          }\n        ]}\n      />\n    );\n  }\n\n  render() {\n    const {\n      containerStyle,\n      trackStyle,\n      renderTrack,\n      disabled,\n      minimumTrackTintColor = ACTIVE_COLOR,\n      maximumTrackTintColor = DEFAULT_COLOR,\n      testID\n    } = this.getThemeProps();\n\n    return (\n      <View\n        style={[styles.container, containerStyle]}\n        onLayout={this.onContainerLayout}\n        accessible\n        accessibilityLabel={'Slider'}\n        {...this.extractAccessibilityProps()}\n        accessibilityRole={'adjustable'}\n        accessibilityStates={disabled ? ['disabled'] : []}\n        // accessibilityActions={['increment', 'decrement']}\n        accessibilityActions={[{name: 'increment', label: 'increment'}, {name: 'decrement', label: 'decrement'}]}\n        onAccessibilityAction={this.onAccessibilityAction}\n        testID={testID}\n      >\n        {_.isFunction(renderTrack) ? (\n          <View\n            style={[styles.track, {backgroundColor: maximumTrackTintColor}, trackStyle]}\n            onLayout={this.onTrackLayout}\n          >\n            {renderTrack()}\n          </View>\n        ) : (\n          <View>\n            <View\n              style={[\n                styles.track,\n                trackStyle,\n                {\n                  backgroundColor: disabled ? INACTIVE_COLOR : maximumTrackTintColor\n                }\n              ]}\n              onLayout={this.onTrackLayout}\n            />\n            <View\n              ref={this.setMinTrackRef}\n              style={[\n                styles.track,\n                trackStyle,\n                styles.minimumTrack,\n                {\n                  backgroundColor: disabled ? DEFAULT_COLOR : minimumTrackTintColor\n                }\n              ]}\n            />\n          </View>\n        )}\n        \n        <View style={styles.touchArea} onTouchEnd={this.handleTrackPress}/>\n        {this.renderThumb()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: THUMB_SIZE + SHADOW_RADIUS,\n    justifyContent: 'center'\n  },\n  track: {\n    height: TRACK_SIZE,\n    borderRadius: TRACK_SIZE / 2,\n    overflow: 'hidden'\n  },\n  minimumTrack: {\n    position: 'absolute'\n  },\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n    borderWidth: BORDER_WIDTH,\n    borderColor: Colors.white,\n    shadowColor: Colors.rgba(Colors.black, 0.3),\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.9,\n    shadowRadius: SHADOW_RADIUS,\n    elevation: 2\n  },\n  activeThumb: {\n    width: THUMB_SIZE + 16,\n    height: THUMB_SIZE + 16,\n    borderRadius: (THUMB_SIZE + 16) / 2,\n    borderWidth: BORDER_WIDTH\n  },\n  touchArea: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'transparent'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}