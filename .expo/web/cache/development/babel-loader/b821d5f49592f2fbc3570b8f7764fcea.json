{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _excluded = [\"label\", \"state\", \"onPress\"],\n    _excluded2 = [\"label\", \"state\", \"onPress\", \"margin\"],\n    _excluded3 = [\"label\"],\n    _excluded4 = [\"mainText\", \"subText\", \"onPress\"];\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/jamesyeap1/freshie/_components/_atoms/Button.js\",\n    _templateObject3,\n    _templateObject4,\n    _templateObject5,\n    _templateObject6,\n    _templateObject7,\n    _templateObject8,\n    _templateObject9,\n    _templateObject10;\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Checkbox as PaperCheckbox } from 'react-native-paper';\nimport { SemiBoldText } from \"./Text\";\nvar BigButtonContainer = styled.TouchableOpacity(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n\\tflexDirection: column;\\n\\tjustifyContent: center;\\n\\talignItems: center;\\n\\tbackgroundColor: \", \";\\n\\theight: 48px;\\n\\twidth: 300px;\\n\\tborderRadius: 6px;\\n\\tmargin: \", \";\\n\"])), function (props) {\n  return props.state === \"default\" ? \"#319795\" : props.state === \"active\" ? \"#285E61\" : props.state === \"disabled\" ? \"#319795\" : \"#319795\";\n}, function (props) {\n  return props.margin ? props.margin : 0;\n});\nexport var BigButtonText = styled(SemiBoldText)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n\\tfontSize: 18;\\n\\tlineHeight: 28;\\n\\tcolor: #FFFFFF;\\n\"])));\nexport var BigButton = function BigButton(_ref) {\n  var label = _ref.label,\n      state = _ref.state,\n      onPress = _ref.onPress,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return React.createElement(BigButtonContainer, {\n    state: state,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }\n  }, React.createElement(BigButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, label));\n};\nvar TextButtonContainer = styled.TouchableOpacity(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n\\tflexDirection: column;\\n\\tjustifyContent: center;\\n\\talignItems: center;\\n\\tmargin: \", \";\\n\"])), function (props) {\n  return props.margin ? props.margin : 0;\n});\nexport var TextButtonText = styled(SemiBoldText)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n\\tfontSize: 14;\\n\\tlineHeight: 20;\\n\\tcolor: #000000;\\n\"])));\nexport var TextButton = function TextButton(_ref2) {\n  var label = _ref2.label,\n      state = _ref2.state,\n      onPress = _ref2.onPress,\n      margin = _ref2.margin,\n      props = _objectWithoutProperties(_ref2, _excluded2);\n\n  return React.createElement(TextButtonContainer, _extends({\n    state: state,\n    onPress: onPress\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }), React.createElement(TextButtonText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }\n  }, label));\n};\nvar CheckboxContainer = styled.View(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n\\tflexDirection: row;\\n\\tjustifyContent: center;\\n\\talignItems: center;\\n\"])));\nexport var CheckboxText = styled(SemiBoldText)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n\\tfontSize: 14;\\n\\tlineHeight: 20;\\n\\tcolor: #000000;\\n\\tmarginRight: 9px;\\n\"])));\nexport var Checkbox = function Checkbox(_ref3) {\n  var label = _ref3.label,\n      props = _objectWithoutProperties(_ref3, _excluded3);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  return React.createElement(CheckboxContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }\n  }, React.createElement(PaperCheckbox.Android, {\n    status: checked ? \"checked\" : \"unchecked\",\n    onPress: function onPress() {\n      return setChecked(!checked);\n    },\n    testID: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }\n  }), label && React.createElement(CheckboxText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }\n  }, label));\n};\nvar SectionButtonContainer = styled.TouchableOpacity(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n\\tflexDirection: column;\\n\\tjustifyContent: center;\\n\\talignItems: flex-end;\\n\\tbackgroundColor: \", \"\\n\\twidth: 310px;\\n\\theight: 120px;\\n\\tborderRadius: 10px;\\n\\tmargin: \", \";\\n\"])), function (props) {\n  return props.backgroundColor ? props.backgroundColor : \"#583AAB\";\n}, function (props) {\n  return props.margin ? props.margin : 0;\n});\nvar SectionButtonTextContainer = styled.View(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n\\tflexDirection: column;\\n\\tjustifyContent: center;\\n\\talignItems: flex-start;\\n\\talignSelf: flex-start;\\n\"])));\nexport var SectionButtonMainText = styled(SemiBoldText)(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n\\tfontSize: 30;\\n\\tlineHeight: 36;\\n\\tcolor: #FFFFFF;\\n\"])));\nexport var SectionButtonSubText = styled(SemiBoldText)(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n\\tfontSize: 14;\\n\\tlineHeight: 20;\\n\\tcolor: #9277DB;\\n\"])));\nexport var SectionButton = function SectionButton(_ref4) {\n  var mainText = _ref4.mainText,\n      subText = _ref4.subText,\n      onPress = _ref4.onPress,\n      props = _objectWithoutProperties(_ref4, _excluded4);\n\n  return React.createElement(SectionButtonContainer, {\n    backgroundColor: props.backgroundColor,\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 3\n    }\n  }, React.createElement(SectionButtonTextContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, React.createElement(SectionButtonMainText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, mainText), React.createElement(SectionButtonSubText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, subText)));\n};","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/_components/_atoms/Button.js"],"names":["React","useState","styled","Checkbox","PaperCheckbox","SemiBoldText","BigButtonContainer","TouchableOpacity","props","state","margin","BigButtonText","BigButton","label","onPress","TextButtonContainer","TextButtonText","TextButton","CheckboxContainer","View","CheckboxText","checked","setChecked","SectionButtonContainer","backgroundColor","SectionButtonTextContainer","SectionButtonMainText","SectionButtonSubText","SectionButton","mainText","subText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components/native';\nimport { Checkbox as PaperCheckbox } from 'react-native-paper';\nimport { SemiBoldText } from './Text';\n\n/* List of Buttons\n\t- Big Button\n\t- Text Button\n\t- Checkbox\n\t- Section Button\n*/\n\n// BIG BUTTON \nconst BigButtonContainer = styled.TouchableOpacity`\n\tflexDirection: column;\n\tjustifyContent: center;\n\talignItems: center;\n\tbackgroundColor: ${props => props.state === \"default\" \n\t\t\t\t\t? \"#319795\"\n\t\t\t\t\t: props.state === \"active\"\n\t\t\t\t\t\t? \"#285E61\"\n\t\t\t\t\t\t: props.state === \"disabled\"\n\t\t\t\t\t\t\t? \"#319795\" \n\t\t\t\t\t\t\t: \"#319795\" \n\t\t\t};\n\theight: 48px;\n\twidth: 300px;\n\tborderRadius: 6px;\n\tmargin: ${props => props.margin ? props.margin : 0};\n`;\n\nexport const BigButtonText = styled(SemiBoldText)`\n\tfontSize: 18;\n\tlineHeight: 28;\n\tcolor: #FFFFFF;\n`;\n\nexport const BigButton = ({label, state, onPress,...props}) => {\n\treturn (<BigButtonContainer state={state} onPress={onPress}>\n\t\t\t<BigButtonText>{label}</BigButtonText>\n\t\t</BigButtonContainer>);\n}\n\n// TEXT BUTTON \nconst TextButtonContainer = styled.TouchableOpacity`\n\tflexDirection: column;\n\tjustifyContent: center;\n\talignItems: center;\n\tmargin: ${props => props.margin ? props.margin : 0};\n`;\n\nexport const TextButtonText = styled(SemiBoldText)`\n\tfontSize: 14;\n\tlineHeight: 20;\n\tcolor: #000000;\n`;\n\nexport const TextButton = ({label, state, onPress, margin,...props}) => {\n\treturn (<TextButtonContainer state={state} onPress={onPress} {...props}>\n\t\t\t<TextButtonText>{label}</TextButtonText>\n\t\t</TextButtonContainer>);\n}\n\nconst CheckboxContainer = styled.View`\n\tflexDirection: row;\n\tjustifyContent: center;\n\talignItems: center;\n`;\n\nexport const CheckboxText = styled(SemiBoldText)`\n\tfontSize: 14;\n\tlineHeight: 20;\n\tcolor: #000000;\n\tmarginRight: 9px;\n`;\n\n// Checkbox\n\t// note: used \"PaperCheckbox.Android\" instead of \"PaperCheckbox.IOS\" as there is a bug where checkbox is invisible when unchecked\"\nexport const Checkbox = ({label, ...props}) => {\n\tconst [checked, setChecked] = useState(false);\n\n\treturn (\n\t\t<CheckboxContainer>\n\t\t\t<PaperCheckbox.Android status={checked ? \"checked\" : \"unchecked\"} onPress={() => setChecked(!checked)} testID=\"checkbox\" />\n\t\t\t{label && <CheckboxText>{label}</CheckboxText>}\n\t\t</CheckboxContainer>\n\t\t)\n}\n\n// Section Button\nconst SectionButtonContainer = styled.TouchableOpacity`\n\tflexDirection: column;\n\tjustifyContent: center;\n\talignItems: flex-end;\n\tbackgroundColor: ${props => props.backgroundColor ? props.backgroundColor : \"#583AAB\"}\n\twidth: 310px;\n\theight: 120px;\n\tborderRadius: 10px;\n\tmargin: ${props => props.margin ? props.margin : 0};\n`;\n\nconst SectionButtonTextContainer = styled.View`\n\tflexDirection: column;\n\tjustifyContent: center;\n\talignItems: flex-start;\n\talignSelf: flex-start;\n`;\n\nexport const SectionButtonMainText = styled(SemiBoldText)`\n\tfontSize: 30;\n\tlineHeight: 36;\n\tcolor: #FFFFFF;\n`;\n\nexport const SectionButtonSubText = styled(SemiBoldText)`\n\tfontSize: 14;\n\tlineHeight: 20;\n\tcolor: #9277DB;\n`;\n\nexport const SectionButton = ({mainText, subText, onPress, ...props}) => {\n\treturn (\n\t\t<SectionButtonContainer backgroundColor={props.backgroundColor} onPress={onPress}>\n\t\t\t<SectionButtonTextContainer>\n\t\t\t\t<SectionButtonMainText>{mainText}</SectionButtonMainText>\n\t\t\t\t<SectionButtonSubText>{subText}</SectionButtonSubText>\n\t\t\t</SectionButtonTextContainer>\n\t\t</SectionButtonContainer>\n\t\t);\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}