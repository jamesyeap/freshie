{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/TabBar.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _pt from \"prop-types\";\nimport React, { useEffect, useMemo, useRef, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Reanimated from 'react-native-reanimated';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport TabBarItem from \"./TabBarItem\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport { Colors, Spacings, Typography } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { LogService } from \"../../services\";\nimport FadedScrollView from \"./FadedScrollView\";\nimport { useScrollToItem } from \"../../hooks\";\nvar Code = Reanimated.Code,\n    Value = Reanimated.Value,\n    _interpolate = Reanimated.interpolate,\n    interpolateNode = Reanimated.interpolateNode,\n    block = Reanimated.block,\n    set = Reanimated.set;\nvar interpolate = interpolateNode || _interpolate;\nvar DEFAULT_HEIGHT = 48;\nvar DEFAULT_BACKGROUND_COLOR = Colors.white;\n\nvar DEFAULT_LABEL_STYLE = _objectSpread(_objectSpread({}, Typography.text80), {}, {\n  fontWeight: '400',\n  letterSpacing: 0\n});\n\nvar DEFAULT_SELECTED_LABEL_STYLE = _objectSpread(_objectSpread({}, Typography.text80), {}, {\n  fontWeight: '700',\n  letterSpacing: 0\n});\n\nvar TabBar = function TabBar(props) {\n  var propsItems = props.items,\n      spreadItems = props.spreadItems,\n      height = props.height,\n      enableShadow = props.enableShadow,\n      propsShadowStyle = props.shadowStyle,\n      indicatorStyle = props.indicatorStyle,\n      wideIndicator = props.wideIndicator,\n      labelStyle = props.labelStyle,\n      selectedLabelStyle = props.selectedLabelStyle,\n      labelColor = props.labelColor,\n      selectedLabelColor = props.selectedLabelColor,\n      uppercase = props.uppercase,\n      iconColor = props.iconColor,\n      selectedIconColor = props.selectedIconColor,\n      activeBackgroundColor = props.activeBackgroundColor,\n      backgroundColor = props.backgroundColor,\n      propsContainerWidth = props.containerWidth,\n      centerSelected = props.centerSelected,\n      containerStyle = props.containerStyle,\n      scrollViewStyle = props.scrollViewStyle,\n      testID = props.testID,\n      propsChildren = props.children;\n  var indicatorInset = wideIndicator ? 0 : Spacings.s4;\n  var context = useContext(TabBarContext);\n  var itemStates = context.itemStates,\n      contextItems = context.items,\n      currentPage = context.currentPage,\n      targetPage = context.targetPage,\n      registerTabItems = context.registerTabItems,\n      selectedIndex = context.selectedIndex;\n  var children = useRef(_.filter(propsChildren, function (child) {\n    return !!child;\n  }));\n\n  var _registerTabItems = function _registerTabItems() {\n    var ignoredItems = [];\n    var itemsCount;\n\n    if (propsItems) {\n      itemsCount = _.size(propsItems);\n\n      _.forEach(propsItems, function (item, index) {\n        if (item.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n    } else {\n      itemsCount = React.Children.count(children.current);\n      React.Children.toArray(children.current).forEach(function (child, index) {\n        if (child.props.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n    }\n\n    registerTabItems(itemsCount, ignoredItems);\n  };\n\n  useEffect(function () {\n    if (propsChildren) {\n      LogService.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    if ((propsItems || children.current) && !contextItems) {\n      _registerTabItems();\n    }\n  }, []);\n  var containerWidth = useMemo(function () {\n    return propsContainerWidth || Constants.screenWidth;\n  }, [propsContainerWidth]);\n  var items = useMemo(function () {\n    return contextItems || propsItems;\n  }, [contextItems, propsItems]);\n  var itemsCount = useRef(items ? _.size(items) : React.Children.count(children.current));\n\n  var _useScrollToItem = useScrollToItem({\n    itemsCount: itemsCount.current,\n    selectedIndex: selectedIndex,\n    offsetType: centerSelected ? useScrollToItem.offsetType.CENTER : useScrollToItem.offsetType.DYNAMIC\n  }),\n      tabBar = _useScrollToItem.scrollViewRef,\n      onItemLayout = _useScrollToItem.onItemLayout,\n      itemsWidths = _useScrollToItem.itemsWidths,\n      focusIndex = _useScrollToItem.focusIndex,\n      onContentSizeChange = _useScrollToItem.onContentSizeChange,\n      onLayout = _useScrollToItem.onLayout;\n\n  var indicatorOffsets = useMemo(function () {\n    var index = 0;\n    var offsets = [];\n    offsets.push(0);\n\n    while (index < itemsWidths.length - 1) {\n      ++index;\n      offsets[index] = offsets[index - 1] + itemsWidths[index - 1];\n    }\n\n    return offsets;\n  }, [itemsWidths]);\n\n  var _renderTabBarItems = useMemo(function () {\n    return _.map(items, function (item, index) {\n      return React.createElement(TabBarItem, _extends({\n        labelColor: labelColor,\n        selectedLabelColor: selectedLabelColor,\n        labelStyle: labelStyle,\n        selectedLabelStyle: selectedLabelStyle,\n        uppercase: uppercase,\n        iconColor: iconColor,\n        selectedIconColor: selectedIconColor,\n        activeBackgroundColor: activeBackgroundColor,\n        key: item.label\n      }, item, context, {\n        index: index,\n        state: itemStates[index],\n        onLayout: onItemLayout,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 14\n        }\n      }));\n    });\n  }, [items, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, itemStates, centerSelected, onItemLayout]);\n\n  var _renderTabBarItemsFromChildren = useMemo(function () {\n    return !children.current ? null : React.Children.map(children.current, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n        labelColor: labelColor,\n        selectedLabelColor: selectedLabelColor,\n        labelStyle: labelStyle,\n        selectedLabelStyle: selectedLabelStyle,\n        uppercase: uppercase,\n        iconColor: iconColor,\n        selectedIconColor: selectedIconColor,\n        activeBackgroundColor: activeBackgroundColor\n      }, child.props), context), {}, {\n        index: index,\n        state: itemStates[index],\n        onLayout: centerSelected ? onItemLayout : undefined\n      }));\n    });\n  }, [propsChildren, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, itemStates, centerSelected, onItemLayout]);\n\n  var renderTabBarItems = useMemo(function () {\n    return _.isEmpty(itemStates) ? null : items ? _renderTabBarItems : _renderTabBarItemsFromChildren;\n  }, [itemStates, items, _renderTabBarItems, _renderTabBarItemsFromChildren]);\n\n  var _indicatorWidth = new Value(0);\n\n  var _indicatorOffset = new Value(0);\n\n  var _indicatorTransitionStyle = {\n    width: _indicatorWidth,\n    left: _indicatorOffset\n  };\n  var selectedIndicator = itemsWidths && itemsWidths.length > 0 ? React.createElement(Reanimated.View, {\n    style: [styles.selectedIndicator, {\n      marginHorizontal: indicatorInset\n    }, indicatorStyle, _indicatorTransitionStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 69\n    }\n  }) : undefined;\n\n  var renderCodeBlock = _.memoize(function () {\n    var nodes = [];\n    nodes.push(set(_indicatorOffset, interpolate(currentPage, {\n      inputRange: indicatorOffsets.map(function (_v, i) {\n        return i;\n      }),\n      outputRange: indicatorOffsets\n    })));\n    nodes.push(set(_indicatorWidth, interpolate(currentPage, {\n      inputRange: itemsWidths.map(function (_v, i) {\n        return i;\n      }),\n      outputRange: itemsWidths.map(function (v) {\n        return v - 2 * indicatorInset;\n      })\n    })));\n    nodes.push(Reanimated.onChange(targetPage, Reanimated.call([targetPage], focusIndex)));\n    var temp = React.createElement(Code, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 18\n      }\n    }, function () {\n      return block(nodes);\n    });\n    return temp;\n  });\n\n  var shadowStyle = useMemo(function () {\n    return enableShadow ? propsShadowStyle || styles.containerShadow : undefined;\n  }, [enableShadow, propsShadowStyle]);\n\n  var _containerStyle = useMemo(function () {\n    return [styles.container, shadowStyle, {\n      width: containerWidth\n    }, containerStyle];\n  }, [shadowStyle, containerWidth, containerStyle]);\n\n  var indicatorContainerStyle = useMemo(function () {\n    return [styles.tabBar, {\n      flex: spreadItems ? 1 : undefined\n    }, !_.isUndefined(height) && {\n      height: height\n    }, {\n      backgroundColor: backgroundColor\n    }];\n  }, [height, backgroundColor]);\n  var scrollViewContainerStyle = useMemo(function () {\n    return {\n      minWidth: containerWidth\n    };\n  }, [containerWidth]);\n  return React.createElement(View, {\n    style: _containerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 10\n    }\n  }, React.createElement(FadedScrollView, {\n    ref: tabBar,\n    horizontal: true,\n    contentContainerStyle: scrollViewContainerStyle,\n    scrollEnabled: true,\n    testID: testID,\n    onContentSizeChange: onContentSizeChange,\n    onLayout: onLayout,\n    style: scrollViewStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: indicatorContainerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }, renderTabBarItems), selectedIndicator), _.size(itemsWidths) > 1 && renderCodeBlock());\n};\n\nTabBar.propTypes = {\n  items: _pt.array,\n  spreadItems: _pt.bool,\n  height: _pt.number,\n  enableShadow: _pt.bool,\n  wideIndicator: _pt.bool,\n  labelColor: _pt.string,\n  selectedLabelColor: _pt.string,\n  uppercase: _pt.bool,\n  iconColor: _pt.string,\n  selectedIconColor: _pt.string,\n  activeBackgroundColor: _pt.string,\n  backgroundColor: _pt.string,\n  containerWidth: _pt.number,\n  centerSelected: _pt.bool,\n  testID: _pt.string,\n  children: _pt.oneOfType([_pt.arrayOf(_pt.element), _pt.element])\n};\nTabBar.displayName = 'TabController.TabBar';\nTabBar.defaultProps = {\n  labelStyle: DEFAULT_LABEL_STYLE,\n  selectedLabelStyle: DEFAULT_SELECTED_LABEL_STYLE,\n  backgroundColor: DEFAULT_BACKGROUND_COLOR,\n  spreadItems: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScrollContent: {\n    minWidth: Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.primary\n  },\n  containerShadow: _objectSpread({}, Platform.select({\n    ios: {\n      shadowColor: Colors.dark10,\n      shadowOpacity: 0.05,\n      shadowRadius: 2,\n      shadowOffset: {\n        height: 6,\n        width: 0\n      }\n    },\n    android: {\n      elevation: 5,\n      backgroundColor: Colors.white\n    }\n  }))\n});\nexport default asBaseComponent(forwardRef(TabBar));","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/TabBar.js"],"names":["_pt","React","useEffect","useMemo","useRef","useContext","Reanimated","_","TabBarContext","TabBarItem","asBaseComponent","forwardRef","View","Colors","Spacings","Typography","Constants","LogService","FadedScrollView","useScrollToItem","Code","Value","_interpolate","interpolate","interpolateNode","block","set","DEFAULT_HEIGHT","DEFAULT_BACKGROUND_COLOR","white","DEFAULT_LABEL_STYLE","text80","fontWeight","letterSpacing","DEFAULT_SELECTED_LABEL_STYLE","TabBar","props","propsItems","items","spreadItems","height","enableShadow","propsShadowStyle","shadowStyle","indicatorStyle","wideIndicator","labelStyle","selectedLabelStyle","labelColor","selectedLabelColor","uppercase","iconColor","selectedIconColor","activeBackgroundColor","backgroundColor","propsContainerWidth","containerWidth","centerSelected","containerStyle","scrollViewStyle","testID","propsChildren","children","indicatorInset","s4","context","itemStates","contextItems","currentPage","targetPage","registerTabItems","selectedIndex","filter","child","_registerTabItems","ignoredItems","itemsCount","size","forEach","item","index","ignore","push","Children","count","current","toArray","warn","screenWidth","offsetType","CENTER","DYNAMIC","tabBar","scrollViewRef","onItemLayout","itemsWidths","focusIndex","onContentSizeChange","onLayout","indicatorOffsets","offsets","length","_renderTabBarItems","map","label","_renderTabBarItemsFromChildren","cloneElement","state","undefined","renderTabBarItems","isEmpty","_indicatorWidth","_indicatorOffset","_indicatorTransitionStyle","width","left","selectedIndicator","styles","marginHorizontal","renderCodeBlock","memoize","nodes","inputRange","_v","i","outputRange","v","onChange","call","temp","containerShadow","_containerStyle","container","indicatorContainerStyle","flex","isUndefined","scrollViewContainerStyle","minWidth","propTypes","array","bool","number","string","oneOfType","arrayOf","element","displayName","defaultProps","StyleSheet","create","zIndex","flexDirection","justifyContent","tabBarScrollContent","tab","alignItems","position","bottom","primary","Platform","select","ios","shadowColor","dark10","shadowOpacity","shadowRadius","shadowOffset","android","elevation"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: support commented props\n// TODO: disable scroll when content width is shorter than screen width\nimport React, { useEffect, useMemo, useRef, useContext } from 'react';\nimport { StyleSheet, Platform } from 'react-native';\nimport Reanimated from 'react-native-reanimated';\nimport _ from 'lodash';\nimport TabBarContext from \"./TabBarContext\";\nimport TabBarItem from \"./TabBarItem\";\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport { Colors, Spacings, Typography } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { LogService } from \"../../services\";\nimport FadedScrollView from \"./FadedScrollView\";\nimport { useScrollToItem } from \"../../hooks\";\nconst {\n  Code,\n  Value,\n  interpolate: _interpolate,\n  interpolateNode,\n  block,\n  set\n} = Reanimated;\nconst interpolate = interpolateNode || _interpolate;\nconst DEFAULT_HEIGHT = 48;\nconst DEFAULT_BACKGROUND_COLOR = Colors.white;\nconst DEFAULT_LABEL_STYLE = { ...Typography.text80,\n  fontWeight: '400',\n  letterSpacing: 0\n};\nconst DEFAULT_SELECTED_LABEL_STYLE = { ...Typography.text80,\n  fontWeight: '700',\n  letterSpacing: 0\n};\n\n/**\n * @description: TabController's TabBar component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n */\nconst TabBar = props => {\n  const {\n    items: propsItems,\n    spreadItems,\n    height,\n    enableShadow,\n    shadowStyle: propsShadowStyle,\n    // minTabsForScroll,\n    indicatorStyle,\n    wideIndicator,\n    labelStyle,\n    selectedLabelStyle,\n    labelColor,\n    selectedLabelColor,\n    uppercase,\n    iconColor,\n    selectedIconColor,\n    activeBackgroundColor,\n    backgroundColor,\n    containerWidth: propsContainerWidth,\n    centerSelected,\n    containerStyle,\n    scrollViewStyle,\n    testID,\n    children: propsChildren\n  } = props;\n  const indicatorInset = wideIndicator ? 0 : Spacings.s4;\n  const context = useContext(TabBarContext); // @ts-ignore // TODO: typescript\n\n  const {\n    itemStates,\n    items: contextItems,\n    currentPage,\n    targetPage,\n    registerTabItems,\n    selectedIndex\n  } = context;\n  const children = useRef(_.filter(propsChildren, child => !!child));\n\n  const _registerTabItems = () => {\n    const ignoredItems = [];\n    let itemsCount;\n\n    if (propsItems) {\n      itemsCount = _.size(propsItems);\n\n      _.forEach(propsItems, (item, index) => {\n        if (item.ignore) {\n          ignoredItems.push(index);\n        }\n      }); // TODO: deprecate with props.children\n\n    } else {\n      itemsCount = React.Children.count(children.current); // @ts-ignore TODO: typescript - not sure if this can be solved\n\n      React.Children.toArray(children.current).forEach((child, index) => {\n        if (child.props.ignore) {\n          ignoredItems.push(index);\n        }\n      });\n    }\n\n    registerTabItems(itemsCount, ignoredItems);\n  };\n\n  useEffect(() => {\n    if (propsChildren) {\n      LogService.warn('uilib: Please pass the \"items\" prop to TabController.TabBar instead of children');\n    }\n\n    if ((propsItems || children.current) && !contextItems) {\n      _registerTabItems();\n    }\n  }, []);\n  const containerWidth = useMemo(() => {\n    return propsContainerWidth || Constants.screenWidth;\n  }, [propsContainerWidth]);\n  const items = useMemo(() => {\n    return contextItems || propsItems;\n  }, [contextItems, propsItems]);\n  const itemsCount = useRef(items ? _.size(items) : React.Children.count(children.current));\n  const {\n    scrollViewRef: tabBar,\n    onItemLayout,\n    itemsWidths,\n    focusIndex,\n    onContentSizeChange,\n    onLayout\n  } = useScrollToItem({\n    itemsCount: itemsCount.current,\n    selectedIndex,\n    offsetType: centerSelected ? useScrollToItem.offsetType.CENTER : useScrollToItem.offsetType.DYNAMIC\n  });\n  const indicatorOffsets = useMemo(() => {\n    let index = 0;\n    const offsets = [];\n    offsets.push(0);\n\n    while (index < itemsWidths.length - 1) {\n      ++index;\n      offsets[index] = offsets[index - 1] + itemsWidths[index - 1];\n    }\n\n    return offsets;\n  }, [itemsWidths]);\n\n  const _renderTabBarItems = useMemo(() => {\n    return _.map(items, (item, index) => {\n      return <TabBarItem labelColor={labelColor} selectedLabelColor={selectedLabelColor} labelStyle={labelStyle} selectedLabelStyle={selectedLabelStyle} uppercase={uppercase} iconColor={iconColor} selectedIconColor={selectedIconColor} activeBackgroundColor={activeBackgroundColor} key={item.label} // width={_itemsWidths.current[index]}\n      {...item} {...context} index={index} state={itemStates[index]} onLayout={onItemLayout} />;\n    });\n  }, [items, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, itemStates, centerSelected, onItemLayout]); // TODO: Remove once props.children is deprecated\n\n\n  const _renderTabBarItemsFromChildren = useMemo(() => {\n    return !children.current ? null : React.Children.map(children.current, (child, index) => {\n      // @ts-ignore TODO: typescript - not sure if this can be easily solved\n      return React.cloneElement(child, {\n        labelColor,\n        selectedLabelColor,\n        labelStyle,\n        selectedLabelStyle,\n        uppercase,\n        iconColor,\n        selectedIconColor,\n        activeBackgroundColor,\n        ...child.props,\n        ...context,\n        index,\n        state: itemStates[index],\n        onLayout: centerSelected ? onItemLayout : undefined\n      });\n    });\n  }, [propsChildren, labelColor, selectedLabelColor, labelStyle, selectedLabelStyle, uppercase, iconColor, selectedIconColor, activeBackgroundColor, itemStates, centerSelected, onItemLayout]);\n\n  const renderTabBarItems = useMemo(() => {\n    return _.isEmpty(itemStates) ? null : items ? _renderTabBarItems : _renderTabBarItemsFromChildren;\n  }, [itemStates, items, _renderTabBarItems, _renderTabBarItemsFromChildren]);\n\n  const _indicatorWidth = new Value(0); // TODO: typescript?\n\n\n  const _indicatorOffset = new Value(0); // TODO: typescript?\n\n\n  const _indicatorTransitionStyle = {\n    // StyleProp<ViewStyle> TODO:\n    width: _indicatorWidth,\n    left: _indicatorOffset\n  };\n  const selectedIndicator = itemsWidths && itemsWidths.length > 0 ? <Reanimated.View style={[styles.selectedIndicator, {\n    marginHorizontal: indicatorInset\n  }, indicatorStyle, _indicatorTransitionStyle]} /> : undefined;\n\n  const renderCodeBlock = _.memoize(() => {\n    const nodes = [];\n    nodes.push(set(_indicatorOffset, interpolate(currentPage, {\n      inputRange: indicatorOffsets.map((_v, i) => i),\n      outputRange: indicatorOffsets\n    })));\n    nodes.push(set(_indicatorWidth, interpolate(currentPage, {\n      inputRange: itemsWidths.map((_v, i) => i),\n      outputRange: itemsWidths.map(v => v - 2 * indicatorInset)\n    })));\n    nodes.push(Reanimated.onChange(targetPage, Reanimated.call([targetPage], focusIndex)));\n    const temp = <Code>{() => block(nodes)}</Code>;\n    return temp;\n  });\n\n  const shadowStyle = useMemo(() => {\n    return enableShadow ? propsShadowStyle || styles.containerShadow : undefined;\n  }, [enableShadow, propsShadowStyle]);\n\n  const _containerStyle = useMemo(() => {\n    return [styles.container, shadowStyle, {\n      width: containerWidth\n    }, containerStyle];\n  }, [shadowStyle, containerWidth, containerStyle]);\n\n  const indicatorContainerStyle = useMemo(() => {\n    return [styles.tabBar, {\n      flex: spreadItems ? 1 : undefined\n    }, !_.isUndefined(height) && {\n      height\n    }, {\n      backgroundColor\n    }];\n  }, [height, backgroundColor]);\n  const scrollViewContainerStyle = useMemo(() => {\n    return {\n      minWidth: containerWidth\n    };\n  }, [containerWidth]);\n  return <View style={_containerStyle}>\n      <FadedScrollView\n    /**\n     // @ts-ignore TODO: typescript */\n    ref={tabBar} horizontal contentContainerStyle={scrollViewContainerStyle} scrollEnabled // TODO:\n    testID={testID} onContentSizeChange={onContentSizeChange} onLayout={onLayout} style={scrollViewStyle}>\n        <View style={indicatorContainerStyle}>{renderTabBarItems}</View>\n        {selectedIndicator}\n      </FadedScrollView>\n      {_.size(itemsWidths) > 1 && renderCodeBlock()}\n    </View>;\n};\n\nTabBar.propTypes = {\n  /**\n     * The list of tab bar items\n     */\n  items: _pt.array,\n\n  /**\n     * Whether the tabBar should be spread (default: true)\n     */\n  spreadItems: _pt.bool,\n\n  /**\n     * Tab Bar height\n     */\n  height: _pt.number,\n\n  /**\n     * Show Tab Bar bottom shadow\n     */\n  enableShadow: _pt.bool,\n\n  /**\n     * Whether the indicator should be wide (as the item)\n     */\n  wideIndicator: _pt.bool,\n\n  /**\n     * the default label color\n     */\n  labelColor: _pt.string,\n\n  /**\n     * the selected label color\n     */\n  selectedLabelColor: _pt.string,\n\n  /**\n     * whether to change the text to uppercase\n     */\n  uppercase: _pt.bool,\n\n  /**\n     * icon tint color\n     */\n  iconColor: _pt.string,\n\n  /**\n     * icon selected tint color\n     */\n  selectedIconColor: _pt.string,\n\n  /**\n     * TODO: rename to feedbackColor\n     * Apply background color on press for TouchableOpacity\n     */\n  activeBackgroundColor: _pt.string,\n\n  /**\n     * The TabBar background Color\n     */\n  backgroundColor: _pt.string,\n\n  /**\n     * The TabBar container width\n     */\n  containerWidth: _pt.number,\n\n  /**\n     * Pass to center selected item\n     */\n  centerSelected: _pt.bool,\n\n  /**\n     * Used as a testing identifier\n     */\n  testID: _pt.string,\n  children: _pt.oneOfType([_pt.arrayOf(_pt.element), _pt.element])\n};\nTabBar.displayName = 'TabController.TabBar';\nTabBar.defaultProps = {\n  labelStyle: DEFAULT_LABEL_STYLE,\n  selectedLabelStyle: DEFAULT_SELECTED_LABEL_STYLE,\n  backgroundColor: DEFAULT_BACKGROUND_COLOR,\n  spreadItems: true // containerWidth: Constants.screenWidth\n\n};\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 100\n  },\n  tabBar: {\n    height: DEFAULT_HEIGHT,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  tabBarScrollContent: {\n    minWidth: Constants.screenWidth\n  },\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  selectedIndicator: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    width: 70,\n    height: 2,\n    backgroundColor: Colors.primary\n  },\n  containerShadow: { ...Platform.select({\n      ios: {\n        shadowColor: Colors.dark10,\n        shadowOpacity: 0.05,\n        shadowRadius: 2,\n        shadowOffset: {\n          height: 6,\n          width: 0\n        }\n      },\n      android: {\n        elevation: 5,\n        backgroundColor: Colors.white\n      }\n    })\n  }\n});\nexport default asBaseComponent(forwardRef(TabBar));"]},"metadata":{},"sourceType":"module"}