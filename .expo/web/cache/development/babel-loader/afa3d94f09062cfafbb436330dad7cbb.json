{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/TabBarItem.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport _ from 'lodash';\nimport Reanimated, { processColor } from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport { interpolateColor } from 'react-native-redash';\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport Badge, { BADGE_SIZES } from \"../../components/badge\";\nimport { TouchableOpacity } from \"../../incubator\";\nvar cond = Reanimated.cond,\n    eq = Reanimated.eq,\n    call = Reanimated.call,\n    block = Reanimated.block,\n    and = Reanimated.and;\nvar DEFAULT_LABEL_COLOR = Colors.black;\nvar DEFAULT_SELECTED_LABEL_COLOR = Colors.primary;\n\nvar TabBarItem = function (_PureComponent) {\n  _inherits(TabBarItem, _PureComponent);\n\n  var _super = _createSuper(TabBarItem);\n\n  function TabBarItem(props) {\n    var _this;\n\n    _classCallCheck(this, TabBarItem);\n\n    _this = _super.call(this, props);\n    _this.itemRef = React.createRef();\n\n    _this.onLayout = function (event) {\n      var width = event.nativeEvent.layout.width;\n      var _this$props = _this.props,\n          index = _this$props.index,\n          onLayout = _this$props.onLayout;\n\n      if (!_this.itemWidth && _this.itemRef && _this.itemRef.current) {\n        _this.itemWidth = width;\n\n        _this.itemRef.current.setNativeProps({\n          style: {\n            width: width,\n            paddingHorizontal: null,\n            flex: null\n          }\n        });\n\n        onLayout == null ? void 0 : onLayout(event, index);\n      }\n    };\n\n    _this.onPress = function () {\n      var _this$props2 = _this.props,\n          index = _this$props2.index,\n          onPress = _this$props2.onPress;\n      onPress == null ? void 0 : onPress(index);\n    };\n\n    _this.itemWidth = _this.props.width;\n\n    if (_this.itemWidth) {\n      var _this$props3 = _this.props,\n          index = _this$props3.index,\n          onLayout = _this$props3.onLayout;\n      onLayout == null ? void 0 : onLayout({\n        nativeEvent: {\n          layout: {\n            x: 0,\n            y: 0,\n            width: _this.itemWidth,\n            height: 0\n          }\n        }\n      }, index);\n    }\n\n    return _this;\n  }\n\n  _createClass(TabBarItem, [{\n    key: \"getItemStyle\",\n    value: function getItemStyle() {\n      var _this$props4 = this.props,\n          state = _this$props4.state,\n          propsStyle = _this$props4.style,\n          _this$props4$activeOp = _this$props4.activeOpacity,\n          activeOpacity = _this$props4$activeOp === void 0 ? TabBarItem.defaultProps.activeOpacity : _this$props4$activeOp;\n      var opacity = block([cond(eq(state, State.END), call([], this.onPress)), cond(eq(state, State.BEGAN), activeOpacity, 1)]);\n      var style = {\n        opacity: opacity\n      };\n\n      if (this.props.width) {\n        style.flex = undefined;\n        style.width = this.itemWidth;\n        style.paddingHorizontal = undefined;\n      }\n\n      return [style, propsStyle];\n    }\n  }, {\n    key: \"getLabelStyle\",\n    value: function getLabelStyle() {\n      var _this$props5 = this.props,\n          index = _this$props5.index,\n          currentPage = _this$props5.currentPage,\n          targetPage = _this$props5.targetPage,\n          labelColor = _this$props5.labelColor,\n          selectedLabelColor = _this$props5.selectedLabelColor,\n          ignore = _this$props5.ignore,\n          labelStyle = _this$props5.labelStyle,\n          selectedLabelStyle = _this$props5.selectedLabelStyle;\n      var fontWeight, letterSpacing, fontFamily;\n\n      if (labelStyle != null && labelStyle.fontWeight || selectedLabelStyle != null && selectedLabelStyle.fontWeight) {\n        fontWeight = cond(and(eq(targetPage, index)), (selectedLabelStyle == null ? void 0 : selectedLabelStyle.fontWeight) || 'normal', (labelStyle == null ? void 0 : labelStyle.fontWeight) || 'normal');\n      }\n\n      if (labelStyle != null && labelStyle.letterSpacing || selectedLabelStyle != null && selectedLabelStyle.letterSpacing) {\n        letterSpacing = cond(and(eq(targetPage, index)), (selectedLabelStyle == null ? void 0 : selectedLabelStyle.letterSpacing) || 0, (labelStyle == null ? void 0 : labelStyle.letterSpacing) || 0);\n      }\n\n      if (labelStyle != null && labelStyle.fontFamily || selectedLabelStyle != null && selectedLabelStyle.fontFamily) {\n        fontFamily = cond(and(eq(targetPage, index)), selectedLabelStyle.fontFamily, labelStyle == null ? void 0 : labelStyle.fontFamily);\n      }\n\n      var inactiveColor = labelColor || DEFAULT_LABEL_COLOR;\n      var activeColor = !ignore ? selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR : inactiveColor;\n      var color = interpolateColor(currentPage, {\n        inputRange: [index - 1, index, index + 1],\n        outputRange: [inactiveColor, activeColor, inactiveColor]\n      });\n      return [labelStyle, _.omitBy({\n        fontFamily: fontFamily,\n        fontWeight: fontWeight,\n        letterSpacing: letterSpacing,\n        color: color\n      }, _.isUndefined)];\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props6 = this.props,\n          index = _this$props6.index,\n          currentPage = _this$props6.currentPage,\n          iconColor = _this$props6.iconColor,\n          selectedIconColor = _this$props6.selectedIconColor,\n          labelColor = _this$props6.labelColor,\n          selectedLabelColor = _this$props6.selectedLabelColor,\n          ignore = _this$props6.ignore,\n          disableIconTintColor = _this$props6.disableIconTintColor;\n\n      if (disableIconTintColor) {\n        return undefined;\n      }\n\n      var activeColor = selectedIconColor || selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n      var inactiveColor = iconColor || labelColor || DEFAULT_LABEL_COLOR;\n\n      if (processColor) {\n        activeColor = processColor(activeColor);\n        inactiveColor = processColor(inactiveColor);\n      }\n\n      var tintColor = cond(eq(currentPage, index), activeColor, ignore ? activeColor : inactiveColor);\n      return {\n        tintColor: tintColor\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          label = _this$props7.label,\n          icon = _this$props7.icon,\n          badge = _this$props7.badge,\n          state = _this$props7.state,\n          uppercase = _this$props7.uppercase,\n          activeOpacity = _this$props7.activeOpacity,\n          activeBackgroundColor = _this$props7.activeBackgroundColor,\n          testID = _this$props7.testID;\n      return React.createElement(TouchableOpacity, {\n        ref: this.itemRef,\n        pressState: state,\n        style: [styles.tabItem, this.getItemStyle()],\n        onLayout: this.onLayout,\n        feedbackColor: activeBackgroundColor,\n        activeOpacity: activeOpacity,\n        onPress: this.onPress,\n        testID: testID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 12\n        }\n      }, icon && React.createElement(Reanimated.Image, {\n        source: icon,\n        style: [!_.isUndefined(label) && styles.tabItemIconWithLabel, this.getIconStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 18\n        }\n      }), !_.isEmpty(label) && React.createElement(Reanimated.Text, {\n        style: [styles.tabItemLabel, this.getLabelStyle()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 31\n        }\n      }, uppercase ? _.toUpper(label) : label), badge && React.createElement(Badge, _extends({\n        backgroundColor: Colors.red30,\n        size: BADGE_SIZES.default\n      }, badge, {\n        containerStyle: styles.badge,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 7\n        }\n      })));\n    }\n  }]);\n\n  return TabBarItem;\n}(PureComponent);\n\nTabBarItem.propTypes = {\n  label: _pt.string,\n  labelColor: _pt.string,\n  selectedLabelColor: _pt.string,\n  icon: _pt.number,\n  iconColor: _pt.string,\n  selectedIconColor: _pt.string,\n  width: _pt.number,\n  ignore: _pt.bool,\n  onPress: _pt.func,\n  uppercase: _pt.bool,\n  activeOpacity: _pt.number,\n  activeBackgroundColor: _pt.string,\n  testID: _pt.string,\n  disableIconTintColor: _pt.bool,\n  index: _pt.number.isRequired,\n  targetPage: _pt.any.isRequired,\n  onLayout: _pt.func\n};\nTabBarItem.displayName = 'TabController.TabBarItem';\nTabBarItem.defaultProps = {\n  activeOpacity: 1,\n  onPress: _.noop\n};\nexport { TabBarItem as default };\nvar styles = StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacings.s4\n  },\n  tabItemLabel: _objectSpread({}, Typography.text80),\n  tabItemIconWithLabel: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: Spacings.s1\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/tabController/TabBarItem.js"],"names":["_pt","React","PureComponent","_","Reanimated","processColor","State","interpolateColor","Colors","Typography","Spacings","Badge","BADGE_SIZES","TouchableOpacity","cond","eq","call","block","and","DEFAULT_LABEL_COLOR","black","DEFAULT_SELECTED_LABEL_COLOR","primary","TabBarItem","props","itemRef","createRef","onLayout","event","width","nativeEvent","layout","index","itemWidth","current","setNativeProps","style","paddingHorizontal","flex","onPress","x","y","height","state","propsStyle","activeOpacity","defaultProps","opacity","END","BEGAN","undefined","currentPage","targetPage","labelColor","selectedLabelColor","ignore","labelStyle","selectedLabelStyle","fontWeight","letterSpacing","fontFamily","inactiveColor","activeColor","color","inputRange","outputRange","omitBy","isUndefined","iconColor","selectedIconColor","disableIconTintColor","tintColor","label","icon","badge","uppercase","activeBackgroundColor","testID","styles","tabItem","getItemStyle","tabItemIconWithLabel","getIconStyle","isEmpty","tabItemLabel","getLabelStyle","toUpper","red30","default","propTypes","string","number","bool","func","isRequired","any","displayName","noop","StyleSheet","create","flexDirection","alignItems","justifyContent","s4","text80","marginRight","marginLeft","s1"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: support commented props\nimport React, { PureComponent } from 'react';\nimport { StyleSheet\n/* processColor, */\n} from 'react-native';\nimport _ from 'lodash';\nimport Reanimated, { processColor } from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport { interpolateColor } from 'react-native-redash';\nimport { Colors, Typography, Spacings } from \"../../style\";\nimport Badge, { BADGE_SIZES } from \"../../components/badge\";\nimport { TouchableOpacity } from \"../../incubator\";\nconst {\n  cond,\n  eq,\n  call,\n  block,\n  and\n} = Reanimated;\nconst DEFAULT_LABEL_COLOR = Colors.black;\nconst DEFAULT_SELECTED_LABEL_COLOR = Colors.primary;\n\n/**\n * @description: TabController's TabBarItem\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabControllerScreen/index.tsx\n * @notes: Must be rendered as a direct child of TabController.TabBar.\n */\nexport default class TabBarItem extends PureComponent {\n  static propTypes = {\n    /**\n       * label of the tab\n       */\n    label: _pt.string,\n\n    /**\n       * the default label color\n       */\n    labelColor: _pt.string,\n\n    /**\n       * the selected label color\n       */\n    selectedLabelColor: _pt.string,\n\n    /**\n       * icon of the tab\n       */\n    icon: _pt.number,\n\n    /**\n       * icon tint color\n       */\n    iconColor: _pt.string,\n\n    /**\n       * icon selected tint color\n       */\n    selectedIconColor: _pt.string,\n\n    /**\n       * A fixed width for the item\n       */\n\n    /* showDivider?: boolean;*/\n\n    /**\n       * whether the tab will have a divider on its right\n       */\n\n    /* maxLines?: number;*/\n\n    /**\n       * maximun number of lines the label can break\n       */\n    width: _pt.number,\n\n    /**\n       * ignore of the tab\n       */\n    ignore: _pt.bool,\n\n    /**\n       * callback for when pressing a tab\n       */\n    onPress: _pt.func,\n\n    /**\n       * whether to change the text to uppercase\n       */\n    uppercase: _pt.bool,\n\n    /**\n       * The active opacity when pressing a tab\n       */\n    activeOpacity: _pt.number,\n\n    /**\n       * TODO: rename to feedbackColor\n       * Apply background color on press for TouchableOpacity\n       */\n    activeBackgroundColor: _pt.string,\n\n    /**\n       * Used as a testing identifier\n       */\n    testID: _pt.string,\n\n    /**\n       * disables icon's tint color\n       */\n    disableIconTintColor: _pt.bool,\n    index: _pt.number.isRequired,\n    targetPage: _pt.any.isRequired,\n    onLayout: _pt.func\n  };\n  static displayName = 'TabController.TabBarItem';\n  static defaultProps = {\n    activeOpacity: 1,\n    onPress: _.noop\n  };\n  itemRef = React.createRef();\n\n  constructor(props) {\n    super(props);\n    this.itemWidth = this.props.width;\n\n    if (this.itemWidth) {\n      const {\n        index,\n        onLayout\n      } = this.props;\n      onLayout?.({\n        nativeEvent: {\n          layout: {\n            x: 0,\n            y: 0,\n            width: this.itemWidth,\n            height: 0\n          }\n        }\n      }, index);\n    }\n  }\n\n  onLayout = event => {\n    const {\n      width\n    } = event.nativeEvent.layout;\n    const {\n      index,\n      onLayout\n    } = this.props;\n\n    if (!this.itemWidth && this.itemRef && this.itemRef.current) {\n      this.itemWidth = width; // @ts-ignore\n\n      this.itemRef.current.setNativeProps({\n        style: {\n          width,\n          paddingHorizontal: null,\n          flex: null\n        }\n      });\n      onLayout?.(event, index);\n    }\n  };\n  onPress = () => {\n    const {\n      index,\n      onPress\n    } = this.props;\n    onPress?.(index);\n  };\n\n  getItemStyle() {\n    const {\n      state,\n      style: propsStyle,\n      activeOpacity = TabBarItem.defaultProps.activeOpacity\n    } = this.props;\n    const opacity = block([cond(eq(state, State.END), call([], this.onPress)), cond(eq(state, State.BEGAN), activeOpacity, 1)]);\n    const style = {\n      opacity\n    };\n\n    if (this.props.width) {\n      style.flex = undefined;\n      style.width = this.itemWidth;\n      style.paddingHorizontal = undefined;\n    }\n\n    return [style, propsStyle];\n  }\n\n  getLabelStyle() {\n    const {\n      index,\n      currentPage,\n      targetPage,\n      labelColor,\n      selectedLabelColor,\n      ignore,\n      labelStyle,\n      selectedLabelStyle\n    } = this.props;\n    let fontWeight, letterSpacing, fontFamily;\n\n    if (labelStyle?.fontWeight || selectedLabelStyle?.fontWeight) {\n      fontWeight = cond( // @ts-ignore TODO: typescript - add or delete and?\n      and(eq(targetPage, index)\n      /* , defined(itemWidth) */\n      ), selectedLabelStyle?.fontWeight || 'normal', labelStyle?.fontWeight || 'normal');\n    }\n\n    if (labelStyle?.letterSpacing || selectedLabelStyle?.letterSpacing) {\n      letterSpacing = cond( // @ts-ignore TODO: typescript - add or delete and?\n      and(eq(targetPage, index)\n      /* , defined(itemWidth) */\n      ), selectedLabelStyle?.letterSpacing || 0, labelStyle?.letterSpacing || 0);\n    }\n\n    if (labelStyle?.fontFamily || selectedLabelStyle?.fontFamily) {\n      fontFamily = cond( // @ts-ignore TODO: typescript - add or delete and?\n      and(eq(targetPage, index)\n      /* , defined(itemWidth) */\n      ), // @ts-ignore\n      selectedLabelStyle.fontFamily, labelStyle?.fontFamily);\n    }\n\n    const inactiveColor = labelColor || DEFAULT_LABEL_COLOR;\n    const activeColor = !ignore ? selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR : inactiveColor; // Animated color\n\n    const color = interpolateColor(currentPage, {\n      inputRange: [index - 1, index, index + 1],\n      outputRange: [inactiveColor, activeColor, inactiveColor]\n    });\n    return [labelStyle, _.omitBy({\n      fontFamily,\n      fontWeight,\n      letterSpacing,\n      color\n    }, _.isUndefined)];\n  }\n\n  getIconStyle() {\n    const {\n      index,\n      currentPage,\n      iconColor,\n      selectedIconColor,\n      labelColor,\n      selectedLabelColor,\n      ignore,\n      disableIconTintColor\n    } = this.props;\n\n    if (disableIconTintColor) {\n      return undefined;\n    }\n\n    let activeColor = selectedIconColor || selectedLabelColor || DEFAULT_SELECTED_LABEL_COLOR;\n    let inactiveColor = iconColor || labelColor || DEFAULT_LABEL_COLOR; // TODO: Don't condition this once migrating completely to reanimated v2\n\n    if (processColor) {\n      // @ts-ignore\n      activeColor = processColor(activeColor); // @ts-ignore\n\n      inactiveColor = processColor(inactiveColor);\n    }\n\n    const tintColor = cond(eq(currentPage, index), activeColor, ignore ? activeColor : inactiveColor);\n    return {\n      tintColor\n    };\n  }\n\n  render() {\n    const {\n      label,\n      icon,\n      badge,\n      state,\n      uppercase,\n      activeOpacity,\n      activeBackgroundColor,\n      testID\n    } = this.props;\n    return <TouchableOpacity ref={this.itemRef} pressState={state} style={[styles.tabItem, this.getItemStyle()]} onLayout={this.onLayout} feedbackColor={activeBackgroundColor} activeOpacity={activeOpacity} onPress={this.onPress} testID={testID}>\n        {icon && <Reanimated.Image source={icon} // @ts-ignore reanimated2\n      style={[!_.isUndefined(label) && styles.tabItemIconWithLabel, this.getIconStyle()]} />}\n        {!_.isEmpty(label) && <Reanimated.Text style={[styles.tabItemLabel, this.getLabelStyle()]}>\n            {uppercase ? _.toUpper(label) : label}\n          </Reanimated.Text>}\n        {badge && // @ts-ignore\n      <Badge backgroundColor={Colors.red30} size={BADGE_SIZES.default} {...badge} containerStyle={styles.badge} />}\n      </TouchableOpacity>;\n  }\n\n}\nconst styles = StyleSheet.create({\n  tabItem: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: Spacings.s4\n  },\n  tabItemLabel: { ...Typography.text80\n  },\n  tabItemIconWithLabel: {\n    marginRight: 10\n  },\n  badge: {\n    marginLeft: Spacings.s1\n  }\n});"]},"metadata":{},"sourceType":"module"}