{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"style\"];\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/hint/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { Component, isValidElement } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { Typography, Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\n\nvar sideTip = require(\"./assets/hintTipSide.png\");\n\nvar middleTip = require(\"./assets/hintTipMiddle.png\");\n\nvar DEFAULT_COLOR = Colors.primary;\nvar DEFAULT_HINT_OFFSET = Spacings.s4;\nvar DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS;\n\n(function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n})(TARGET_POSITIONS || (TARGET_POSITIONS = {}));\n\nvar HintPositions;\n\n(function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n})(HintPositions || (HintPositions = {}));\n\nvar Hint = function (_Component) {\n  _inherits(Hint, _Component);\n\n  var _super = _createSuper(Hint);\n\n  function Hint() {\n    var _this;\n\n    _classCallCheck(this, Hint);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.targetRef = null;\n    _this.hintRef = null;\n    _this.state = {\n      targetLayoutInWindow: undefined,\n      targetLayout: _this.props.targetFrame\n    };\n    _this.visibleAnimated = new Animated.Value(Number(!!_this.props.visible));\n\n    _this.focusAccessibilityOnHint = function () {\n      var message = _this.props.message;\n      var targetRefTag = findNodeHandle(_this.targetRef);\n      var hintRefTag = findNodeHandle(_this.hintRef);\n\n      if (targetRefTag && _.isString(message)) {\n        AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n      } else if (hintRefTag) {\n        AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n      }\n    };\n\n    _this.setTargetRef = function (ref) {\n      _this.targetRef = ref;\n\n      _this.focusAccessibilityOnHint();\n    };\n\n    _this.setHintRef = function (ref) {\n      _this.hintRef = ref;\n\n      _this.focusAccessibilityOnHint();\n    };\n\n    _this.onTargetLayout = function (_ref) {\n      var layout = _ref.nativeEvent.layout;\n\n      if (!_.isEqual(_this.state.targetLayout, layout)) {\n        _this.setState({\n          targetLayout: layout\n        });\n      }\n\n      if (!_this.state.targetLayoutInWindow) {\n        setTimeout(function () {\n          var _this$targetRef;\n\n          (_this$targetRef = _this.targetRef) == null ? void 0 : _this$targetRef.measureInWindow(function (x, y, width, height) {\n            var targetLayoutInWindow = {\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            };\n\n            _this.setState({\n              targetLayoutInWindow: targetLayoutInWindow\n            });\n          });\n        });\n      }\n    };\n\n    _this.getHintAnimatedStyle = function () {\n      var position = _this.props.position;\n      var translateY = position === HintPositions.TOP ? -10 : 10;\n      return {\n        opacity: _this.visibleAnimated,\n        transform: [{\n          translateY: _this.visibleAnimated.interpolate({\n            inputRange: [0, 1],\n            outputRange: [translateY, 0]\n          })\n        }]\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Hint, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        Animated.timing(this.visibleAnimated, {\n          toValue: Number(!!this.props.visible),\n          duration: 170,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, {\n    key: \"getAccessibilityInfo\",\n    value: function getAccessibilityInfo() {\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          message = _this$props.message;\n\n      if (visible && _.isString(message)) {\n        return {\n          accessible: true,\n          accessibilityLabel: \"hint: \" + message\n        };\n      }\n    }\n  }, {\n    key: \"containerWidth\",\n    get: function get() {\n      var _this$props$container = this.props.containerWidth,\n          containerWidth = _this$props$container === void 0 ? Constants.screenWidth : _this$props$container;\n      return containerWidth;\n    }\n  }, {\n    key: \"targetLayout\",\n    get: function get() {\n      var _this$props2 = this.props,\n          onBackgroundPress = _this$props2.onBackgroundPress,\n          targetFrame = _this$props2.targetFrame;\n      var _this$state = this.state,\n          targetLayout = _this$state.targetLayout,\n          targetLayoutInWindow = _this$state.targetLayoutInWindow;\n\n      if (targetFrame) {\n        return targetFrame;\n      }\n\n      return onBackgroundPress ? targetLayoutInWindow : targetLayout;\n    }\n  }, {\n    key: \"showHint\",\n    get: function get() {\n      return !!this.targetLayout;\n    }\n  }, {\n    key: \"tipSize\",\n    get: function get() {\n      return this.useSideTip ? {\n        width: 14,\n        height: 7\n      } : {\n        width: 20,\n        height: 7\n      };\n    }\n  }, {\n    key: \"hintOffset\",\n    get: function get() {\n      var _this$props$offset = this.props.offset,\n          offset = _this$props$offset === void 0 ? DEFAULT_HINT_OFFSET : _this$props$offset;\n      return offset;\n    }\n  }, {\n    key: \"edgeMargins\",\n    get: function get() {\n      var _this$props$edgeMargi = this.props.edgeMargins,\n          edgeMargins = _this$props$edgeMargi === void 0 ? DEFAULT_EDGE_MARGINS : _this$props$edgeMargi;\n      return edgeMargins;\n    }\n  }, {\n    key: \"useSideTip\",\n    get: function get() {\n      var useSideTip = this.props.useSideTip;\n\n      if (!_.isUndefined(useSideTip)) {\n        return useSideTip;\n      }\n\n      return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getTargetPositionOnScreen\",\n    value: function getTargetPositionOnScreen() {\n      var _this$targetLayout, _this$targetLayout2;\n\n      if ((_this$targetLayout = this.targetLayout) != null && _this$targetLayout.x && (_this$targetLayout2 = this.targetLayout) != null && _this$targetLayout2.width) {\n        var targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n\n        if (targetMidPosition > this.containerWidth * (2 / 3)) {\n          return TARGET_POSITIONS.RIGHT;\n        } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n          return TARGET_POSITIONS.LEFT;\n        }\n      }\n\n      return TARGET_POSITIONS.CENTER;\n    }\n  }, {\n    key: \"getContainerPosition\",\n    value: function getContainerPosition() {\n      if (this.targetLayout) {\n        return {\n          top: this.targetLayout.y,\n          left: this.targetLayout.x\n        };\n      }\n    }\n  }, {\n    key: \"getHintPosition\",\n    value: function getHintPosition() {\n      var _this$targetLayout3, _this$targetLayout4;\n\n      var position = this.props.position;\n      var hintPositionStyle = {\n        alignItems: 'center'\n      };\n\n      if ((_this$targetLayout3 = this.targetLayout) != null && _this$targetLayout3.x) {\n        hintPositionStyle.left = -this.targetLayout.x;\n      }\n\n      if (position === HintPositions.TOP) {\n        hintPositionStyle.bottom = 0;\n      } else if ((_this$targetLayout4 = this.targetLayout) != null && _this$targetLayout4.height) {\n        hintPositionStyle.top = this.targetLayout.height;\n      }\n\n      var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n      if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n      }\n\n      return hintPositionStyle;\n    }\n  }, {\n    key: \"getHintPadding\",\n    value: function getHintPadding() {\n      var _this$targetLayout5;\n\n      var paddings = {\n        paddingVertical: this.hintOffset,\n        paddingHorizontal: this.edgeMargins\n      };\n\n      if (this.useSideTip && (_this$targetLayout5 = this.targetLayout) != null && _this$targetLayout5.x) {\n        var _this$targetLayout6;\n\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n        if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n          paddings.paddingLeft = this.targetLayout.x;\n        } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && (_this$targetLayout6 = this.targetLayout) != null && _this$targetLayout6.width) {\n          paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n        }\n      }\n\n      return paddings;\n    }\n  }, {\n    key: \"getTipPosition\",\n    value: function getTipPosition() {\n      var _this$targetLayout7, _this$targetLayout8;\n\n      var position = this.props.position;\n      var tipPositionStyle = {};\n\n      if (position === HintPositions.TOP) {\n        tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n        !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n      } else {\n        tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n      }\n\n      if ((_this$targetLayout7 = this.targetLayout) != null && _this$targetLayout7.width && (_this$targetLayout8 = this.targetLayout) != null && _this$targetLayout8.x) {\n        var targetMidWidth = this.targetLayout.width / 2;\n        var tipMidWidth = this.tipSize.width / 2;\n        var leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n        var rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - this.targetLayout.width : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n        var targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n        switch (targetPositionOnScreen) {\n          case TARGET_POSITIONS.LEFT:\n            tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n            break;\n\n          case TARGET_POSITIONS.RIGHT:\n            tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n            break;\n\n          case TARGET_POSITIONS.CENTER:\n          default:\n            tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n            break;\n        }\n      }\n\n      return tipPositionStyle;\n    }\n  }, {\n    key: \"renderHintTip\",\n    value: function renderHintTip() {\n      var _this$props3 = this.props,\n          position = _this$props3.position,\n          color = _this$props3.color;\n      var source = this.useSideTip ? sideTip : middleTip;\n      var flipVertically = position === HintPositions.TOP;\n      var flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n      var flipStyle = {\n        transform: [{\n          scaleY: flipVertically ? -1 : 1\n        }, {\n          scaleX: flipHorizontally ? -1 : 1\n        }]\n      };\n      return React.createElement(Image, {\n        tintColor: color || DEFAULT_COLOR,\n        source: source,\n        style: [styles.hintTip, this.getTipPosition(), flipStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 12\n        }\n      });\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props4 = this.props,\n          message = _this$props4.message,\n          messageStyle = _this$props4.messageStyle,\n          icon = _this$props4.icon,\n          iconStyle = _this$props4.iconStyle,\n          borderRadius = _this$props4.borderRadius,\n          color = _this$props4.color,\n          customContent = _this$props4.customContent,\n          testID = _this$props4.testID;\n      return React.createElement(View, {\n        testID: testID + \".message\",\n        row: true,\n        centerV: true,\n        style: [styles.hint, color && {\n          backgroundColor: color\n        }, !_.isUndefined(borderRadius) && {\n          borderRadius: borderRadius\n        }],\n        ref: this.setHintRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 12\n        }\n      }, customContent, !customContent && icon && React.createElement(Image, {\n        source: icon,\n        style: [styles.icon, iconStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 36\n        }\n      }), !customContent && React.createElement(Text, {\n        style: [styles.hintMessage, messageStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 28\n        }\n      }, message));\n    }\n  }, {\n    key: \"renderHint\",\n    value: function renderHint() {\n      var testID = this.props.testID;\n\n      if (this.showHint) {\n        return React.createElement(View, {\n          animated: true,\n          style: [{\n            width: this.containerWidth\n          }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()],\n          pointerEvents: \"box-none\",\n          testID: testID,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 14\n          }\n        }, this.renderHintTip(), this.renderContent());\n      }\n    }\n  }, {\n    key: \"renderHintContainer\",\n    value: function renderHintContainer() {\n      var _this$props5 = this.props,\n          style = _this$props5.style,\n          others = _objectWithoutProperties(_this$props5, _excluded);\n\n      delete others.testID;\n      return React.createElement(View, _extends({}, others, {\n        style: [styles.container, style, this.getContainerPosition()],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 12\n        }\n      }), this.renderHint());\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren() {\n      var targetFrame = this.props.targetFrame;\n\n      if (!targetFrame && isValidElement(this.props.children)) {\n        return React.cloneElement(this.props.children, _objectSpread({\n          collapsable: false,\n          onLayout: this.onTargetLayout,\n          ref: this.setTargetRef\n        }, this.getAccessibilityInfo()));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          visible = _this$props6.visible,\n          onBackgroundPress = _this$props6.onBackgroundPress,\n          testID = _this$props6.testID;\n\n      if (!visible) {\n        return this.props.children;\n      }\n\n      return React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 12\n        }\n      }, onBackgroundPress ? React.createElement(Modal, {\n        visible: this.showHint,\n        animationType: \"none\",\n        transparent: true,\n        onBackgroundPress: onBackgroundPress,\n        onRequestClose: onBackgroundPress,\n        testID: testID + \".modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 30\n        }\n      }, this.renderHintContainer()) : this.renderHintContainer(), this.renderChildren());\n    }\n  }]);\n\n  return Hint;\n}(Component);\n\nHint.propTypes = {\n  visible: _pt.bool,\n  color: _pt.string,\n  message: _pt.oneOfType([_pt.string, _pt.element]),\n  position: _pt.oneOf([\"top\", \"bottom\"]),\n  targetFrame: _pt.shape({\n    x: _pt.number,\n    y: _pt.number,\n    width: _pt.number,\n    height: _pt.number\n  }),\n  useSideTip: _pt.bool,\n  borderRadius: _pt.number,\n  edgeMargins: _pt.number,\n  offset: _pt.number,\n  onBackgroundPress: _pt.func,\n  containerWidth: _pt.number,\n  customContent: _pt.element,\n  testID: _pt.string\n};\nHint.displayName = 'Hint';\nHint.defaultProps = {\n  position: HintPositions.BOTTOM\n};\nHint.positions = HintPositions;\nvar styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: 400,\n    backgroundColor: DEFAULT_COLOR,\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4,\n    borderRadius: BorderRadiuses.br60\n  },\n  hintMessage: _objectSpread(_objectSpread({}, Typography.text70), {}, {\n    color: Colors.white,\n    flexShrink: 1\n  }),\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/hint/index.js"],"names":["_pt","_","React","Component","isValidElement","Typography","Spacings","Colors","BorderRadiuses","Constants","asBaseComponent","View","Text","Image","Modal","sideTip","require","middleTip","DEFAULT_COLOR","primary","DEFAULT_HINT_OFFSET","s4","DEFAULT_EDGE_MARGINS","s5","TARGET_POSITIONS","HintPositions","Hint","targetRef","hintRef","state","targetLayoutInWindow","undefined","targetLayout","props","targetFrame","visibleAnimated","Animated","Value","Number","visible","focusAccessibilityOnHint","message","targetRefTag","findNodeHandle","hintRefTag","isString","AccessibilityInfo","setAccessibilityFocus","setTargetRef","ref","setHintRef","onTargetLayout","layout","nativeEvent","isEqual","setState","setTimeout","measureInWindow","x","y","width","height","getHintAnimatedStyle","position","translateY","TOP","opacity","transform","interpolate","inputRange","outputRange","prevProps","timing","toValue","duration","useNativeDriver","start","accessible","accessibilityLabel","containerWidth","screenWidth","onBackgroundPress","useSideTip","offset","edgeMargins","isUndefined","getTargetPositionOnScreen","CENTER","targetMidPosition","RIGHT","LEFT","top","left","hintPositionStyle","alignItems","bottom","targetPositionOnScreen","isRTL","paddings","paddingVertical","hintOffset","paddingHorizontal","paddingLeft","paddingRight","tipPositionStyle","tipSize","targetMidWidth","tipMidWidth","leftPosition","rightPosition","right","color","source","flipVertically","flipHorizontally","flipStyle","scaleY","scaleX","styles","hintTip","getTipPosition","messageStyle","icon","iconStyle","borderRadius","customContent","testID","hint","backgroundColor","hintMessage","showHint","animatedContainer","getHintPosition","getHintPadding","renderHintTip","renderContent","style","others","container","getContainerPosition","renderHint","children","cloneElement","collapsable","onLayout","getAccessibilityInfo","renderHintContainer","renderChildren","propTypes","bool","string","oneOfType","element","oneOf","shape","number","func","displayName","defaultProps","BOTTOM","positions","StyleSheet","create","maxWidth","paddingTop","s3","paddingBottom","br60","text70","white","flexShrink","marginRight","tintColor"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: Add support to custom hint rendering\nimport _ from 'lodash';\nimport React, { Component, isValidElement } from 'react';\nimport { Animated, StyleSheet, AccessibilityInfo, findNodeHandle } from 'react-native';\nimport { Typography, Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { Constants } from \"../../helpers\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport View from \"../view\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport Modal from \"../modal\";\n\nconst sideTip = require(\"./assets/hintTipSide.png\");\n\nconst middleTip = require(\"./assets/hintTipMiddle.png\");\n\nconst DEFAULT_COLOR = Colors.primary;\nconst DEFAULT_HINT_OFFSET = Spacings.s4;\nconst DEFAULT_EDGE_MARGINS = Spacings.s5;\nvar TARGET_POSITIONS;\n\n(function (TARGET_POSITIONS) {\n  TARGET_POSITIONS[\"LEFT\"] = \"left\";\n  TARGET_POSITIONS[\"RIGHT\"] = \"right\";\n  TARGET_POSITIONS[\"CENTER\"] = \"center\";\n})(TARGET_POSITIONS || (TARGET_POSITIONS = {}));\n\nvar HintPositions; // TODO: unify with FeatureHighlightFrame\n\n(function (HintPositions) {\n  HintPositions[\"TOP\"] = \"top\";\n  HintPositions[\"BOTTOM\"] = \"bottom\";\n})(HintPositions || (HintPositions = {}));\n\n/**\n * @description: Hint component for displaying a tooltip over wrapped component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/HintsScreen.js\n * @notes: You can either wrap a component or pass a specific targetFrame\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Hint/Hint.gif?raw=true\n */\nclass Hint extends Component {\n  static propTypes = {\n    /**\n       * Control the visibility of the hint\n       */\n    visible: _pt.bool,\n\n    /**\n       * The hint background color\n       */\n    color: _pt.string,\n\n    /**\n       * The hint message\n       */\n    message: _pt.oneOfType([_pt.string, _pt.element]),\n\n    /**\n       * The hint's position\n       */\n    position: _pt.oneOf([\"top\", \"bottom\"]),\n\n    /**\n       * Provide custom target position instead of wrapping a child\n       */\n    targetFrame: _pt.shape({\n      x: _pt.number,\n      y: _pt.number,\n      width: _pt.number,\n      height: _pt.number\n    }),\n\n    /**\n       * Show side tips instead of the middle tip\n       */\n    useSideTip: _pt.bool,\n\n    /**\n       * The hint's border radius\n       */\n    borderRadius: _pt.number,\n\n    /**\n       * Hint margins from screen edges\n       */\n    edgeMargins: _pt.number,\n\n    /**\n       * Hint offset from target\n       */\n    offset: _pt.number,\n\n    /**\n       * Callback for the background press\n       */\n    onBackgroundPress: _pt.func,\n\n    /**\n       * The hint container width\n       */\n    containerWidth: _pt.number,\n\n    /**\n       * Custom content element to render inside the hint container\n       */\n    customContent: _pt.element,\n\n    /**\n       * The hint's test identifier\n       */\n    testID: _pt.string\n  };\n  static displayName = 'Hint';\n  static defaultProps = {\n    position: HintPositions.BOTTOM\n  };\n  static positions = HintPositions;\n  targetRef = null;\n  hintRef = null;\n  state = {\n    targetLayoutInWindow: undefined,\n    targetLayout: this.props.targetFrame\n  };\n  visibleAnimated = new Animated.Value(Number(!!this.props.visible));\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      Animated.timing(this.visibleAnimated, {\n        toValue: Number(!!this.props.visible),\n        duration: 170,\n        useNativeDriver: true\n      }).start();\n    }\n  }\n\n  focusAccessibilityOnHint = () => {\n    const {\n      message\n    } = this.props;\n    const targetRefTag = findNodeHandle(this.targetRef);\n    const hintRefTag = findNodeHandle(this.hintRef);\n\n    if (targetRefTag && _.isString(message)) {\n      AccessibilityInfo.setAccessibilityFocus(targetRefTag);\n    } else if (hintRefTag) {\n      AccessibilityInfo.setAccessibilityFocus(hintRefTag);\n    }\n  };\n  setTargetRef = ref => {\n    this.targetRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n  setHintRef = ref => {\n    this.hintRef = ref;\n    this.focusAccessibilityOnHint();\n  };\n  onTargetLayout = ({\n    nativeEvent: {\n      layout\n    }\n  }) => {\n    if (!_.isEqual(this.state.targetLayout, layout)) {\n      this.setState({\n        targetLayout: layout\n      });\n    }\n\n    if (!this.state.targetLayoutInWindow) {\n      setTimeout(() => {\n        this.targetRef?.measureInWindow((x, y, width, height) => {\n          const targetLayoutInWindow = {\n            x,\n            y,\n            width,\n            height\n          };\n          this.setState({\n            targetLayoutInWindow\n          });\n        });\n      });\n    }\n  };\n\n  getAccessibilityInfo() {\n    const {\n      visible,\n      message\n    } = this.props;\n\n    if (visible && _.isString(message)) {\n      return {\n        accessible: true,\n        accessibilityLabel: `hint: ${message}`\n      };\n    }\n  }\n\n  get containerWidth() {\n    const {\n      containerWidth = Constants.screenWidth\n    } = this.props;\n    return containerWidth;\n  }\n\n  get targetLayout() {\n    const {\n      onBackgroundPress,\n      targetFrame\n    } = this.props;\n    const {\n      targetLayout,\n      targetLayoutInWindow\n    } = this.state;\n\n    if (targetFrame) {\n      return targetFrame;\n    }\n\n    return onBackgroundPress ? targetLayoutInWindow : targetLayout;\n  }\n\n  get showHint() {\n    return !!this.targetLayout;\n  }\n\n  get tipSize() {\n    return this.useSideTip ? {\n      width: 14,\n      height: 7\n    } : {\n      width: 20,\n      height: 7\n    };\n  }\n\n  get hintOffset() {\n    const {\n      offset = DEFAULT_HINT_OFFSET\n    } = this.props;\n    return offset;\n  }\n\n  get edgeMargins() {\n    const {\n      edgeMargins = DEFAULT_EDGE_MARGINS\n    } = this.props;\n    return edgeMargins;\n  }\n\n  get useSideTip() {\n    const {\n      useSideTip\n    } = this.props;\n\n    if (!_.isUndefined(useSideTip)) {\n      return useSideTip;\n    }\n\n    return this.getTargetPositionOnScreen() !== TARGET_POSITIONS.CENTER;\n  }\n\n  getTargetPositionOnScreen() {\n    if (this.targetLayout?.x && this.targetLayout?.width) {\n      const targetMidPosition = this.targetLayout.x + this.targetLayout.width / 2;\n\n      if (targetMidPosition > this.containerWidth * (2 / 3)) {\n        return TARGET_POSITIONS.RIGHT;\n      } else if (targetMidPosition < this.containerWidth * (1 / 3)) {\n        return TARGET_POSITIONS.LEFT;\n      }\n    }\n\n    return TARGET_POSITIONS.CENTER;\n  }\n\n  getContainerPosition() {\n    if (this.targetLayout) {\n      return {\n        top: this.targetLayout.y,\n        left: this.targetLayout.x\n      };\n    }\n  }\n\n  getHintPosition() {\n    const {\n      position\n    } = this.props;\n    const hintPositionStyle = {\n      alignItems: 'center'\n    };\n\n    if (this.targetLayout?.x) {\n      hintPositionStyle.left = -this.targetLayout.x;\n    }\n\n    if (position === HintPositions.TOP) {\n      hintPositionStyle.bottom = 0;\n    } else if (this.targetLayout?.height) {\n      hintPositionStyle.top = this.targetLayout.height;\n    }\n\n    const targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n    if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-start' : 'flex-end';\n    } else if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n      hintPositionStyle.alignItems = Constants.isRTL ? 'flex-end' : 'flex-start';\n    }\n\n    return hintPositionStyle;\n  }\n\n  getHintPadding() {\n    const paddings = {\n      paddingVertical: this.hintOffset,\n      paddingHorizontal: this.edgeMargins\n    };\n\n    if (this.useSideTip && this.targetLayout?.x) {\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n      if (targetPositionOnScreen === TARGET_POSITIONS.LEFT) {\n        paddings.paddingLeft = this.targetLayout.x;\n      } else if (targetPositionOnScreen === TARGET_POSITIONS.RIGHT && this.targetLayout?.width) {\n        paddings.paddingRight = this.containerWidth - this.targetLayout.x - this.targetLayout.width;\n      }\n    }\n\n    return paddings;\n  }\n\n  getHintAnimatedStyle = () => {\n    const {\n      position\n    } = this.props;\n    const translateY = position === HintPositions.TOP ? -10 : 10;\n    return {\n      opacity: this.visibleAnimated,\n      transform: [{\n        translateY: this.visibleAnimated.interpolate({\n          inputRange: [0, 1],\n          outputRange: [translateY, 0]\n        })\n      }]\n    };\n  };\n\n  getTipPosition() {\n    const {\n      position\n    } = this.props;\n    const tipPositionStyle = {};\n\n    if (position === HintPositions.TOP) {\n      tipPositionStyle.bottom = this.hintOffset - this.tipSize.height;\n      !this.useSideTip ? tipPositionStyle.bottom += 1 : undefined;\n    } else {\n      tipPositionStyle.top = this.hintOffset - this.tipSize.height;\n    }\n\n    if (this.targetLayout?.width && this.targetLayout?.x) {\n      const targetMidWidth = this.targetLayout.width / 2;\n      const tipMidWidth = this.tipSize.width / 2;\n      const leftPosition = this.useSideTip ? this.targetLayout.x : this.targetLayout.x + targetMidWidth - tipMidWidth;\n      const rightPosition = this.useSideTip ? this.containerWidth - this.targetLayout.x - this.targetLayout.width : this.containerWidth - this.targetLayout.x - targetMidWidth - tipMidWidth;\n      const targetPositionOnScreen = this.getTargetPositionOnScreen();\n\n      switch (targetPositionOnScreen) {\n        case TARGET_POSITIONS.LEFT:\n          tipPositionStyle.left = Constants.isRTL ? rightPosition : leftPosition;\n          break;\n\n        case TARGET_POSITIONS.RIGHT:\n          tipPositionStyle.right = Constants.isRTL ? leftPosition : rightPosition;\n          break;\n\n        case TARGET_POSITIONS.CENTER:\n        default:\n          tipPositionStyle.left = this.targetLayout.x + targetMidWidth - tipMidWidth;\n          break;\n      }\n    }\n\n    return tipPositionStyle;\n  } // renderOverlay() {\n  //   const {targetLayoutInWindow} = this.state;\n  //   const {onBackgroundPress} = this.props;\n  //   if (targetLayoutInWindow) {\n  //     const containerPosition = this.getContainerPosition();\n  //     return (\n  //       <View\n  //         style={[\n  //           styles.overlay,\n  //           {\n  //             top: containerPosition.top - targetLayoutInWindow.y,\n  //             left: containerPosition.left - targetLayoutInWindow.x,\n  //           },\n  //         ]}\n  //         pointerEvents=\"box-none\"\n  //       >\n  //         {onBackgroundPress && (\n  //           <TouchableWithoutFeedback style={[StyleSheet.absoluteFillObject]} onPress={onBackgroundPress}>\n  //             <View flex />\n  //           </TouchableWithoutFeedback>\n  //         )}\n  //       </View>\n  //     );\n  //   }\n  // }\n\n\n  renderHintTip() {\n    const {\n      position,\n      color\n    } = this.props;\n    const source = this.useSideTip ? sideTip : middleTip;\n    const flipVertically = position === HintPositions.TOP;\n    const flipHorizontally = this.getTargetPositionOnScreen() === TARGET_POSITIONS.RIGHT;\n    const flipStyle = {\n      transform: [{\n        scaleY: flipVertically ? -1 : 1\n      }, {\n        scaleX: flipHorizontally ? -1 : 1\n      }]\n    };\n    return <Image tintColor={color || DEFAULT_COLOR} source={source} style={[styles.hintTip, this.getTipPosition(), flipStyle]} />;\n  }\n\n  renderContent() {\n    const {\n      message,\n      messageStyle,\n      icon,\n      iconStyle,\n      borderRadius,\n      color,\n      customContent,\n      testID\n    } = this.props;\n    return <View testID={`${testID}.message`} row centerV style={[styles.hint, color && {\n      backgroundColor: color\n    }, !_.isUndefined(borderRadius) && {\n      borderRadius\n    }]} ref={this.setHintRef}>\n        {customContent}\n        {!customContent && icon && <Image source={icon} style={[styles.icon, iconStyle]} />}\n        {!customContent && <Text style={[styles.hintMessage, messageStyle]}>{message}</Text>}\n      </View>;\n  }\n\n  renderHint() {\n    const {\n      testID\n    } = this.props;\n\n    if (this.showHint) {\n      return <View animated style={[{\n        width: this.containerWidth\n      }, styles.animatedContainer, this.getHintPosition(), this.getHintPadding(), this.getHintAnimatedStyle()]} pointerEvents=\"box-none\" testID={testID}>\n          {this.renderHintTip()}\n          {this.renderContent()}\n        </View>;\n    }\n  }\n\n  renderHintContainer() {\n    const {\n      style,\n      ...others\n    } = this.props;\n    delete others.testID;\n    return <View {...others} style={[styles.container, style, this.getContainerPosition()]}>\n        {this.renderHint()}\n      </View>;\n  }\n\n  renderChildren() {\n    const {\n      targetFrame\n    } = this.props;\n\n    if (!targetFrame && isValidElement(this.props.children)) {\n      return React.cloneElement(this.props.children, {\n        collapsable: false,\n        onLayout: this.onTargetLayout,\n        ref: this.setTargetRef,\n        ...this.getAccessibilityInfo()\n      });\n    }\n  }\n\n  render() {\n    const {\n      visible,\n      onBackgroundPress,\n      testID\n    } = this.props;\n\n    if (!visible) {\n      return this.props.children;\n    }\n\n    return <React.Fragment>\n        {onBackgroundPress ? <Modal visible={this.showHint} animationType=\"none\" transparent onBackgroundPress={onBackgroundPress} onRequestClose={onBackgroundPress} testID={`${testID}.modal`}>\n            {this.renderHintContainer()}\n          </Modal> : // this.renderOverlay(),\n      this.renderHintContainer()}\n        {this.renderChildren()}\n      </React.Fragment>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute'\n  },\n  // overlay: {\n  //   position: 'absolute',\n  //   width: Constants.screenWidth,\n  //   height: Constants.screenHeight\n  // },\n  animatedContainer: {\n    position: 'absolute'\n  },\n  hintTip: {\n    position: 'absolute'\n  },\n  hint: {\n    maxWidth: 400,\n    backgroundColor: DEFAULT_COLOR,\n    paddingHorizontal: Spacings.s5,\n    paddingTop: Spacings.s3,\n    paddingBottom: Spacings.s4,\n    borderRadius: BorderRadiuses.br60\n  },\n  hintMessage: { ...Typography.text70,\n    color: Colors.white,\n    flexShrink: 1\n  },\n  icon: {\n    marginRight: Spacings.s4,\n    tintColor: Colors.white\n  }\n});\nexport default asBaseComponent(Hint);"]},"metadata":{},"sourceType":"module"}