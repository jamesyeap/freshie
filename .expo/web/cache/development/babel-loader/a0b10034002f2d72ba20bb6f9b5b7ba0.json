{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/overlay/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\n\nvar gradientImage = require(\"./assets/GradientOverlay.png\");\n\nvar OVERLY_TYPES = {\n  VERTICAL: 'vertical',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  SOLID: 'solid'\n};\n\nvar Overlay = function (_PureComponent) {\n  _inherits(Overlay, _PureComponent);\n\n  var _super = _createSuper(Overlay);\n\n  function Overlay() {\n    var _this;\n\n    _classCallCheck(this, Overlay);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.renderCustomContent = function () {\n      var customContent = _this.props.customContent;\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: styles.customContent,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 12\n        }\n      }, customContent);\n    };\n\n    _this.renderImage = function (style, source) {\n      return React.createElement(Image, {\n        style: [styles.container, style],\n        resizeMode: 'stretch',\n        source: source,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 12\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Overlay, [{\n    key: \"getStyleByType\",\n    value: function getStyleByType() {\n      var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.type;\n      var color = this.props.color;\n\n      switch (type) {\n        case OVERLY_TYPES.TOP:\n          return [styles.top, color && {\n            tintColor: color\n          }];\n\n        case OVERLY_TYPES.BOTTOM:\n          return [styles.bottom, color && {\n            tintColor: color\n          }];\n\n        case OVERLY_TYPES.SOLID:\n          return [styles.solid, color && {\n            backgroundColor: color\n          }];\n\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          type = _this$props.type,\n          customContent = _this$props.customContent;\n      var image = type !== OVERLY_TYPES.SOLID ? gradientImage : undefined;\n\n      if (type === OVERLY_TYPES.VERTICAL) {\n        return React.createElement(React.Fragment, null, this.renderImage([this.getStyleByType(OVERLY_TYPES.TOP), styles.vertical], image), this.renderImage([this.getStyleByType(OVERLY_TYPES.BOTTOM), styles.vertical], image), customContent && this.renderCustomContent());\n      }\n\n      return React.createElement(React.Fragment, null, type && this.renderImage(this.getStyleByType(), image), customContent && this.renderCustomContent());\n    }\n  }]);\n\n  return Overlay;\n}(PureComponent);\n\nOverlay.propTypes = {\n  color: _pt.string,\n  customContent: _pt.element\n};\nOverlay.displayName = 'Overlay';\nOverlay.overlayTypes = OVERLY_TYPES;\nvar styles = StyleSheet.create({\n  container: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    width: undefined\n  }),\n  top: {\n    bottom: undefined,\n    top: 0,\n    height: '75%'\n  },\n  bottom: {\n    bottom: 0,\n    top: undefined,\n    height: '75%',\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  vertical: {\n    height: '40%'\n  },\n  solid: {\n    backgroundColor: Colors.rgba(Colors.dark10, 0.4)\n  },\n  customContent: _objectSpread({}, StyleSheet.absoluteFillObject)\n});\nexport default Overlay;","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/overlay/index.js"],"names":["_pt","React","PureComponent","Colors","View","gradientImage","require","OVERLY_TYPES","VERTICAL","TOP","BOTTOM","SOLID","Overlay","renderCustomContent","customContent","props","styles","renderImage","style","source","container","type","color","top","tintColor","bottom","solid","backgroundColor","image","undefined","getStyleByType","vertical","propTypes","string","element","displayName","overlayTypes","StyleSheet","create","absoluteFillObject","width","height","transform","scaleY","rgba","dark10"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet, Image } from 'react-native';\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\n\nconst gradientImage = require(\"./assets/GradientOverlay.png\");\n\nconst OVERLY_TYPES = {\n  VERTICAL: 'vertical',\n  TOP: 'top',\n  BOTTOM: 'bottom',\n  SOLID: 'solid'\n};\n\n/**\n * @description: Overlay view with types (default, top, bottom, solid)\n * @extends: Image\n * @extendsLink: https://facebook.github.io/react-native/docs/image\n */\nclass Overlay extends PureComponent {\n  static propTypes = {\n    /**\n       * The overlay color\n       */\n    color: _pt.string,\n\n    /**\n       * Custom overlay content to be rendered on top of the image\n       */\n    customContent: _pt.element\n  };\n  static displayName = 'Overlay';\n  static overlayTypes = OVERLY_TYPES;\n\n  getStyleByType(type = this.props.type) {\n    const {\n      color\n    } = this.props;\n\n    switch (type) {\n      case OVERLY_TYPES.TOP:\n        return [styles.top, color && {\n          tintColor: color\n        }];\n\n      case OVERLY_TYPES.BOTTOM:\n        return [styles.bottom, color && {\n          tintColor: color\n        }];\n\n      case OVERLY_TYPES.SOLID:\n        return [styles.solid, color && {\n          backgroundColor: color\n        }];\n\n      default:\n        break;\n    }\n  }\n\n  renderCustomContent = () => {\n    const {\n      customContent\n    } = this.props;\n    return <View pointerEvents=\"box-none\" style={styles.customContent}>\n        {customContent}\n      </View>;\n  };\n  renderImage = (style, source) => {\n    return <Image style={[styles.container, style]} resizeMode={'stretch'} source={source} />;\n  };\n\n  render() {\n    const {\n      type,\n      customContent\n    } = this.props;\n    const image = type !== OVERLY_TYPES.SOLID ? gradientImage : undefined;\n\n    if (type === OVERLY_TYPES.VERTICAL) {\n      return <>\n          {this.renderImage([this.getStyleByType(OVERLY_TYPES.TOP), styles.vertical], image)}\n          {this.renderImage([this.getStyleByType(OVERLY_TYPES.BOTTOM), styles.vertical], image)}\n          {customContent && this.renderCustomContent()}\n        </>;\n    }\n\n    return <>\n        {type && this.renderImage(this.getStyleByType(), image)}\n        {customContent && this.renderCustomContent()}\n      </>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: { ...StyleSheet.absoluteFillObject,\n    width: undefined\n  },\n  top: {\n    bottom: undefined,\n    top: 0,\n    height: '75%'\n  },\n  bottom: {\n    bottom: 0,\n    top: undefined,\n    height: '75%',\n    transform: [{\n      scaleY: -1\n    }]\n  },\n  vertical: {\n    height: '40%'\n  },\n  solid: {\n    backgroundColor: Colors.rgba(Colors.dark10, 0.4)\n  },\n  customContent: { ...StyleSheet.absoluteFillObject\n  }\n});\nexport default Overlay;"]},"metadata":{},"sourceType":"module"}