{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/stateScreen/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LogService } from \"../../services\";\nimport { Constants } from \"../../helpers\";\nimport { Typography, Colors } from \"../../style\";\nimport { BaseComponent } from \"../../commons\";\nimport View from \"../../components/view\";\nimport Image from \"../../components/image\";\nimport Button from \"../../components/button\";\nimport Text from \"../../components/text\";\n\nvar StateScreen = function (_BaseComponent) {\n  _inherits(StateScreen, _BaseComponent);\n\n  var _super = _createSuper(StateScreen);\n\n  function StateScreen(props) {\n    var _this;\n\n    _classCallCheck(this, StateScreen);\n\n    _this = _super.call(this, props);\n\n    if (props.testId) {\n      LogService.deprecationWarn({\n        component: 'StateScreen',\n        oldProp: 'testId',\n        newProp: 'testID'\n      });\n    }\n\n    if (props.source) {\n      LogService.deprecationWarn({\n        component: 'StateScreen',\n        oldProp: 'source',\n        newProp: 'imageSource'\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(StateScreen, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      var _this$props = this.props,\n          source = _this$props.source,\n          imageSource = _this$props.imageSource;\n      var finalSource = imageSource || source;\n      var isRemoteImage = _.isObject(finalSource) && Boolean(finalSource.uri);\n      this.styles = createStyles(isRemoteImage);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          subtitle = _this$props2.subtitle,\n          source = _this$props2.source,\n          imageSource = _this$props2.imageSource,\n          ctaLabel = _this$props2.ctaLabel,\n          onCtaPress = _this$props2.onCtaPress,\n          testId = _this$props2.testId,\n          testID = _this$props2.testID;\n      var finalSource = imageSource || source;\n      return React.createElement(View, {\n        style: this.styles.container,\n        testID: testID || testId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, React.createElement(Image, {\n        style: this.styles.image,\n        resizeMode: 'contain',\n        source: finalSource,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: [this.styles.title],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }\n      }, title), React.createElement(Text, {\n        style: [this.styles.subtitle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, subtitle), React.createElement(Button, {\n        link: true,\n        \"marginT-30\": true,\n        onPress: onCtaPress,\n        labelStyle: this.styles.ctaLabel,\n        label: Constants.isAndroid ? _.toUpper(ctaLabel) : ctaLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return StateScreen;\n}(BaseComponent);\n\nStateScreen.displayName = 'StateScreen';\nStateScreen.propTypes = {\n  imageSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  source: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.any,\n  ctaLabel: PropTypes.string,\n  onCtaPress: PropTypes.func,\n  testId: PropTypes.string\n};\nexport { StateScreen as default };\n\nfunction createStyles(isRemoteImage) {\n  var imageStyle = _.merge({\n    height: 200\n  }, isRemoteImage && {\n    width: Constants.screenWidth * 0.9\n  });\n\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 80,\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    image: imageStyle,\n    title: _objectSpread(_objectSpread({\n      textAlign: 'center'\n    }, Typography.text50), {}, {\n      color: Colors.dark10,\n      fontWeight: '300'\n    }),\n    subtitle: _objectSpread(_objectSpread({\n      textAlign: 'center'\n    }, Typography.text70), {}, {\n      color: Colors.dark40,\n      fontWeight: '300',\n      marginTop: 12\n    }),\n    ctaLabel: _objectSpread({\n      color: Colors.primary\n    }, Typography.text70)\n  });\n}","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/stateScreen/index.js"],"names":["_","PropTypes","React","LogService","Constants","Typography","Colors","BaseComponent","View","Image","Button","Text","StateScreen","props","testId","deprecationWarn","component","oldProp","newProp","source","imageSource","finalSource","isRemoteImage","isObject","Boolean","uri","styles","createStyles","title","subtitle","ctaLabel","onCtaPress","testID","container","image","isAndroid","toUpper","displayName","propTypes","oneOfType","object","number","string","isRequired","any","func","imageStyle","merge","height","width","screenWidth","StyleSheet","create","flex","paddingTop","justifyContent","alignItems","textAlign","text50","color","dark10","fontWeight","text70","dark40","marginTop","primary"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport {LogService} from '../../services';\nimport {Constants} from '../../helpers';\nimport {Typography, Colors} from '../../style';\nimport {BaseComponent} from '../../commons';\nimport View from '../../components/view';\nimport Image from '../../components/image';\nimport Button from '../../components/button';\nimport Text from '../../components/text';\n\n/**\n * @description: Component that shows a full screen for a certain state, like an empty state\n * @image: https://user-images.githubusercontent.com/33805983/34672894-f262ab84-f488-11e7-83f0-4ee0f0ac34ba.png\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/EmptyStateScreen.js\n */\nexport default class StateScreen extends BaseComponent {\n  static displayName = 'StateScreen';\n  static propTypes = {\n    /**\n     * The image source that's showing at the top. use an image that was required locally\n     */\n    imageSource: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    source: PropTypes.oneOfType([PropTypes.object, PropTypes.number]), // TODO: remove after deprecation\n    /**\n     * To to show as the title\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * Text to to show as the subtitle\n     */\n    subtitle: PropTypes.any,\n    /**\n     * Text to to show in the \"call to action\" button\n     */\n    ctaLabel: PropTypes.string,\n    /**\n     * Action handler for \"call to action\" button\n     */\n    onCtaPress: PropTypes.func,\n    /**\n     * Use to identify the container in tests\n     */\n    testId: PropTypes.string\n  };\n\n  constructor(props) {\n    super(props);\n\n    if (props.testId) {\n      LogService.deprecationWarn({component: 'StateScreen', oldProp: 'testId', newProp: 'testID'});\n\n    }\n    if (props.source) {\n      LogService.deprecationWarn({component: 'StateScreen', oldProp: 'source', newProp: 'imageSource'});\n    }\n  }\n\n  generateStyles() {\n    const {source, imageSource} = this.props;\n    const finalSource = imageSource || source;\n\n    const isRemoteImage = _.isObject(finalSource) && Boolean(finalSource.uri);\n    this.styles = createStyles(isRemoteImage);\n  }\n\n  render() {\n    // TODO: remove testId and source after deprecation\n    const {title, subtitle, source, imageSource, ctaLabel, onCtaPress, testId, testID} = this.props;\n    const finalSource = imageSource || source;\n\n    return (\n      <View style={this.styles.container} testID={testID || testId}>\n        <Image style={this.styles.image} resizeMode={'contain'} source={finalSource}/>\n        <Text style={[this.styles.title]}>{title}</Text>\n        <Text style={[this.styles.subtitle]}>{subtitle}</Text>\n        <Button\n          link\n          marginT-30\n          onPress={onCtaPress}\n          labelStyle={this.styles.ctaLabel}\n          label={Constants.isAndroid ? _.toUpper(ctaLabel) : ctaLabel}\n        />\n      </View>\n    );\n  }\n}\n\nfunction createStyles(isRemoteImage) {\n  const imageStyle = _.merge({height: 200}, isRemoteImage && {width: Constants.screenWidth * 0.9});\n  return StyleSheet.create({\n    container: {\n      flex: 1,\n      paddingTop: 80,\n      justifyContent: 'flex-start',\n      alignItems: 'center'\n    },\n    image: imageStyle,\n    title: {\n      textAlign: 'center',\n      ...Typography.text50,\n      color: Colors.dark10,\n      fontWeight: '300'\n    },\n    subtitle: {\n      textAlign: 'center',\n      ...Typography.text70,\n      color: Colors.dark40,\n      fontWeight: '300',\n      marginTop: 12\n    },\n    ctaLabel: {\n      color: Colors.primary,\n      ...Typography.text70\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}