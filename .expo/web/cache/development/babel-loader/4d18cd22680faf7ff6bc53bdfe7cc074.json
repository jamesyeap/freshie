{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"style\", \"leftItem\", \"rightItems\", \"onToggleSwipeLeft\", \"leftToggleHapticTrigger\"];\nvar _jsxFileName = \"/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/drawer/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport memoize from 'memoize-one';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { RectButton } from 'react-native-gesture-handler';\nimport { asBaseComponent } from \"../../commons/new\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Swipeable from \"./Swipeable\";\nimport { LogService } from \"../../services\";\nvar DEFAULT_BG = Colors.primary;\nvar DEFAULT_BOUNCINESS = 0;\n\nvar Drawer = function (_PureComponent) {\n  _inherits(Drawer, _PureComponent);\n\n  var _super = _createSuper(Drawer);\n\n  function Drawer(props) {\n    var _this;\n\n    _classCallCheck(this, Drawer);\n\n    _this = _super.call(this, props);\n    _this._swipeableRow = React.createRef();\n    _this.animationOptions = {\n      bounciness: _this.props.bounciness || DEFAULT_BOUNCINESS\n    };\n    _this.leftActionX = new Animated.Value(0);\n    _this.getLeftActionsContainerStyle = memoize(function (leftItem, rightItems) {\n      return _this.getActionsContainerStyle(Constants.isRTL ? rightItems : [leftItem]);\n    });\n    _this.getRightActionsContainerStyle = memoize(function (rightItems, leftItem) {\n      return _this.getActionsContainerStyle(Constants.isRTL ? [leftItem] : rightItems);\n    });\n\n    _this.closeDrawer = function () {\n      var _this$_swipeableRow$c;\n\n      (_this$_swipeableRow$c = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c.close();\n    };\n\n    _this.openLeft = function () {\n      var _this$_swipeableRow$c2;\n\n      (_this$_swipeableRow$c2 = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c2.openLeft();\n    };\n\n    _this.openLeftFull = function () {\n      var _this$_swipeableRow$c3;\n\n      (_this$_swipeableRow$c3 = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c3.openLeftFull();\n    };\n\n    _this.toggleLeft = function () {\n      var _this$_swipeableRow$c4;\n\n      (_this$_swipeableRow$c4 = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c4.toggleLeft();\n    };\n\n    _this.openRight = function () {\n      var _this$_swipeableRow$c5;\n\n      (_this$_swipeableRow$c5 = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c5.openRight();\n    };\n\n    _this.openRightFull = function () {\n      var _this$_swipeableRow$c6;\n\n      (_this$_swipeableRow$c6 = _this._swipeableRow.current) == null ? void 0 : _this$_swipeableRow$c6.openRightFull();\n    };\n\n    _this.onActionPress = function (item) {\n      if (!item.keepOpen) {\n        _this.closeDrawer();\n      }\n\n      _.invoke(item, 'onPress', _this.props);\n    };\n\n    _this.onSwipeableWillOpen = function () {\n      _.invoke(_this.props, 'onSwipeableWillOpen', _this.props);\n    };\n\n    _this.onSwipeableWillClose = function () {\n      _.invoke(_this.props, 'onSwipeableWillClose', _this.props);\n    };\n\n    _this.onToggleSwipeLeft = function (options) {\n      if (_this.props.onToggleSwipeLeft) {\n        _this.animateItem(options);\n      }\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      var actions = _this.getAccessibilityActions(true);\n\n      var action = _.find(actions, function (o) {\n        return o.name === event.nativeEvent.actionName;\n      });\n\n      _.invoke(action, 'onPress');\n    };\n\n    _this.renderLeftActions = function (progress) {\n      var leftItem = _this.props.leftItem;\n      var leftItems = leftItem ? [leftItem] : undefined;\n      return _this.renderActions(leftItems, progress);\n    };\n\n    _this.renderRightActions = function (progress) {\n      var rightItems = _this.props.rightItems;\n      return _this.renderActions(rightItems, progress);\n    };\n\n    _this.renderAction = function (_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          progress = _ref.progress,\n          itemsCount = _ref.itemsCount;\n      var _this$props = _this.props,\n          itemsTintColor = _this$props.itemsTintColor,\n          itemsIconSize = _this$props.itemsIconSize,\n          itemsTextStyle = _this$props.itemsTextStyle,\n          itemsMinWidth = _this$props.itemsMinWidth;\n      var inputRange = [index / itemsCount, (index + 1) / itemsCount];\n      var outputRange = [0.2, 1];\n      var scale = progress.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange,\n        extrapolate: 'clamp'\n      });\n      var opacity = progress.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange,\n        extrapolate: 'clamp'\n      });\n      return React.createElement(RectButton, {\n        key: index,\n        testID: item.testID,\n        style: [styles.action, item.style, {\n          backgroundColor: item.background || DEFAULT_BG,\n          width: item.width,\n          minWidth: itemsMinWidth\n        }],\n        onPress: function onPress() {\n          return _this.onActionPress(item);\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 12\n        }\n      }, item.icon && React.createElement(Animated.Image, {\n        source: item.icon,\n        style: [styles.actionIcon, {\n          width: itemsIconSize,\n          height: itemsIconSize,\n          tintColor: itemsTintColor,\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        }],\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 23\n        }\n      }), item.text && React.createElement(Animated.Text, {\n        style: [styles.actionText, {\n          color: itemsTintColor,\n          opacity: opacity,\n          transform: [{\n            scale: scale\n          }]\n        }, itemsTextStyle],\n        accessibilityElementsHidden: true,\n        importantForAccessibility: \"no-hide-descendants\",\n        accessible: false,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }\n      }, item.text));\n    };\n\n    _this.leftRender = props.leftItem ? Constants.isRTL ? _this.renderRightActions : _this.renderLeftActions : undefined;\n    _this.rightRender = props.rightItems ? Constants.isRTL ? _this.renderLeftActions : _this.renderRightActions : undefined;\n    return _this;\n  }\n\n  _createClass(Drawer, [{\n    key: \"getActionsContainerStyle\",\n    value: function getActionsContainerStyle(items) {\n      return {\n        backgroundColor: _.get(_.first(items), 'background', DEFAULT_BG)\n      };\n    }\n  }, {\n    key: \"animateItem\",\n    value: function animateItem(_ref2) {\n      var _this2 = this;\n\n      var rowWidth = _ref2.rowWidth,\n          leftWidth = _ref2.leftWidth,\n          dragX = _ref2.dragX,\n          released = _ref2.released,\n          resetItemPosition = _ref2.resetItemPosition;\n      var toValue = resetItemPosition ? 0 : dragX ? dragX - leftWidth : rowWidth * 0.6 - leftWidth;\n      Animated.timing(this.leftActionX, {\n        toValue: toValue,\n        easing: Easing.bezier(0.25, 1, 0.5, 1),\n        duration: 200,\n        delay: 100,\n        useNativeDriver: true\n      }).start(function () {\n        if (released) {\n          _this2.animateItem({\n            released: false,\n            resetItemPosition: true\n          });\n\n          _this2.closeDrawer();\n\n          setTimeout(function () {\n            _.invoke(_this2.props, 'onToggleSwipeLeft', _this2.props);\n          }, 150);\n        }\n      });\n    }\n  }, {\n    key: \"getAccessibilityActions\",\n    value: function getAccessibilityActions() {\n      var withOnPress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var _this$props2 = this.props,\n          rightItems = _this$props2.rightItems,\n          leftItem = _this$props2.leftItem;\n      var actions = [];\n\n      if (leftItem != null && leftItem.onPress && leftItem.text) {\n        var action = {\n          name: leftItem.text,\n          label: leftItem.text\n        };\n\n        if (withOnPress) {\n          action.onPress = leftItem.onPress;\n        }\n\n        actions.push(action);\n      }\n\n      if (rightItems) {\n        rightItems.forEach(function (item) {\n          if (item.onPress && item.text) {\n            var _action = {\n              name: item.text,\n              label: item.text\n            };\n\n            if (withOnPress) {\n              _action.onPress = item.onPress;\n            }\n\n            actions.push(_action);\n          }\n        });\n      }\n\n      return actions;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions(items, progress) {\n      var _this3 = this;\n\n      if (items) {\n        return React.createElement(View, {\n          animated: true,\n          row: true,\n          style: {\n            transform: [{\n              translateX: this.leftActionX\n            }]\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 9\n          }\n        }, _.map(items, function (item, index) {\n          return _this3.renderAction({\n            item: item,\n            index: items.length - index - 1,\n            progress: progress,\n            itemsCount: items.length\n          });\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          style = _this$props3.style,\n          leftItem = _this$props3.leftItem,\n          rightItems = _this$props3.rightItems,\n          onToggleSwipeLeft = _this$props3.onToggleSwipeLeft,\n          leftToggleHapticTrigger = _this$props3.leftToggleHapticTrigger,\n          others = _objectWithoutProperties(_this$props3, _excluded);\n\n      leftToggleHapticTrigger && LogService.deprecationWarn({\n        component: 'Drawer',\n        oldProp: 'leftToggleHapticTrigger'\n      });\n      return React.createElement(Swipeable, _extends({}, others, {\n        ref: this._swipeableRow,\n        friction: 1,\n        containerStyle: style,\n        animationOptions: this.animationOptions,\n        renderLeftActions: this.leftRender,\n        renderRightActions: this.rightRender,\n        rightActionsContainerStyle: this.getRightActionsContainerStyle(rightItems, leftItem),\n        leftActionsContainerStyle: this.getLeftActionsContainerStyle(leftItem, rightItems),\n        onSwipeableWillOpen: this.onSwipeableWillOpen,\n        onSwipeableWillClose: this.onSwipeableWillClose,\n        onToggleSwipeLeft: onToggleSwipeLeft && this.onToggleSwipeLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 12\n        }\n      }), React.createElement(View, _extends({\n        accessible: true,\n        accessibilityActions: this.getAccessibilityActions(),\n        onAccessibilityAction: this.onAccessibilityAction\n      }, extractAccessibilityProps(this.props), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }\n      }), children));\n    }\n  }]);\n\n  return Drawer;\n}(PureComponent);\n\nDrawer.propTypes = {\n  bounciness: _pt.number,\n  rightItems: _pt.arrayOf(_pt.shape({\n    width: _pt.number,\n    background: _pt.string,\n    text: _pt.string,\n    icon: _pt.number,\n    keepOpen: _pt.bool,\n    testID: _pt.string\n  })),\n  leftItem: _pt.shape({\n    width: _pt.number,\n    background: _pt.string,\n    text: _pt.string,\n    icon: _pt.number,\n    keepOpen: _pt.bool,\n    testID: _pt.string\n  }),\n  itemsMinWidth: _pt.number,\n  itemsTintColor: _pt.string,\n  itemsIconSize: _pt.number,\n  useNativeAnimations: _pt.bool,\n  fullSwipeLeft: _pt.bool,\n  fullLeftThreshold: _pt.number,\n  fullSwipeRight: _pt.bool,\n  fullRightThreshold: _pt.number,\n  disableHaptic: _pt.bool,\n  customValue: _pt.any,\n  testID: _pt.string\n};\nDrawer.displayName = 'Drawer';\nDrawer.defaultProps = {\n  itemsTintColor: Colors.white,\n  itemsIconSize: 24\n};\nexport default asBaseComponent(Drawer);\nvar styles = StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    backgroundColor: '#388e3c'\n  },\n  actionIcon: {\n    width: 30,\n    marginHorizontal: 10\n  },\n  actionText: {\n    color: '#ffffff'\n  },\n  action: {\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#dd2c00'\n  }\n});","map":{"version":3,"sources":["/Users/jamesyeap1/freshie/node_modules/react-native-ui-lib/src/components/drawer/index.js"],"names":["_pt","_","React","PureComponent","memoize","RectButton","asBaseComponent","extractAccessibilityProps","Constants","Colors","View","Swipeable","LogService","DEFAULT_BG","primary","DEFAULT_BOUNCINESS","Drawer","props","_swipeableRow","createRef","animationOptions","bounciness","leftActionX","Animated","Value","getLeftActionsContainerStyle","leftItem","rightItems","getActionsContainerStyle","isRTL","getRightActionsContainerStyle","closeDrawer","current","close","openLeft","openLeftFull","toggleLeft","openRight","openRightFull","onActionPress","item","keepOpen","invoke","onSwipeableWillOpen","onSwipeableWillClose","onToggleSwipeLeft","options","animateItem","onAccessibilityAction","event","actions","getAccessibilityActions","action","find","o","name","nativeEvent","actionName","renderLeftActions","progress","leftItems","undefined","renderActions","renderRightActions","renderAction","index","itemsCount","itemsTintColor","itemsIconSize","itemsTextStyle","itemsMinWidth","inputRange","outputRange","scale","interpolate","extrapolate","opacity","testID","styles","style","backgroundColor","background","width","minWidth","icon","actionIcon","height","tintColor","transform","text","actionText","color","leftRender","rightRender","items","get","first","rowWidth","leftWidth","dragX","released","resetItemPosition","toValue","timing","easing","Easing","bezier","duration","delay","useNativeDriver","start","setTimeout","withOnPress","onPress","label","push","forEach","translateX","map","length","children","leftToggleHapticTrigger","others","deprecationWarn","component","oldProp","propTypes","number","arrayOf","shape","string","bool","useNativeAnimations","fullSwipeLeft","fullLeftThreshold","fullSwipeRight","fullRightThreshold","disableHaptic","customValue","any","displayName","defaultProps","white","StyleSheet","create","leftAction","flex","justifyContent","alignItems","marginHorizontal","paddingHorizontal"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport memoize from 'memoize-one';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { RectButton } from 'react-native-gesture-handler';\nimport { asBaseComponent } from \"../../commons/new\";\nimport { extractAccessibilityProps } from \"../../commons/modifiers\";\nimport { Constants } from \"../../helpers\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Swipeable from \"./Swipeable\";\nimport { LogService } from \"../../services\";\nconst DEFAULT_BG = Colors.primary;\nconst DEFAULT_BOUNCINESS = 0;\n\n/**\n * @description: Drawer Component\n * @important: If your app works with RNN, your screen must be wrapped\n * with gestureHandlerRootHOC from 'react-native-gesture-handler'. see\n * @importantLink: https://kmagiera.github.io/react-native-gesture-handler/docs/getting-started.html#with-wix-react-native-navigation-https-githubcom-wix-react-native-navigation\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Drawer/Drawer.gif?raw=true\n */\nclass Drawer extends PureComponent {\n  static propTypes = {\n    /**\n       * The drawer animation bounciness\n       */\n    bounciness: _pt.number,\n\n    /**\n       * The bottom layer's items to appear when opened from the right\n       */\n    rightItems: _pt.arrayOf(_pt.shape({\n      width: _pt.number,\n      background: _pt.string,\n      text: _pt.string,\n      icon: _pt.number,\n      keepOpen: _pt.bool,\n      testID: _pt.string\n    })),\n\n    /**\n       * The bottom layer's item to appear when opened from the left (a single item)\n       */\n    leftItem: _pt.shape({\n      width: _pt.number,\n      background: _pt.string,\n      text: _pt.string,\n      icon: _pt.number,\n      keepOpen: _pt.bool,\n      testID: _pt.string\n    }),\n\n    /**\n       * Set a different minimum width\n       */\n    itemsMinWidth: _pt.number,\n\n    /**\n       * The color for the text and icon tint of the items\n       */\n    itemsTintColor: _pt.string,\n\n    /**\n       * The items' icon size\n       */\n    itemsIconSize: _pt.number,\n\n    /**\n       * Perform the animation in natively\n       */\n    useNativeAnimations: _pt.bool,\n\n    /**\n       * Whether to allow a full left swipe\n       */\n    fullSwipeLeft: _pt.bool,\n\n    /**\n       * Threshold for a left full swipe (0-1)\n       */\n    fullLeftThreshold: _pt.number,\n\n    /**\n       * Whether to allow a full right swipe\n       */\n    fullSwipeRight: _pt.bool,\n\n    /**\n       * Threshold for a right full swipe (0-1)\n       */\n    fullRightThreshold: _pt.number,\n\n    /**\n       * Whether to disable the haptic\n       */\n    disableHaptic: _pt.bool,\n\n    /**\n       * Custom value of any type to pass on to the component and receive back in the action callbacks\n       */\n    customValue: _pt.any,\n\n    /**\n       * Used as testing identifier\n       */\n    testID: _pt.string\n  };\n  static displayName = 'Drawer';\n  static defaultProps = {\n    itemsTintColor: Colors.white,\n    itemsIconSize: 24\n  };\n  _swipeableRow = React.createRef();\n  animationOptions = {\n    bounciness: this.props.bounciness || DEFAULT_BOUNCINESS\n  };\n  leftActionX = new Animated.Value(0);\n\n  constructor(props) {\n    super(props);\n    this.leftRender = props.leftItem ? Constants.isRTL ? this.renderRightActions : this.renderLeftActions : undefined;\n    this.rightRender = props.rightItems ? Constants.isRTL ? this.renderLeftActions : this.renderRightActions : undefined;\n  }\n\n  getLeftActionsContainerStyle = memoize((leftItem, rightItems) => {\n    return this.getActionsContainerStyle(Constants.isRTL ? rightItems : [leftItem]);\n  });\n  getRightActionsContainerStyle = memoize((rightItems, leftItem) => {\n    return this.getActionsContainerStyle(Constants.isRTL ? [leftItem] : rightItems);\n  });\n\n  getActionsContainerStyle(items) {\n    return {\n      backgroundColor: _.get(_.first(items), 'background', DEFAULT_BG)\n    };\n  }\n  /** Actions */\n\n\n  closeDrawer = () => {\n    this._swipeableRow.current?.close();\n  };\n  openLeft = () => {\n    this._swipeableRow.current?.openLeft();\n  };\n  openLeftFull = () => {\n    this._swipeableRow.current?.openLeftFull();\n  };\n  toggleLeft = () => {\n    this._swipeableRow.current?.toggleLeft();\n  };\n  openRight = () => {\n    this._swipeableRow.current?.openRight();\n  };\n  openRightFull = () => {\n    this._swipeableRow.current?.openRightFull();\n  };\n  /** Events */\n\n  onActionPress = item => {\n    if (!item.keepOpen) {\n      this.closeDrawer();\n    }\n\n    _.invoke(item, 'onPress', this.props);\n  };\n  onSwipeableWillOpen = () => {\n    _.invoke(this.props, 'onSwipeableWillOpen', this.props);\n  };\n  onSwipeableWillClose = () => {\n    _.invoke(this.props, 'onSwipeableWillClose', this.props);\n  };\n  onToggleSwipeLeft = options => {\n    if (this.props.onToggleSwipeLeft) {\n      this.animateItem(options);\n    }\n  };\n\n  animateItem({\n    rowWidth,\n    leftWidth,\n    dragX,\n    released,\n    resetItemPosition\n  }) {\n    const toValue = resetItemPosition ? 0 : dragX ? dragX - leftWidth : rowWidth * 0.6 - leftWidth;\n    Animated.timing(this.leftActionX, {\n      toValue,\n      easing: Easing.bezier(0.25, 1, 0.5, 1),\n      duration: 200,\n      delay: 100,\n      useNativeDriver: true\n    }).start(() => {\n      if (released) {\n        // reset Drawer\n        this.animateItem({\n          released: false,\n          resetItemPosition: true\n        });\n        this.closeDrawer();\n        setTimeout(() => {\n          _.invoke(this.props, 'onToggleSwipeLeft', this.props);\n        }, 150);\n      }\n    });\n  }\n  /** Accessability */\n\n\n  getAccessibilityActions(withOnPress = false) {\n    const {\n      rightItems,\n      leftItem\n    } = this.props;\n    const actions = [];\n\n    if (leftItem?.onPress && leftItem.text) {\n      const action = {\n        name: leftItem.text,\n        label: leftItem.text\n      };\n\n      if (withOnPress) {\n        action.onPress = leftItem.onPress;\n      }\n\n      actions.push(action);\n    }\n\n    if (rightItems) {\n      rightItems.forEach(item => {\n        if (item.onPress && item.text) {\n          const action = {\n            name: item.text,\n            label: item.text\n          };\n\n          if (withOnPress) {\n            action.onPress = item.onPress;\n          }\n\n          actions.push(action);\n        }\n      });\n    }\n\n    return actions;\n  }\n\n  onAccessibilityAction = event => {\n    const actions = this.getAccessibilityActions(true);\n\n    const action = _.find(actions, o => {\n      // return o.text === event.nativeEvent.action;\n      return o.name === event.nativeEvent.actionName;\n    });\n\n    _.invoke(action, 'onPress');\n  };\n  /** Renders */\n  // TODO: enable support for rendering more than one left item\n\n  renderLeftActions = progress =>\n  /* , dragX: Animated.Value */\n  {\n    const {\n      leftItem\n    } = this.props;\n    const leftItems = leftItem ? [leftItem] : undefined;\n    return this.renderActions(leftItems, progress\n    /* , dragX */\n    );\n  };\n  renderRightActions = progress =>\n  /* , dragX: Animated.Value */\n  {\n    const {\n      rightItems\n    } = this.props;\n    return this.renderActions(rightItems, progress\n    /* , dragX */\n    );\n  };\n\n  renderActions(items, progress)\n  /* , dragX: Animated.Value */\n  {\n    if (items) {\n      return (// @ts-ignore\n        <View animated row style={{\n          transform: [{\n            translateX: this.leftActionX\n          }]\n        }}>\n          {_.map(items, (item, index) => {\n            return this.renderAction({\n              item,\n              index: items.length - index - 1,\n              progress,\n              // dragX,\n              itemsCount: items.length\n            });\n          })}\n        </View>\n      );\n    }\n  }\n\n  renderAction = ({\n    item,\n    index,\n    progress,\n    itemsCount\n  }) => {\n    const {\n      itemsTintColor,\n      itemsIconSize,\n      itemsTextStyle,\n      itemsMinWidth\n    } = this.props;\n    const inputRange = [index / itemsCount, (index + 1) / itemsCount];\n    const outputRange = [0.2, 1];\n    const scale = progress.interpolate({\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp'\n    });\n    const opacity = progress.interpolate({\n      inputRange,\n      outputRange,\n      extrapolate: 'clamp'\n    });\n    return <RectButton key={index} testID={item.testID} style={[styles.action, item.style, {\n      backgroundColor: item.background || DEFAULT_BG,\n      width: item.width,\n      minWidth: itemsMinWidth\n    }]} onPress={() => this.onActionPress(item)}>\n        {item.icon && <Animated.Image source={item.icon} style={[styles.actionIcon, {\n        width: itemsIconSize,\n        height: itemsIconSize,\n        tintColor: itemsTintColor,\n        opacity,\n        transform: [{\n          scale\n        }]\n      }]} />}\n        {item.text && <Animated.Text style={[styles.actionText, {\n        color: itemsTintColor,\n        opacity,\n        transform: [{\n          scale\n        }]\n      }, itemsTextStyle]} accessibilityElementsHidden importantForAccessibility=\"no-hide-descendants\" accessible={false}>\n            {item.text}\n          </Animated.Text>}\n      </RectButton>;\n  };\n\n  render() {\n    const {\n      children,\n      style,\n      leftItem,\n      rightItems,\n      onToggleSwipeLeft,\n      leftToggleHapticTrigger,\n      ...others\n    } = this.props;\n    leftToggleHapticTrigger && LogService.deprecationWarn({\n      component: 'Drawer',\n      oldProp: 'leftToggleHapticTrigger'\n    });\n    return <Swipeable {...others} ref={this._swipeableRow} friction={1} containerStyle={style} animationOptions={this.animationOptions} renderLeftActions={this.leftRender} renderRightActions={this.rightRender} rightActionsContainerStyle={this.getRightActionsContainerStyle(rightItems, leftItem)} leftActionsContainerStyle={this.getLeftActionsContainerStyle(leftItem, rightItems)} onSwipeableWillOpen={this.onSwipeableWillOpen} onSwipeableWillClose={this.onSwipeableWillClose} onToggleSwipeLeft={onToggleSwipeLeft && this.onToggleSwipeLeft}>\n        <View accessible accessibilityActions={this.getAccessibilityActions()} onAccessibilityAction={this.onAccessibilityAction} {...extractAccessibilityProps(this.props)}>\n          {children}\n        </View>\n      </Swipeable>;\n  }\n\n}\n\nexport default asBaseComponent(Drawer);\nconst styles = StyleSheet.create({\n  leftAction: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems:\n    /* Constants.isRTL ? 'flex-end' :  */\n    'flex-start',\n    backgroundColor: '#388e3c'\n  },\n  actionIcon: {\n    width: 30,\n    marginHorizontal: 10\n  },\n  actionText: {\n    color: '#ffffff'\n  },\n  action: {\n    paddingHorizontal: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#dd2c00'\n  }\n});"]},"metadata":{},"sourceType":"module"}